# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

require 'date'
require 'google/apis/core/base_service'
require 'google/apis/core/json_representation'
require 'google/apis/core/hashable'
require 'google/apis/errors'

module Google
  module Apis
    module AiplatformV1beta1
      
      # Message that represents an arbitrary HTTP body. It should only be used for
      # payload formats that can't be represented as JSON, such as raw binary or an
      # HTML page. This message can be used both in streaming and non-streaming API
      # methods in the request as well as the response. It can be used as a top-level
      # request field, which is convenient if one wants to extract parameters from
      # either the URL or HTTP template into the request fields and also want access
      # to the raw HTTP body. Example: message GetResourceRequest ` // A unique
      # request id. string request_id = 1; // The raw HTTP body is bound to this field.
      # google.api.HttpBody http_body = 2; ` service ResourceService ` rpc
      # GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc
      # UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); ` Example
      # with streaming methods: service CaldavService ` rpc GetCalendar(stream google.
      # api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream
      # google.api.HttpBody) returns (stream google.api.HttpBody); ` Use of this type
      # only changes how the request and response bodies are handled, all other
      # features will continue to work unchanged.
      class GoogleApiHttpBody
        include Google::Apis::Core::Hashable
      
        # The HTTP Content-Type header value specifying the content type of the body.
        # Corresponds to the JSON property `contentType`
        # @return [String]
        attr_accessor :content_type
      
        # The HTTP request/response body as raw binary.
        # Corresponds to the JSON property `data`
        # NOTE: Values are automatically base64 encoded/decoded in the client library.
        # @return [String]
        attr_accessor :data
      
        # Application specific response metadata. Must be set in the first response for
        # streaming APIs.
        # Corresponds to the JSON property `extensions`
        # @return [Array<Hash<String,Object>>]
        attr_accessor :extensions
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @content_type = args[:content_type] if args.key?(:content_type)
          @data = args[:data] if args.key?(:data)
          @extensions = args[:extensions] if args.key?(:extensions)
        end
      end
      
      # Parameters that configure the active learning pipeline. Active learning will
      # label the data incrementally by several iterations. For every iteration, it
      # will select a batch of data based on the sampling strategy.
      class GoogleCloudAiplatformV1beta1ActiveLearningConfig
        include Google::Apis::Core::Hashable
      
        # Max number of human labeled DataItems.
        # Corresponds to the JSON property `maxDataItemCount`
        # @return [Fixnum]
        attr_accessor :max_data_item_count
      
        # Max percent of total DataItems for human labeling.
        # Corresponds to the JSON property `maxDataItemPercentage`
        # @return [Fixnum]
        attr_accessor :max_data_item_percentage
      
        # Active learning data sampling config. For every active learning labeling
        # iteration, it will select a batch of data based on the sampling strategy.
        # Corresponds to the JSON property `sampleConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SampleConfig]
        attr_accessor :sample_config
      
        # CMLE training config. For every active learning labeling iteration, system
        # will train a machine learning model on CMLE. The trained model will be used by
        # data sampling algorithm to select DataItems.
        # Corresponds to the JSON property `trainingConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TrainingConfig]
        attr_accessor :training_config
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @max_data_item_count = args[:max_data_item_count] if args.key?(:max_data_item_count)
          @max_data_item_percentage = args[:max_data_item_percentage] if args.key?(:max_data_item_percentage)
          @sample_config = args[:sample_config] if args.key?(:sample_config)
          @training_config = args[:training_config] if args.key?(:training_config)
        end
      end
      
      # Request message for MetadataService.AddContextArtifactsAndExecutions.
      class GoogleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsRequest
        include Google::Apis::Core::Hashable
      
        # The resource names of the Artifacts to attribute to the Context. Format: `
        # projects/`project`/locations/`location`/metadataStores/`metadatastore`/
        # artifacts/`artifact``
        # Corresponds to the JSON property `artifacts`
        # @return [Array<String>]
        attr_accessor :artifacts
      
        # The resource names of the Executions to associate with the Context. Format: `
        # projects/`project`/locations/`location`/metadataStores/`metadatastore`/
        # executions/`execution``
        # Corresponds to the JSON property `executions`
        # @return [Array<String>]
        attr_accessor :executions
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @artifacts = args[:artifacts] if args.key?(:artifacts)
          @executions = args[:executions] if args.key?(:executions)
        end
      end
      
      # Response message for MetadataService.AddContextArtifactsAndExecutions.
      class GoogleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsResponse
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Request message for MetadataService.AddContextChildren.
      class GoogleCloudAiplatformV1beta1AddContextChildrenRequest
        include Google::Apis::Core::Hashable
      
        # The resource names of the child Contexts.
        # Corresponds to the JSON property `childContexts`
        # @return [Array<String>]
        attr_accessor :child_contexts
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @child_contexts = args[:child_contexts] if args.key?(:child_contexts)
        end
      end
      
      # Response message for MetadataService.AddContextChildren.
      class GoogleCloudAiplatformV1beta1AddContextChildrenResponse
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Request message for MetadataService.AddExecutionEvents.
      class GoogleCloudAiplatformV1beta1AddExecutionEventsRequest
        include Google::Apis::Core::Hashable
      
        # The Events to create and add.
        # Corresponds to the JSON property `events`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Event>]
        attr_accessor :events
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @events = args[:events] if args.key?(:events)
        end
      end
      
      # Response message for MetadataService.AddExecutionEvents.
      class GoogleCloudAiplatformV1beta1AddExecutionEventsResponse
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Request message for VizierService.AddTrialMeasurement.
      class GoogleCloudAiplatformV1beta1AddTrialMeasurementRequest
        include Google::Apis::Core::Hashable
      
        # A message representing a Measurement of a Trial. A Measurement contains the
        # Metrics got by executing a Trial using suggested hyperparameter values.
        # Corresponds to the JSON property `measurement`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Measurement]
        attr_accessor :measurement
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @measurement = args[:measurement] if args.key?(:measurement)
        end
      end
      
      # Used to assign specific AnnotationSpec to a particular area of a DataItem or
      # the whole part of the DataItem.
      class GoogleCloudAiplatformV1beta1Annotation
        include Google::Apis::Core::Hashable
      
        # References an API call. It contains more information about long running
        # operation and Jobs that are triggered by the API call.
        # Corresponds to the JSON property `annotationSource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1UserActionReference]
        attr_accessor :annotation_source
      
        # Output only. Timestamp when this Annotation was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Optional. Used to perform consistent read-modify-write updates. If not set, a
        # blind "overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # Optional. The labels with user-defined metadata to organize your Annotations.
        # Label keys and values can be no longer than 64 characters (Unicode codepoints),
        # can only contain lowercase letters, numeric characters, underscores and
        # dashes. International characters are allowed. No more than 64 user labels can
        # be associated with one Annotation(System labels are excluded). See https://goo.
        # gl/xmQnxf for more information and examples of labels. System reserved label
        # keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
        # Following system labels exist for each Annotation: * "aiplatform.googleapis.
        # com/annotation_set_name": optional, name of the UI's annotation set this
        # Annotation belongs to. If not set, the Annotation is not visible in the UI. * "
        # aiplatform.googleapis.com/payload_schema": output only, its value is the
        # payload_schema's title.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Output only. Resource name of the Annotation.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Required. The schema of the payload can be found in payload_schema.
        # Corresponds to the JSON property `payload`
        # @return [Object]
        attr_accessor :payload
      
        # Required. Google Cloud Storage URI points to a YAML file describing payload.
        # The schema is defined as an [OpenAPI 3.0.2 Schema Object](https://github.com/
        # OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). The
        # schema files that can be used here are found in gs://google-cloud-aiplatform/
        # schema/dataset/annotation/, note that the chosen schema must be consistent
        # with the parent Dataset's metadata.
        # Corresponds to the JSON property `payloadSchemaUri`
        # @return [String]
        attr_accessor :payload_schema_uri
      
        # Output only. Timestamp when this Annotation was last updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotation_source = args[:annotation_source] if args.key?(:annotation_source)
          @create_time = args[:create_time] if args.key?(:create_time)
          @etag = args[:etag] if args.key?(:etag)
          @labels = args[:labels] if args.key?(:labels)
          @name = args[:name] if args.key?(:name)
          @payload = args[:payload] if args.key?(:payload)
          @payload_schema_uri = args[:payload_schema_uri] if args.key?(:payload_schema_uri)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # Identifies a concept with which DataItems may be annotated with.
      class GoogleCloudAiplatformV1beta1AnnotationSpec
        include Google::Apis::Core::Hashable
      
        # Output only. Timestamp when this AnnotationSpec was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Required. The user-defined name of the AnnotationSpec. The name can be up to
        # 128 characters long and can consist of any UTF-8 characters.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Optional. Used to perform consistent read-modify-write updates. If not set, a
        # blind "overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # Output only. Resource name of the AnnotationSpec.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Output only. Timestamp when AnnotationSpec was last updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @display_name = args[:display_name] if args.key?(:display_name)
          @etag = args[:etag] if args.key?(:etag)
          @name = args[:name] if args.key?(:name)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # Instance of a general artifact.
      class GoogleCloudAiplatformV1beta1Artifact
        include Google::Apis::Core::Hashable
      
        # Output only. Timestamp when this Artifact was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Description of the Artifact
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor :description
      
        # User provided display name of the Artifact. May be up to 128 Unicode
        # characters.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # An eTag used to perform consistent read-modify-write updates. If not set, a
        # blind "overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # The labels with user-defined metadata to organize your Artifacts. Label keys
        # and values can be no longer than 64 characters (Unicode codepoints), can only
        # contain lowercase letters, numeric characters, underscores and dashes.
        # International characters are allowed. No more than 64 user labels can be
        # associated with one Artifact (System labels are excluded).
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Properties of the Artifact. Top level metadata keys' heading and trailing
        # spaces will be trimmed. The size of this field should not exceed 200KB.
        # Corresponds to the JSON property `metadata`
        # @return [Hash<String,Object>]
        attr_accessor :metadata
      
        # Output only. The resource name of the Artifact.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # The title of the schema describing the metadata. Schema title and version is
        # expected to be registered in earlier Create Schema calls. And both are used
        # together as unique identifiers to identify schemas within the local metadata
        # store.
        # Corresponds to the JSON property `schemaTitle`
        # @return [String]
        attr_accessor :schema_title
      
        # The version of the schema in schema_name to use. Schema title and version is
        # expected to be registered in earlier Create Schema calls. And both are used
        # together as unique identifiers to identify schemas within the local metadata
        # store.
        # Corresponds to the JSON property `schemaVersion`
        # @return [String]
        attr_accessor :schema_version
      
        # The state of this Artifact. This is a property of the Artifact, and does not
        # imply or capture any ongoing process. This property is managed by clients (
        # such as Vertex AI Pipelines), and the system does not prescribe or check the
        # validity of state transitions.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor :state
      
        # Output only. Timestamp when this Artifact was last updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        # The uniform resource identifier of the artifact file. May be empty if there is
        # no actual artifact file.
        # Corresponds to the JSON property `uri`
        # @return [String]
        attr_accessor :uri
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @description = args[:description] if args.key?(:description)
          @display_name = args[:display_name] if args.key?(:display_name)
          @etag = args[:etag] if args.key?(:etag)
          @labels = args[:labels] if args.key?(:labels)
          @metadata = args[:metadata] if args.key?(:metadata)
          @name = args[:name] if args.key?(:name)
          @schema_title = args[:schema_title] if args.key?(:schema_title)
          @schema_version = args[:schema_version] if args.key?(:schema_version)
          @state = args[:state] if args.key?(:state)
          @update_time = args[:update_time] if args.key?(:update_time)
          @uri = args[:uri] if args.key?(:uri)
        end
      end
      
      # Metadata information for NotebookService.AssignNotebookRuntime.
      class GoogleCloudAiplatformV1beta1AssignNotebookRuntimeOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        # A human-readable message that shows the intermediate progress details of
        # NotebookRuntime.
        # Corresponds to the JSON property `progressMessage`
        # @return [String]
        attr_accessor :progress_message
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
          @progress_message = args[:progress_message] if args.key?(:progress_message)
        end
      end
      
      # Request message for NotebookService.AssignNotebookRuntime.
      class GoogleCloudAiplatformV1beta1AssignNotebookRuntimeRequest
        include Google::Apis::Core::Hashable
      
        # A runtime is a virtual machine allocated to a particular user for a particular
        # Notebook file on temporary basis with lifetime limited to 24 hours.
        # Corresponds to the JSON property `notebookRuntime`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NotebookRuntime]
        attr_accessor :notebook_runtime
      
        # Optional. User specified ID for the notebook runtime.
        # Corresponds to the JSON property `notebookRuntimeId`
        # @return [String]
        attr_accessor :notebook_runtime_id
      
        # Required. The resource name of the NotebookRuntimeTemplate based on which a
        # NotebookRuntime will be assigned (reuse or create a new one).
        # Corresponds to the JSON property `notebookRuntimeTemplate`
        # @return [String]
        attr_accessor :notebook_runtime_template
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @notebook_runtime = args[:notebook_runtime] if args.key?(:notebook_runtime)
          @notebook_runtime_id = args[:notebook_runtime_id] if args.key?(:notebook_runtime_id)
          @notebook_runtime_template = args[:notebook_runtime_template] if args.key?(:notebook_runtime_template)
        end
      end
      
      # Attribution that explains a particular prediction output.
      class GoogleCloudAiplatformV1beta1Attribution
        include Google::Apis::Core::Hashable
      
        # Output only. Error of feature_attributions caused by approximation used in the
        # explanation method. Lower value means more precise attributions. * For Sampled
        # Shapley attribution, increasing path_count might reduce the error. * For
        # Integrated Gradients attribution, increasing step_count might reduce the error.
        # * For XRAI attribution, increasing step_count might reduce the error. See [
        # this introduction](/vertex-ai/docs/explainable-ai/overview) for more
        # information.
        # Corresponds to the JSON property `approximationError`
        # @return [Float]
        attr_accessor :approximation_error
      
        # Output only. Model predicted output if the input instance is constructed from
        # the baselines of all the features defined in ExplanationMetadata.inputs. The
        # field name of the output is determined by the key in ExplanationMetadata.
        # outputs. If the Model's predicted output has multiple dimensions (rank > 1),
        # this is the value in the output located by output_index. If there are multiple
        # baselines, their output values are averaged.
        # Corresponds to the JSON property `baselineOutputValue`
        # @return [Float]
        attr_accessor :baseline_output_value
      
        # Output only. Attributions of each explained feature. Features are extracted
        # from the prediction instances according to explanation metadata for inputs.
        # The value is a struct, whose keys are the name of the feature. The values are
        # how much the feature in the instance contributed to the predicted result. The
        # format of the value is determined by the feature's input format: * If the
        # feature is a scalar value, the attribution value is a floating number. * If
        # the feature is an array of scalar values, the attribution value is an array. *
        # If the feature is a struct, the attribution value is a struct. The keys in the
        # attribution value struct are the same as the keys in the feature struct. The
        # formats of the values in the attribution struct are determined by the formats
        # of the values in the feature struct. The ExplanationMetadata.
        # feature_attributions_schema_uri field, pointed to by the ExplanationSpec field
        # of the Endpoint.deployed_models object, points to the schema file that
        # describes the features and their attribution values (if it is populated).
        # Corresponds to the JSON property `featureAttributions`
        # @return [Object]
        attr_accessor :feature_attributions
      
        # Output only. Model predicted output on the corresponding explanation instance.
        # The field name of the output is determined by the key in ExplanationMetadata.
        # outputs. If the Model predicted output has multiple dimensions, this is the
        # value in the output located by output_index.
        # Corresponds to the JSON property `instanceOutputValue`
        # @return [Float]
        attr_accessor :instance_output_value
      
        # Output only. The display name of the output identified by output_index. For
        # example, the predicted class name by a multi-classification Model. This field
        # is only populated iff the Model predicts display names as a separate field
        # along with the explained output. The predicted display name must has the same
        # shape of the explained output, and can be located using output_index.
        # Corresponds to the JSON property `outputDisplayName`
        # @return [String]
        attr_accessor :output_display_name
      
        # Output only. The index that locates the explained prediction output. If the
        # prediction output is a scalar value, output_index is not populated. If the
        # prediction output has multiple dimensions, the length of the output_index list
        # is the same as the number of dimensions of the output. The i-th element in
        # output_index is the element index of the i-th dimension of the output vector.
        # Indices start from 0.
        # Corresponds to the JSON property `outputIndex`
        # @return [Array<Fixnum>]
        attr_accessor :output_index
      
        # Output only. Name of the explain output. Specified as the key in
        # ExplanationMetadata.outputs.
        # Corresponds to the JSON property `outputName`
        # @return [String]
        attr_accessor :output_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @approximation_error = args[:approximation_error] if args.key?(:approximation_error)
          @baseline_output_value = args[:baseline_output_value] if args.key?(:baseline_output_value)
          @feature_attributions = args[:feature_attributions] if args.key?(:feature_attributions)
          @instance_output_value = args[:instance_output_value] if args.key?(:instance_output_value)
          @output_display_name = args[:output_display_name] if args.key?(:output_display_name)
          @output_index = args[:output_index] if args.key?(:output_index)
          @output_name = args[:output_name] if args.key?(:output_name)
        end
      end
      
      # A description of resources that to large degree are decided by Vertex AI, and
      # require only a modest additional configuration. Each Model supporting these
      # resources documents its specific guidelines.
      class GoogleCloudAiplatformV1beta1AutomaticResources
        include Google::Apis::Core::Hashable
      
        # Immutable. The maximum number of replicas this DeployedModel may be deployed
        # on when the traffic against it increases. If the requested value is too large,
        # the deployment will error, but if deployment succeeds then the ability to
        # scale the model to that many replicas is guaranteed (barring service outages).
        # If traffic against the DeployedModel increases beyond what its replicas at
        # maximum may handle, a portion of the traffic will be dropped. If this value is
        # not provided, a no upper bound for scaling under heavy traffic will be assume,
        # though Vertex AI may be unable to scale beyond certain replica number.
        # Corresponds to the JSON property `maxReplicaCount`
        # @return [Fixnum]
        attr_accessor :max_replica_count
      
        # Immutable. The minimum number of replicas this DeployedModel will be always
        # deployed on. If traffic against it increases, it may dynamically be deployed
        # onto more replicas up to max_replica_count, and as traffic decreases, some of
        # these extra replicas may be freed. If the requested value is too large, the
        # deployment will error.
        # Corresponds to the JSON property `minReplicaCount`
        # @return [Fixnum]
        attr_accessor :min_replica_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @max_replica_count = args[:max_replica_count] if args.key?(:max_replica_count)
          @min_replica_count = args[:min_replica_count] if args.key?(:min_replica_count)
        end
      end
      
      # The metric specification that defines the target resource utilization (CPU
      # utilization, accelerator's duty cycle, and so on) for calculating the desired
      # replica count.
      class GoogleCloudAiplatformV1beta1AutoscalingMetricSpec
        include Google::Apis::Core::Hashable
      
        # Required. The resource metric name. Supported metrics: * For Online Prediction:
        # * `aiplatform.googleapis.com/prediction/online/accelerator/duty_cycle` * `
        # aiplatform.googleapis.com/prediction/online/cpu/utilization`
        # Corresponds to the JSON property `metricName`
        # @return [String]
        attr_accessor :metric_name
      
        # The target resource utilization in percentage (1% - 100%) for the given metric;
        # once the real usage deviates from the target by a certain percentage, the
        # machine replicas change. The default value is 60 (representing 60%) if not
        # provided.
        # Corresponds to the JSON property `target`
        # @return [Fixnum]
        attr_accessor :target
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @metric_name = args[:metric_name] if args.key?(:metric_name)
          @target = args[:target] if args.key?(:target)
        end
      end
      
      # The storage details for Avro input content.
      class GoogleCloudAiplatformV1beta1AvroSource
        include Google::Apis::Core::Hashable
      
        # The Google Cloud Storage location for the input content.
        # Corresponds to the JSON property `gcsSource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GcsSource]
        attr_accessor :gcs_source
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @gcs_source = args[:gcs_source] if args.key?(:gcs_source)
        end
      end
      
      # Details of operations that perform batch create Features.
      class GoogleCloudAiplatformV1beta1BatchCreateFeaturesOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for FeaturestoreService.BatchCreateFeatures.
      class GoogleCloudAiplatformV1beta1BatchCreateFeaturesRequest
        include Google::Apis::Core::Hashable
      
        # Required. The request message specifying the Features to create. All Features
        # must be created under the same parent EntityType. The `parent` field in each
        # child request message can be omitted. If `parent` is set in a child request,
        # then the value must match the `parent` value in this request message.
        # Corresponds to the JSON property `requests`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1CreateFeatureRequest>]
        attr_accessor :requests
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @requests = args[:requests] if args.key?(:requests)
        end
      end
      
      # Response message for FeaturestoreService.BatchCreateFeatures.
      class GoogleCloudAiplatformV1beta1BatchCreateFeaturesResponse
        include Google::Apis::Core::Hashable
      
        # The Features created.
        # Corresponds to the JSON property `features`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Feature>]
        attr_accessor :features
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @features = args[:features] if args.key?(:features)
        end
      end
      
      # Request message for TensorboardService.BatchCreateTensorboardRuns.
      class GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsRequest
        include Google::Apis::Core::Hashable
      
        # Required. The request message specifying the TensorboardRuns to create. A
        # maximum of 1000 TensorboardRuns can be created in a batch.
        # Corresponds to the JSON property `requests`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1CreateTensorboardRunRequest>]
        attr_accessor :requests
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @requests = args[:requests] if args.key?(:requests)
        end
      end
      
      # Response message for TensorboardService.BatchCreateTensorboardRuns.
      class GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsResponse
        include Google::Apis::Core::Hashable
      
        # The created TensorboardRuns.
        # Corresponds to the JSON property `tensorboardRuns`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TensorboardRun>]
        attr_accessor :tensorboard_runs
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @tensorboard_runs = args[:tensorboard_runs] if args.key?(:tensorboard_runs)
        end
      end
      
      # Request message for TensorboardService.BatchCreateTensorboardTimeSeries.
      class GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesRequest
        include Google::Apis::Core::Hashable
      
        # Required. The request message specifying the TensorboardTimeSeries to create.
        # A maximum of 1000 TensorboardTimeSeries can be created in a batch.
        # Corresponds to the JSON property `requests`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1CreateTensorboardTimeSeriesRequest>]
        attr_accessor :requests
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @requests = args[:requests] if args.key?(:requests)
        end
      end
      
      # Response message for TensorboardService.BatchCreateTensorboardTimeSeries.
      class GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesResponse
        include Google::Apis::Core::Hashable
      
        # The created TensorboardTimeSeries.
        # Corresponds to the JSON property `tensorboardTimeSeries`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TensorboardTimeSeries>]
        attr_accessor :tensorboard_time_series
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @tensorboard_time_series = args[:tensorboard_time_series] if args.key?(:tensorboard_time_series)
        end
      end
      
      # A description of resources that are used for performing batch operations, are
      # dedicated to a Model, and need manual configuration.
      class GoogleCloudAiplatformV1beta1BatchDedicatedResources
        include Google::Apis::Core::Hashable
      
        # Specification of a single machine.
        # Corresponds to the JSON property `machineSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MachineSpec]
        attr_accessor :machine_spec
      
        # Immutable. The maximum number of machine replicas the batch operation may be
        # scaled to. The default value is 10.
        # Corresponds to the JSON property `maxReplicaCount`
        # @return [Fixnum]
        attr_accessor :max_replica_count
      
        # Immutable. The number of machine replicas used at the start of the batch
        # operation. If not set, Vertex AI decides starting number, not greater than
        # max_replica_count
        # Corresponds to the JSON property `startingReplicaCount`
        # @return [Fixnum]
        attr_accessor :starting_replica_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @machine_spec = args[:machine_spec] if args.key?(:machine_spec)
          @max_replica_count = args[:max_replica_count] if args.key?(:max_replica_count)
          @starting_replica_count = args[:starting_replica_count] if args.key?(:starting_replica_count)
        end
      end
      
      # Request message for ModelService.BatchImportEvaluatedAnnotations
      class GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsRequest
        include Google::Apis::Core::Hashable
      
        # Required. Evaluated annotations resource to be imported.
        # Corresponds to the JSON property `evaluatedAnnotations`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EvaluatedAnnotation>]
        attr_accessor :evaluated_annotations
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @evaluated_annotations = args[:evaluated_annotations] if args.key?(:evaluated_annotations)
        end
      end
      
      # Response message for ModelService.BatchImportEvaluatedAnnotations
      class GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsResponse
        include Google::Apis::Core::Hashable
      
        # Output only. Number of EvaluatedAnnotations imported.
        # Corresponds to the JSON property `importedEvaluatedAnnotationsCount`
        # @return [Fixnum]
        attr_accessor :imported_evaluated_annotations_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @imported_evaluated_annotations_count = args[:imported_evaluated_annotations_count] if args.key?(:imported_evaluated_annotations_count)
        end
      end
      
      # Request message for ModelService.BatchImportModelEvaluationSlices
      class GoogleCloudAiplatformV1beta1BatchImportModelEvaluationSlicesRequest
        include Google::Apis::Core::Hashable
      
        # Required. Model evaluation slice resource to be imported.
        # Corresponds to the JSON property `modelEvaluationSlices`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelEvaluationSlice>]
        attr_accessor :model_evaluation_slices
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @model_evaluation_slices = args[:model_evaluation_slices] if args.key?(:model_evaluation_slices)
        end
      end
      
      # Response message for ModelService.BatchImportModelEvaluationSlices
      class GoogleCloudAiplatformV1beta1BatchImportModelEvaluationSlicesResponse
        include Google::Apis::Core::Hashable
      
        # Output only. List of imported ModelEvaluationSlice.name.
        # Corresponds to the JSON property `importedModelEvaluationSlices`
        # @return [Array<String>]
        attr_accessor :imported_model_evaluation_slices
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @imported_model_evaluation_slices = args[:imported_model_evaluation_slices] if args.key?(:imported_model_evaluation_slices)
        end
      end
      
      # Runtime operation information for MigrationService.BatchMigrateResources.
      class GoogleCloudAiplatformV1beta1BatchMigrateResourcesOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        # Partial results that reflect the latest migration operation progress.
        # Corresponds to the JSON property `partialResults`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BatchMigrateResourcesOperationMetadataPartialResult>]
        attr_accessor :partial_results
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
          @partial_results = args[:partial_results] if args.key?(:partial_results)
        end
      end
      
      # Represents a partial result in batch migration operation for one
      # MigrateResourceRequest.
      class GoogleCloudAiplatformV1beta1BatchMigrateResourcesOperationMetadataPartialResult
        include Google::Apis::Core::Hashable
      
        # Migrated dataset resource name.
        # Corresponds to the JSON property `dataset`
        # @return [String]
        attr_accessor :dataset
      
        # The `Status` type defines a logical error model that is suitable for different
        # programming environments, including REST APIs and RPC APIs. It is used by [
        # gRPC](https://github.com/grpc). Each `Status` message contains three pieces of
        # data: error code, error message, and error details. You can find out more
        # about this error model and how to work with it in the [API Design Guide](https:
        # //cloud.google.com/apis/design/errors).
        # Corresponds to the JSON property `error`
        # @return [Google::Apis::AiplatformV1beta1::GoogleRpcStatus]
        attr_accessor :error
      
        # Migrated model resource name.
        # Corresponds to the JSON property `model`
        # @return [String]
        attr_accessor :model
      
        # Config of migrating one resource from automl.googleapis.com, datalabeling.
        # googleapis.com and ml.googleapis.com to Vertex AI.
        # Corresponds to the JSON property `request`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MigrateResourceRequest]
        attr_accessor :request
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @dataset = args[:dataset] if args.key?(:dataset)
          @error = args[:error] if args.key?(:error)
          @model = args[:model] if args.key?(:model)
          @request = args[:request] if args.key?(:request)
        end
      end
      
      # Request message for MigrationService.BatchMigrateResources.
      class GoogleCloudAiplatformV1beta1BatchMigrateResourcesRequest
        include Google::Apis::Core::Hashable
      
        # Required. The request messages specifying the resources to migrate. They must
        # be in the same location as the destination. Up to 50 resources can be migrated
        # in one batch.
        # Corresponds to the JSON property `migrateResourceRequests`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MigrateResourceRequest>]
        attr_accessor :migrate_resource_requests
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @migrate_resource_requests = args[:migrate_resource_requests] if args.key?(:migrate_resource_requests)
        end
      end
      
      # Response message for MigrationService.BatchMigrateResources.
      class GoogleCloudAiplatformV1beta1BatchMigrateResourcesResponse
        include Google::Apis::Core::Hashable
      
        # Successfully migrated resources.
        # Corresponds to the JSON property `migrateResourceResponses`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MigrateResourceResponse>]
        attr_accessor :migrate_resource_responses
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @migrate_resource_responses = args[:migrate_resource_responses] if args.key?(:migrate_resource_responses)
        end
      end
      
      # A job that uses a Model to produce predictions on multiple input instances. If
      # predictions for significant portion of the instances fail, the job may finish
      # without attempting predictions for all remaining instances.
      class GoogleCloudAiplatformV1beta1BatchPredictionJob
        include Google::Apis::Core::Hashable
      
        # Success and error statistics of processing multiple entities (for example,
        # DataItems or structured data rows) in batch.
        # Corresponds to the JSON property `completionStats`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1CompletionStats]
        attr_accessor :completion_stats
      
        # Output only. Time when the BatchPredictionJob was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # A description of resources that are used for performing batch operations, are
        # dedicated to a Model, and need manual configuration.
        # Corresponds to the JSON property `dedicatedResources`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BatchDedicatedResources]
        attr_accessor :dedicated_resources
      
        # For custom-trained Models and AutoML Tabular Models, the container of the
        # DeployedModel instances will send `stderr` and `stdout` streams to Cloud
        # Logging by default. Please note that the logs incur cost, which are subject to
        # [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User can
        # disable container logging by setting this flag to true.
        # Corresponds to the JSON property `disableContainerLogging`
        # @return [Boolean]
        attr_accessor :disable_container_logging
        alias_method :disable_container_logging?, :disable_container_logging
      
        # Required. The user-defined name of this BatchPredictionJob.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Represents a customer-managed encryption key spec that can be applied to a top-
        # level resource.
        # Corresponds to the JSON property `encryptionSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EncryptionSpec]
        attr_accessor :encryption_spec
      
        # Output only. Time when the BatchPredictionJob entered any of the following
        # states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.
        # Corresponds to the JSON property `endTime`
        # @return [String]
        attr_accessor :end_time
      
        # The `Status` type defines a logical error model that is suitable for different
        # programming environments, including REST APIs and RPC APIs. It is used by [
        # gRPC](https://github.com/grpc). Each `Status` message contains three pieces of
        # data: error code, error message, and error details. You can find out more
        # about this error model and how to work with it in the [API Design Guide](https:
        # //cloud.google.com/apis/design/errors).
        # Corresponds to the JSON property `error`
        # @return [Google::Apis::AiplatformV1beta1::GoogleRpcStatus]
        attr_accessor :error
      
        # Specification of Model explanation.
        # Corresponds to the JSON property `explanationSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExplanationSpec]
        attr_accessor :explanation_spec
      
        # Generate explanation with the batch prediction results. When set to `true`,
        # the batch prediction output changes based on the `predictions_format` field of
        # the BatchPredictionJob.output_config object: * `bigquery`: output includes a
        # column named `explanation`. The value is a struct that conforms to the
        # Explanation object. * `jsonl`: The JSON objects on each line include an
        # additional entry keyed `explanation`. The value of the entry is a JSON object
        # that conforms to the Explanation object. * `csv`: Generating explanations for
        # CSV format is not supported. If this field is set to true, either the Model.
        # explanation_spec or explanation_spec must be populated.
        # Corresponds to the JSON property `generateExplanation`
        # @return [Boolean]
        attr_accessor :generate_explanation
        alias_method :generate_explanation?, :generate_explanation
      
        # Configures the input to BatchPredictionJob. See Model.
        # supported_input_storage_formats for Model's supported input formats, and how
        # instances should be expressed via any of them.
        # Corresponds to the JSON property `inputConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BatchPredictionJobInputConfig]
        attr_accessor :input_config
      
        # Configuration defining how to transform batch prediction input instances to
        # the instances that the Model accepts.
        # Corresponds to the JSON property `instanceConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BatchPredictionJobInstanceConfig]
        attr_accessor :instance_config
      
        # The labels with user-defined metadata to organize BatchPredictionJobs. Label
        # keys and values can be no longer than 64 characters (Unicode codepoints), can
        # only contain lowercase letters, numeric characters, underscores and dashes.
        # International characters are allowed. See https://goo.gl/xmQnxf for more
        # information and examples of labels.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Manual batch tuning parameters.
        # Corresponds to the JSON property `manualBatchTuningParameters`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ManualBatchTuningParameters]
        attr_accessor :manual_batch_tuning_parameters
      
        # The name of the Model resource that produces the predictions via this job,
        # must share the same ancestor Location. Starting this job has no impact on any
        # existing deployments of the Model and their resources. Exactly one of model
        # and unmanaged_container_model must be set. The model resource name may contain
        # version id or version alias to specify the version. Example: `projects/`
        # project`/locations/`location`/models/`model`@2` or `projects/`project`/
        # locations/`location`/models/`model`@golden` if no version is specified, the
        # default version will be deployed. The model resource could also be a publisher
        # model. Example: `publishers/`publisher`/models/`model`` or `projects/`project`/
        # locations/`location`/publishers/`publisher`/models/`model``
        # Corresponds to the JSON property `model`
        # @return [String]
        attr_accessor :model
      
        # The model monitoring configuration used for Batch Prediction Job.
        # Corresponds to the JSON property `modelMonitoringConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelMonitoringConfig]
        attr_accessor :model_monitoring_config
      
        # Get batch prediction job monitoring statistics.
        # Corresponds to the JSON property `modelMonitoringStatsAnomalies`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomalies>]
        attr_accessor :model_monitoring_stats_anomalies
      
        # The `Status` type defines a logical error model that is suitable for different
        # programming environments, including REST APIs and RPC APIs. It is used by [
        # gRPC](https://github.com/grpc). Each `Status` message contains three pieces of
        # data: error code, error message, and error details. You can find out more
        # about this error model and how to work with it in the [API Design Guide](https:
        # //cloud.google.com/apis/design/errors).
        # Corresponds to the JSON property `modelMonitoringStatus`
        # @return [Google::Apis::AiplatformV1beta1::GoogleRpcStatus]
        attr_accessor :model_monitoring_status
      
        # The parameters that govern the predictions. The schema of the parameters may
        # be specified via the Model's PredictSchemata's parameters_schema_uri.
        # Corresponds to the JSON property `modelParameters`
        # @return [Object]
        attr_accessor :model_parameters
      
        # Output only. The version ID of the Model that produces the predictions via
        # this job.
        # Corresponds to the JSON property `modelVersionId`
        # @return [String]
        attr_accessor :model_version_id
      
        # Output only. Resource name of the BatchPredictionJob.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Configures the output of BatchPredictionJob. See Model.
        # supported_output_storage_formats for supported output formats, and how
        # predictions are expressed via any of them.
        # Corresponds to the JSON property `outputConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BatchPredictionJobOutputConfig]
        attr_accessor :output_config
      
        # Further describes this job's output. Supplements output_config.
        # Corresponds to the JSON property `outputInfo`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BatchPredictionJobOutputInfo]
        attr_accessor :output_info
      
        # Output only. Partial failures encountered. For example, single files that can'
        # t be read. This field never exceeds 20 entries. Status details fields contain
        # standard Google Cloud error details.
        # Corresponds to the JSON property `partialFailures`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleRpcStatus>]
        attr_accessor :partial_failures
      
        # Statistics information about resource consumption.
        # Corresponds to the JSON property `resourcesConsumed`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ResourcesConsumed]
        attr_accessor :resources_consumed
      
        # The service account that the DeployedModel's container runs as. If not
        # specified, a system generated one will be used, which has minimal permissions
        # and the custom container, if used, may not have enough permission to access
        # other Google Cloud resources. Users deploying the Model must have the `iam.
        # serviceAccounts.actAs` permission on this service account.
        # Corresponds to the JSON property `serviceAccount`
        # @return [String]
        attr_accessor :service_account
      
        # Output only. Time when the BatchPredictionJob for the first time entered the `
        # JOB_STATE_RUNNING` state.
        # Corresponds to the JSON property `startTime`
        # @return [String]
        attr_accessor :start_time
      
        # Output only. The detailed state of the job.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor :state
      
        # Contains model information necessary to perform batch prediction without
        # requiring a full model import.
        # Corresponds to the JSON property `unmanagedContainerModel`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1UnmanagedContainerModel]
        attr_accessor :unmanaged_container_model
      
        # Output only. Time when the BatchPredictionJob was most recently updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @completion_stats = args[:completion_stats] if args.key?(:completion_stats)
          @create_time = args[:create_time] if args.key?(:create_time)
          @dedicated_resources = args[:dedicated_resources] if args.key?(:dedicated_resources)
          @disable_container_logging = args[:disable_container_logging] if args.key?(:disable_container_logging)
          @display_name = args[:display_name] if args.key?(:display_name)
          @encryption_spec = args[:encryption_spec] if args.key?(:encryption_spec)
          @end_time = args[:end_time] if args.key?(:end_time)
          @error = args[:error] if args.key?(:error)
          @explanation_spec = args[:explanation_spec] if args.key?(:explanation_spec)
          @generate_explanation = args[:generate_explanation] if args.key?(:generate_explanation)
          @input_config = args[:input_config] if args.key?(:input_config)
          @instance_config = args[:instance_config] if args.key?(:instance_config)
          @labels = args[:labels] if args.key?(:labels)
          @manual_batch_tuning_parameters = args[:manual_batch_tuning_parameters] if args.key?(:manual_batch_tuning_parameters)
          @model = args[:model] if args.key?(:model)
          @model_monitoring_config = args[:model_monitoring_config] if args.key?(:model_monitoring_config)
          @model_monitoring_stats_anomalies = args[:model_monitoring_stats_anomalies] if args.key?(:model_monitoring_stats_anomalies)
          @model_monitoring_status = args[:model_monitoring_status] if args.key?(:model_monitoring_status)
          @model_parameters = args[:model_parameters] if args.key?(:model_parameters)
          @model_version_id = args[:model_version_id] if args.key?(:model_version_id)
          @name = args[:name] if args.key?(:name)
          @output_config = args[:output_config] if args.key?(:output_config)
          @output_info = args[:output_info] if args.key?(:output_info)
          @partial_failures = args[:partial_failures] if args.key?(:partial_failures)
          @resources_consumed = args[:resources_consumed] if args.key?(:resources_consumed)
          @service_account = args[:service_account] if args.key?(:service_account)
          @start_time = args[:start_time] if args.key?(:start_time)
          @state = args[:state] if args.key?(:state)
          @unmanaged_container_model = args[:unmanaged_container_model] if args.key?(:unmanaged_container_model)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # Configures the input to BatchPredictionJob. See Model.
      # supported_input_storage_formats for Model's supported input formats, and how
      # instances should be expressed via any of them.
      class GoogleCloudAiplatformV1beta1BatchPredictionJobInputConfig
        include Google::Apis::Core::Hashable
      
        # The BigQuery location for the input content.
        # Corresponds to the JSON property `bigquerySource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BigQuerySource]
        attr_accessor :bigquery_source
      
        # The Google Cloud Storage location for the input content.
        # Corresponds to the JSON property `gcsSource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GcsSource]
        attr_accessor :gcs_source
      
        # Required. The format in which instances are given, must be one of the Model's
        # supported_input_storage_formats.
        # Corresponds to the JSON property `instancesFormat`
        # @return [String]
        attr_accessor :instances_format
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bigquery_source = args[:bigquery_source] if args.key?(:bigquery_source)
          @gcs_source = args[:gcs_source] if args.key?(:gcs_source)
          @instances_format = args[:instances_format] if args.key?(:instances_format)
        end
      end
      
      # Configuration defining how to transform batch prediction input instances to
      # the instances that the Model accepts.
      class GoogleCloudAiplatformV1beta1BatchPredictionJobInstanceConfig
        include Google::Apis::Core::Hashable
      
        # Fields that will be excluded in the prediction instance that is sent to the
        # Model. Excluded will be attached to the batch prediction output if key_field
        # is not specified. When excluded_fields is populated, included_fields must be
        # empty. The input must be JSONL with objects at each line, CSV, BigQuery or
        # TfRecord.
        # Corresponds to the JSON property `excludedFields`
        # @return [Array<String>]
        attr_accessor :excluded_fields
      
        # Fields that will be included in the prediction instance that is sent to the
        # Model. If instance_type is `array`, the order of field names in
        # included_fields also determines the order of the values in the array. When
        # included_fields is populated, excluded_fields must be empty. The input must be
        # JSONL with objects at each line, CSV, BigQuery or TfRecord.
        # Corresponds to the JSON property `includedFields`
        # @return [Array<String>]
        attr_accessor :included_fields
      
        # The format of the instance that the Model accepts. Vertex AI will convert
        # compatible batch prediction input instance formats to the specified format.
        # Supported values are: * `object`: Each input is converted to JSON object
        # format. * For `bigquery`, each row is converted to an object. * For `jsonl`,
        # each line of the JSONL input must be an object. * Does not apply to `csv`, `
        # file-list`, `tf-record`, or `tf-record-gzip`. * `array`: Each input is
        # converted to JSON array format. * For `bigquery`, each row is converted to an
        # array. The order of columns is determined by the BigQuery column order, unless
        # included_fields is populated. included_fields must be populated for specifying
        # field orders. * For `jsonl`, if each line of the JSONL input is an object,
        # included_fields must be populated for specifying field orders. * Does not
        # apply to `csv`, `file-list`, `tf-record`, or `tf-record-gzip`. If not
        # specified, Vertex AI converts the batch prediction input as follows: * For `
        # bigquery` and `csv`, the behavior is the same as `array`. The order of columns
        # is the same as defined in the file or table, unless included_fields is
        # populated. * For `jsonl`, the prediction instance format is determined by each
        # line of the input. * For `tf-record`/`tf-record-gzip`, each record will be
        # converted to an object in the format of ``"b64": ``, where `` is the Base64-
        # encoded string of the content of the record. * For `file-list`, each file in
        # the list will be converted to an object in the format of ``"b64": ``, where ``
        # is the Base64-encoded string of the content of the file.
        # Corresponds to the JSON property `instanceType`
        # @return [String]
        attr_accessor :instance_type
      
        # The name of the field that is considered as a key. The values identified by
        # the key field is not included in the transformed instances that is sent to the
        # Model. This is similar to specifying this name of the field in excluded_fields.
        # In addition, the batch prediction output will not include the instances.
        # Instead the output will only include the value of the key field, in a field
        # named `key` in the output: * For `jsonl` output format, the output will have a
        # `key` field instead of the `instance` field. * For `csv`/`bigquery` output
        # format, the output will have have a `key` column instead of the instance
        # feature columns. The input must be JSONL with objects at each line, CSV,
        # BigQuery or TfRecord.
        # Corresponds to the JSON property `keyField`
        # @return [String]
        attr_accessor :key_field
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @excluded_fields = args[:excluded_fields] if args.key?(:excluded_fields)
          @included_fields = args[:included_fields] if args.key?(:included_fields)
          @instance_type = args[:instance_type] if args.key?(:instance_type)
          @key_field = args[:key_field] if args.key?(:key_field)
        end
      end
      
      # Configures the output of BatchPredictionJob. See Model.
      # supported_output_storage_formats for supported output formats, and how
      # predictions are expressed via any of them.
      class GoogleCloudAiplatformV1beta1BatchPredictionJobOutputConfig
        include Google::Apis::Core::Hashable
      
        # The BigQuery location for the output content.
        # Corresponds to the JSON property `bigqueryDestination`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BigQueryDestination]
        attr_accessor :bigquery_destination
      
        # The Google Cloud Storage location where the output is to be written to.
        # Corresponds to the JSON property `gcsDestination`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GcsDestination]
        attr_accessor :gcs_destination
      
        # Required. The format in which Vertex AI gives the predictions, must be one of
        # the Model's supported_output_storage_formats.
        # Corresponds to the JSON property `predictionsFormat`
        # @return [String]
        attr_accessor :predictions_format
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bigquery_destination = args[:bigquery_destination] if args.key?(:bigquery_destination)
          @gcs_destination = args[:gcs_destination] if args.key?(:gcs_destination)
          @predictions_format = args[:predictions_format] if args.key?(:predictions_format)
        end
      end
      
      # Further describes this job's output. Supplements output_config.
      class GoogleCloudAiplatformV1beta1BatchPredictionJobOutputInfo
        include Google::Apis::Core::Hashable
      
        # Output only. The path of the BigQuery dataset created, in `bq://projectId.
        # bqDatasetId` format, into which the prediction output is written.
        # Corresponds to the JSON property `bigqueryOutputDataset`
        # @return [String]
        attr_accessor :bigquery_output_dataset
      
        # Output only. The name of the BigQuery table created, in `predictions_` format,
        # into which the prediction output is written. Can be used by UI to generate the
        # BigQuery output path, for example.
        # Corresponds to the JSON property `bigqueryOutputTable`
        # @return [String]
        attr_accessor :bigquery_output_table
      
        # Output only. The full path of the Cloud Storage directory created, into which
        # the prediction output is written.
        # Corresponds to the JSON property `gcsOutputDirectory`
        # @return [String]
        attr_accessor :gcs_output_directory
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bigquery_output_dataset = args[:bigquery_output_dataset] if args.key?(:bigquery_output_dataset)
          @bigquery_output_table = args[:bigquery_output_table] if args.key?(:bigquery_output_table)
          @gcs_output_directory = args[:gcs_output_directory] if args.key?(:gcs_output_directory)
        end
      end
      
      # Details of operations that batch reads Feature values.
      class GoogleCloudAiplatformV1beta1BatchReadFeatureValuesOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for FeaturestoreService.BatchReadFeatureValues.
      class GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequest
        include Google::Apis::Core::Hashable
      
        # The BigQuery location for the input content.
        # Corresponds to the JSON property `bigqueryReadInstances`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BigQuerySource]
        attr_accessor :bigquery_read_instances
      
        # The storage details for CSV input content.
        # Corresponds to the JSON property `csvReadInstances`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1CsvSource]
        attr_accessor :csv_read_instances
      
        # A destination location for Feature values and format.
        # Corresponds to the JSON property `destination`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureValueDestination]
        attr_accessor :destination
      
        # Required. Specifies EntityType grouping Features to read values of and
        # settings.
        # Corresponds to the JSON property `entityTypeSpecs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec>]
        attr_accessor :entity_type_specs
      
        # When not empty, the specified fields in the *_read_instances source will be
        # joined as-is in the output, in addition to those fields from the Featurestore
        # Entity. For BigQuery source, the type of the pass-through values will be
        # automatically inferred. For CSV source, the pass-through values will be passed
        # as opaque bytes.
        # Corresponds to the JSON property `passThroughFields`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestPassThroughField>]
        attr_accessor :pass_through_fields
      
        # Optional. Excludes Feature values with feature generation timestamp before
        # this timestamp. If not set, retrieve oldest values kept in Feature Store.
        # Timestamp, if present, must not have higher than millisecond precision.
        # Corresponds to the JSON property `startTime`
        # @return [String]
        attr_accessor :start_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bigquery_read_instances = args[:bigquery_read_instances] if args.key?(:bigquery_read_instances)
          @csv_read_instances = args[:csv_read_instances] if args.key?(:csv_read_instances)
          @destination = args[:destination] if args.key?(:destination)
          @entity_type_specs = args[:entity_type_specs] if args.key?(:entity_type_specs)
          @pass_through_fields = args[:pass_through_fields] if args.key?(:pass_through_fields)
          @start_time = args[:start_time] if args.key?(:start_time)
        end
      end
      
      # Selects Features of an EntityType to read values of and specifies read
      # settings.
      class GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec
        include Google::Apis::Core::Hashable
      
        # Required. ID of the EntityType to select Features. The EntityType id is the
        # entity_type_id specified during EntityType creation.
        # Corresponds to the JSON property `entityTypeId`
        # @return [String]
        attr_accessor :entity_type_id
      
        # Selector for Features of an EntityType.
        # Corresponds to the JSON property `featureSelector`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureSelector]
        attr_accessor :feature_selector
      
        # Per-Feature settings for the batch read.
        # Corresponds to the JSON property `settings`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DestinationFeatureSetting>]
        attr_accessor :settings
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @entity_type_id = args[:entity_type_id] if args.key?(:entity_type_id)
          @feature_selector = args[:feature_selector] if args.key?(:feature_selector)
          @settings = args[:settings] if args.key?(:settings)
        end
      end
      
      # Describe pass-through fields in read_instance source.
      class GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestPassThroughField
        include Google::Apis::Core::Hashable
      
        # Required. The name of the field in the CSV header or the name of the column in
        # BigQuery table. The naming restriction is the same as Feature.name.
        # Corresponds to the JSON property `fieldName`
        # @return [String]
        attr_accessor :field_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @field_name = args[:field_name] if args.key?(:field_name)
        end
      end
      
      # Response message for FeaturestoreService.BatchReadFeatureValues.
      class GoogleCloudAiplatformV1beta1BatchReadFeatureValuesResponse
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Response message for TensorboardService.BatchReadTensorboardTimeSeriesData.
      class GoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse
        include Google::Apis::Core::Hashable
      
        # The returned time series data.
        # Corresponds to the JSON property `timeSeriesData`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TimeSeriesData>]
        attr_accessor :time_series_data
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @time_series_data = args[:time_series_data] if args.key?(:time_series_data)
        end
      end
      
      # The BigQuery location for the output content.
      class GoogleCloudAiplatformV1beta1BigQueryDestination
        include Google::Apis::Core::Hashable
      
        # Required. BigQuery URI to a project or table, up to 2000 characters long. When
        # only the project is specified, the Dataset and Table is created. When the full
        # table reference is specified, the Dataset must exist and table must not exist.
        # Accepted forms: * BigQuery path. For example: `bq://projectId` or `bq://
        # projectId.bqDatasetId` or `bq://projectId.bqDatasetId.bqTableId`.
        # Corresponds to the JSON property `outputUri`
        # @return [String]
        attr_accessor :output_uri
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @output_uri = args[:output_uri] if args.key?(:output_uri)
        end
      end
      
      # The BigQuery location for the input content.
      class GoogleCloudAiplatformV1beta1BigQuerySource
        include Google::Apis::Core::Hashable
      
        # Required. BigQuery URI to a table, up to 2000 characters long. Accepted forms:
        # * BigQuery path. For example: `bq://projectId.bqDatasetId.bqTableId`.
        # Corresponds to the JSON property `inputUri`
        # @return [String]
        attr_accessor :input_uri
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @input_uri = args[:input_uri] if args.key?(:input_uri)
        end
      end
      
      # Config for blur baseline. When enabled, a linear path from the maximally
      # blurred image to the input image is created. Using a blurred baseline instead
      # of zero (black image) is motivated by the BlurIG approach explained here:
      # https://arxiv.org/abs/2004.03383
      class GoogleCloudAiplatformV1beta1BlurBaselineConfig
        include Google::Apis::Core::Hashable
      
        # The standard deviation of the blur kernel for the blurred baseline. The same
        # blurring parameter is used for both the height and the width dimension. If not
        # set, the method defaults to the zero (i.e. black for images) baseline.
        # Corresponds to the JSON property `maxBlurSigma`
        # @return [Float]
        attr_accessor :max_blur_sigma
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @max_blur_sigma = args[:max_blur_sigma] if args.key?(:max_blur_sigma)
        end
      end
      
      # A list of boolean values.
      class GoogleCloudAiplatformV1beta1BoolArray
        include Google::Apis::Core::Hashable
      
        # A list of bool values.
        # Corresponds to the JSON property `values`
        # @return [Array<Boolean>]
        attr_accessor :values
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @values = args[:values] if args.key?(:values)
        end
      end
      
      # Request message for JobService.CancelBatchPredictionJob.
      class GoogleCloudAiplatformV1beta1CancelBatchPredictionJobRequest
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Request message for JobService.CancelCustomJob.
      class GoogleCloudAiplatformV1beta1CancelCustomJobRequest
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Request message for JobService.CancelDataLabelingJob.
      class GoogleCloudAiplatformV1beta1CancelDataLabelingJobRequest
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Request message for JobService.CancelHyperparameterTuningJob.
      class GoogleCloudAiplatformV1beta1CancelHyperparameterTuningJobRequest
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Request message for JobService.CancelNasJob.
      class GoogleCloudAiplatformV1beta1CancelNasJobRequest
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Request message for PipelineService.CancelPipelineJob.
      class GoogleCloudAiplatformV1beta1CancelPipelineJobRequest
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Request message for PipelineService.CancelTrainingPipeline.
      class GoogleCloudAiplatformV1beta1CancelTrainingPipelineRequest
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # This message will be placed in the metadata field of a google.longrunning.
      # Operation associated with a CheckTrialEarlyStoppingState request.
      class GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateMetatdata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        # The name of the Study that the Trial belongs to.
        # Corresponds to the JSON property `study`
        # @return [String]
        attr_accessor :study
      
        # The Trial name.
        # Corresponds to the JSON property `trial`
        # @return [String]
        attr_accessor :trial
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
          @study = args[:study] if args.key?(:study)
          @trial = args[:trial] if args.key?(:trial)
        end
      end
      
      # Request message for VizierService.CheckTrialEarlyStoppingState.
      class GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateRequest
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Response message for VizierService.CheckTrialEarlyStoppingState.
      class GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateResponse
        include Google::Apis::Core::Hashable
      
        # True if the Trial should stop.
        # Corresponds to the JSON property `shouldStop`
        # @return [Boolean]
        attr_accessor :should_stop
        alias_method :should_stop?, :should_stop
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @should_stop = args[:should_stop] if args.key?(:should_stop)
        end
      end
      
      # Request message for VizierService.CompleteTrial.
      class GoogleCloudAiplatformV1beta1CompleteTrialRequest
        include Google::Apis::Core::Hashable
      
        # A message representing a Measurement of a Trial. A Measurement contains the
        # Metrics got by executing a Trial using suggested hyperparameter values.
        # Corresponds to the JSON property `finalMeasurement`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Measurement]
        attr_accessor :final_measurement
      
        # Optional. A human readable reason why the trial was infeasible. This should
        # only be provided if `trial_infeasible` is true.
        # Corresponds to the JSON property `infeasibleReason`
        # @return [String]
        attr_accessor :infeasible_reason
      
        # Optional. True if the Trial cannot be run with the given Parameter, and
        # final_measurement will be ignored.
        # Corresponds to the JSON property `trialInfeasible`
        # @return [Boolean]
        attr_accessor :trial_infeasible
        alias_method :trial_infeasible?, :trial_infeasible
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @final_measurement = args[:final_measurement] if args.key?(:final_measurement)
          @infeasible_reason = args[:infeasible_reason] if args.key?(:infeasible_reason)
          @trial_infeasible = args[:trial_infeasible] if args.key?(:trial_infeasible)
        end
      end
      
      # Success and error statistics of processing multiple entities (for example,
      # DataItems or structured data rows) in batch.
      class GoogleCloudAiplatformV1beta1CompletionStats
        include Google::Apis::Core::Hashable
      
        # Output only. The number of entities for which any error was encountered.
        # Corresponds to the JSON property `failedCount`
        # @return [Fixnum]
        attr_accessor :failed_count
      
        # Output only. In cases when enough errors are encountered a job, pipeline, or
        # operation may be failed as a whole. Below is the number of entities for which
        # the processing had not been finished (either in successful or failed state).
        # Set to -1 if the number is unknown (for example, the operation failed before
        # the total entity number could be collected).
        # Corresponds to the JSON property `incompleteCount`
        # @return [Fixnum]
        attr_accessor :incomplete_count
      
        # Output only. The number of entities that had been processed successfully.
        # Corresponds to the JSON property `successfulCount`
        # @return [Fixnum]
        attr_accessor :successful_count
      
        # Output only. The number of the successful forecast points that are generated
        # by the forecasting model. This is ONLY used by the forecasting batch
        # prediction.
        # Corresponds to the JSON property `successfulForecastPointCount`
        # @return [Fixnum]
        attr_accessor :successful_forecast_point_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @failed_count = args[:failed_count] if args.key?(:failed_count)
          @incomplete_count = args[:incomplete_count] if args.key?(:incomplete_count)
          @successful_count = args[:successful_count] if args.key?(:successful_count)
          @successful_forecast_point_count = args[:successful_forecast_point_count] if args.key?(:successful_forecast_point_count)
        end
      end
      
      # The Container Registry location for the container image.
      class GoogleCloudAiplatformV1beta1ContainerRegistryDestination
        include Google::Apis::Core::Hashable
      
        # Required. Container Registry URI of a container image. Only Google Container
        # Registry and Artifact Registry are supported now. Accepted forms: * Google
        # Container Registry path. For example: `gcr.io/projectId/imageName:tag`. *
        # Artifact Registry path. For example: `us-central1-docker.pkg.dev/projectId/
        # repoName/imageName:tag`. If a tag is not specified, "latest" will be used as
        # the default tag.
        # Corresponds to the JSON property `outputUri`
        # @return [String]
        attr_accessor :output_uri
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @output_uri = args[:output_uri] if args.key?(:output_uri)
        end
      end
      
      # The spec of a Container.
      class GoogleCloudAiplatformV1beta1ContainerSpec
        include Google::Apis::Core::Hashable
      
        # The arguments to be passed when starting the container.
        # Corresponds to the JSON property `args`
        # @return [Array<String>]
        attr_accessor :args
      
        # The command to be invoked when the container is started. It overrides the
        # entrypoint instruction in Dockerfile when provided.
        # Corresponds to the JSON property `command`
        # @return [Array<String>]
        attr_accessor :command
      
        # Environment variables to be passed to the container. Maximum limit is 100.
        # Corresponds to the JSON property `env`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EnvVar>]
        attr_accessor :env
      
        # Required. The URI of a container image in the Container Registry that is to be
        # run on each worker replica.
        # Corresponds to the JSON property `imageUri`
        # @return [String]
        attr_accessor :image_uri
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @args = args[:args] if args.key?(:args)
          @command = args[:command] if args.key?(:command)
          @env = args[:env] if args.key?(:env)
          @image_uri = args[:image_uri] if args.key?(:image_uri)
        end
      end
      
      # Instance of a general context.
      class GoogleCloudAiplatformV1beta1Context
        include Google::Apis::Core::Hashable
      
        # Output only. Timestamp when this Context was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Description of the Context
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor :description
      
        # User provided display name of the Context. May be up to 128 Unicode characters.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # An eTag used to perform consistent read-modify-write updates. If not set, a
        # blind "overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # The labels with user-defined metadata to organize your Contexts. Label keys
        # and values can be no longer than 64 characters (Unicode codepoints), can only
        # contain lowercase letters, numeric characters, underscores and dashes.
        # International characters are allowed. No more than 64 user labels can be
        # associated with one Context (System labels are excluded).
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Properties of the Context. Top level metadata keys' heading and trailing
        # spaces will be trimmed. The size of this field should not exceed 200KB.
        # Corresponds to the JSON property `metadata`
        # @return [Hash<String,Object>]
        attr_accessor :metadata
      
        # Immutable. The resource name of the Context.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Output only. A list of resource names of Contexts that are parents of this
        # Context. A Context may have at most 10 parent_contexts.
        # Corresponds to the JSON property `parentContexts`
        # @return [Array<String>]
        attr_accessor :parent_contexts
      
        # The title of the schema describing the metadata. Schema title and version is
        # expected to be registered in earlier Create Schema calls. And both are used
        # together as unique identifiers to identify schemas within the local metadata
        # store.
        # Corresponds to the JSON property `schemaTitle`
        # @return [String]
        attr_accessor :schema_title
      
        # The version of the schema in schema_name to use. Schema title and version is
        # expected to be registered in earlier Create Schema calls. And both are used
        # together as unique identifiers to identify schemas within the local metadata
        # store.
        # Corresponds to the JSON property `schemaVersion`
        # @return [String]
        attr_accessor :schema_version
      
        # Output only. Timestamp when this Context was last updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @description = args[:description] if args.key?(:description)
          @display_name = args[:display_name] if args.key?(:display_name)
          @etag = args[:etag] if args.key?(:etag)
          @labels = args[:labels] if args.key?(:labels)
          @metadata = args[:metadata] if args.key?(:metadata)
          @name = args[:name] if args.key?(:name)
          @parent_contexts = args[:parent_contexts] if args.key?(:parent_contexts)
          @schema_title = args[:schema_title] if args.key?(:schema_title)
          @schema_version = args[:schema_version] if args.key?(:schema_version)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # Details of ModelService.CopyModel operation.
      class GoogleCloudAiplatformV1beta1CopyModelOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for ModelService.CopyModel.
      class GoogleCloudAiplatformV1beta1CopyModelRequest
        include Google::Apis::Core::Hashable
      
        # Represents a customer-managed encryption key spec that can be applied to a top-
        # level resource.
        # Corresponds to the JSON property `encryptionSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EncryptionSpec]
        attr_accessor :encryption_spec
      
        # Optional. Copy source_model into a new Model with this ID. The ID will become
        # the final component of the model resource name. This value may be up to 63
        # characters, and valid characters are `[a-z0-9_-]`. The first character cannot
        # be a number or hyphen.
        # Corresponds to the JSON property `modelId`
        # @return [String]
        attr_accessor :model_id
      
        # Optional. Specify this field to copy source_model into this existing Model as
        # a new version. Format: `projects/`project`/locations/`location`/models/`model``
        # Corresponds to the JSON property `parentModel`
        # @return [String]
        attr_accessor :parent_model
      
        # Required. The resource name of the Model to copy. That Model must be in the
        # same Project. Format: `projects/`project`/locations/`location`/models/`model``
        # Corresponds to the JSON property `sourceModel`
        # @return [String]
        attr_accessor :source_model
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @encryption_spec = args[:encryption_spec] if args.key?(:encryption_spec)
          @model_id = args[:model_id] if args.key?(:model_id)
          @parent_model = args[:parent_model] if args.key?(:parent_model)
          @source_model = args[:source_model] if args.key?(:source_model)
        end
      end
      
      # Response message of ModelService.CopyModel operation.
      class GoogleCloudAiplatformV1beta1CopyModelResponse
        include Google::Apis::Core::Hashable
      
        # The name of the copied Model resource. Format: `projects/`project`/locations/`
        # location`/models/`model``
        # Corresponds to the JSON property `model`
        # @return [String]
        attr_accessor :model
      
        # Output only. The version ID of the model that is copied.
        # Corresponds to the JSON property `modelVersionId`
        # @return [String]
        attr_accessor :model_version_id
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @model = args[:model] if args.key?(:model)
          @model_version_id = args[:model_version_id] if args.key?(:model_version_id)
        end
      end
      
      # Request message for PredictionService.CountTokens.
      class GoogleCloudAiplatformV1beta1CountTokensRequest
        include Google::Apis::Core::Hashable
      
        # Required. The instances that are the input to token counting call. Schema is
        # identical to the prediction schema of the underlying model.
        # Corresponds to the JSON property `instances`
        # @return [Array<Object>]
        attr_accessor :instances
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @instances = args[:instances] if args.key?(:instances)
        end
      end
      
      # Response message for PredictionService.CountTokens.
      class GoogleCloudAiplatformV1beta1CountTokensResponse
        include Google::Apis::Core::Hashable
      
        # The total number of billable characters counted across all instances from the
        # request.
        # Corresponds to the JSON property `totalBillableCharacters`
        # @return [Fixnum]
        attr_accessor :total_billable_characters
      
        # The total number of tokens counted across all instances from the request.
        # Corresponds to the JSON property `totalTokens`
        # @return [Fixnum]
        attr_accessor :total_tokens
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @total_billable_characters = args[:total_billable_characters] if args.key?(:total_billable_characters)
          @total_tokens = args[:total_tokens] if args.key?(:total_tokens)
        end
      end
      
      # Runtime operation information for DatasetService.CreateDataset.
      class GoogleCloudAiplatformV1beta1CreateDatasetOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Runtime operation information for DatasetService.CreateDatasetVersion.
      class GoogleCloudAiplatformV1beta1CreateDatasetVersionOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Runtime operation information for CreateDeploymentResourcePool method.
      class GoogleCloudAiplatformV1beta1CreateDeploymentResourcePoolOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for CreateDeploymentResourcePool method.
      class GoogleCloudAiplatformV1beta1CreateDeploymentResourcePoolRequest
        include Google::Apis::Core::Hashable
      
        # A description of resources that can be shared by multiple DeployedModels,
        # whose underlying specification consists of a DedicatedResources.
        # Corresponds to the JSON property `deploymentResourcePool`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DeploymentResourcePool]
        attr_accessor :deployment_resource_pool
      
        # Required. The ID to use for the DeploymentResourcePool, which will become the
        # final component of the DeploymentResourcePool's resource name. The maximum
        # length is 63 characters, and valid characters are `/^[a-z]([a-z0-9-]`0,61`[a-
        # z0-9])?$/`.
        # Corresponds to the JSON property `deploymentResourcePoolId`
        # @return [String]
        attr_accessor :deployment_resource_pool_id
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployment_resource_pool = args[:deployment_resource_pool] if args.key?(:deployment_resource_pool)
          @deployment_resource_pool_id = args[:deployment_resource_pool_id] if args.key?(:deployment_resource_pool_id)
        end
      end
      
      # Runtime operation information for EndpointService.CreateEndpoint.
      class GoogleCloudAiplatformV1beta1CreateEndpointOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Details of operations that perform create EntityType.
      class GoogleCloudAiplatformV1beta1CreateEntityTypeOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Details of ExtensionControllerService.CreateExtensionController operation.
      class GoogleCloudAiplatformV1beta1CreateExtensionControllerOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Details of ExtensionRegistryService.CreateExtensionDeployment operation.
      class GoogleCloudAiplatformV1beta1CreateExtensionDeploymentOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Details of operations that perform create FeatureGroup.
      class GoogleCloudAiplatformV1beta1CreateFeatureGroupOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Details of operations that perform create FeatureOnlineStore.
      class GoogleCloudAiplatformV1beta1CreateFeatureOnlineStoreOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Details of operations that perform create Feature.
      class GoogleCloudAiplatformV1beta1CreateFeatureOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for FeaturestoreService.CreateFeature. Request message for
      # FeatureRegistryService.CreateFeature.
      class GoogleCloudAiplatformV1beta1CreateFeatureRequest
        include Google::Apis::Core::Hashable
      
        # Feature Metadata information that describes an attribute of an entity type.
        # For example, apple is an entity type, and color is a feature that describes
        # apple.
        # Corresponds to the JSON property `feature`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Feature]
        attr_accessor :feature
      
        # Required. The ID to use for the Feature, which will become the final component
        # of the Feature's resource name. This value may be up to 128 characters, and
        # valid characters are `[a-z0-9_]`. The first character cannot be a number. The
        # value must be unique within an EntityType/FeatureGroup.
        # Corresponds to the JSON property `featureId`
        # @return [String]
        attr_accessor :feature_id
      
        # 
        # Corresponds to the JSON property `parent`
        # @return [String]
        attr_accessor :parent
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @feature = args[:feature] if args.key?(:feature)
          @feature_id = args[:feature_id] if args.key?(:feature_id)
          @parent = args[:parent] if args.key?(:parent)
        end
      end
      
      # Details of operations that perform create FeatureView.
      class GoogleCloudAiplatformV1beta1CreateFeatureViewOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Details of operations that perform create Featurestore.
      class GoogleCloudAiplatformV1beta1CreateFeaturestoreOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Runtime operation information for IndexEndpointService.CreateIndexEndpoint.
      class GoogleCloudAiplatformV1beta1CreateIndexEndpointOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Runtime operation information for IndexService.CreateIndex.
      class GoogleCloudAiplatformV1beta1CreateIndexOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        # Runtime operation metadata with regard to Matching Engine Index.
        # Corresponds to the JSON property `nearestNeighborSearchOperationMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadata]
        attr_accessor :nearest_neighbor_search_operation_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
          @nearest_neighbor_search_operation_metadata = args[:nearest_neighbor_search_operation_metadata] if args.key?(:nearest_neighbor_search_operation_metadata)
        end
      end
      
      # Details of operations that perform MetadataService.CreateMetadataStore.
      class GoogleCloudAiplatformV1beta1CreateMetadataStoreOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Metadata information for NotebookService.CreateNotebookRuntimeTemplate.
      class GoogleCloudAiplatformV1beta1CreateNotebookRuntimeTemplateOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Details of operations that perform create PersistentResource.
      class GoogleCloudAiplatformV1beta1CreatePersistentResourceOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for PipelineService.CreatePipelineJob.
      class GoogleCloudAiplatformV1beta1CreatePipelineJobRequest
        include Google::Apis::Core::Hashable
      
        # Required. The resource name of the Location to create the PipelineJob in.
        # Format: `projects/`project`/locations/`location``
        # Corresponds to the JSON property `parent`
        # @return [String]
        attr_accessor :parent
      
        # An instance of a machine learning PipelineJob.
        # Corresponds to the JSON property `pipelineJob`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PipelineJob]
        attr_accessor :pipeline_job
      
        # The ID to use for the PipelineJob, which will become the final component of
        # the PipelineJob name. If not provided, an ID will be automatically generated.
        # This value should be less than 128 characters, and valid characters are `/a-z-/
        # `.
        # Corresponds to the JSON property `pipelineJobId`
        # @return [String]
        attr_accessor :pipeline_job_id
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @parent = args[:parent] if args.key?(:parent)
          @pipeline_job = args[:pipeline_job] if args.key?(:pipeline_job)
          @pipeline_job_id = args[:pipeline_job_id] if args.key?(:pipeline_job_id)
        end
      end
      
      # Details of operations that perform create FeatureGroup.
      class GoogleCloudAiplatformV1beta1CreateRegistryFeatureOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Runtime operation information for SolverService.CreateSolver.
      class GoogleCloudAiplatformV1beta1CreateSolverOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Runtime operation information for SpecialistPoolService.CreateSpecialistPool.
      class GoogleCloudAiplatformV1beta1CreateSpecialistPoolOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Details of operations that perform create Tensorboard.
      class GoogleCloudAiplatformV1beta1CreateTensorboardOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for TensorboardService.CreateTensorboardRun.
      class GoogleCloudAiplatformV1beta1CreateTensorboardRunRequest
        include Google::Apis::Core::Hashable
      
        # Required. The resource name of the TensorboardExperiment to create the
        # TensorboardRun in. Format: `projects/`project`/locations/`location`/
        # tensorboards/`tensorboard`/experiments/`experiment``
        # Corresponds to the JSON property `parent`
        # @return [String]
        attr_accessor :parent
      
        # TensorboardRun maps to a specific execution of a training job with a given set
        # of hyperparameter values, model definition, dataset, etc
        # Corresponds to the JSON property `tensorboardRun`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TensorboardRun]
        attr_accessor :tensorboard_run
      
        # Required. The ID to use for the Tensorboard run, which becomes the final
        # component of the Tensorboard run's resource name. This value should be 1-128
        # characters, and valid characters are `/a-z-/`.
        # Corresponds to the JSON property `tensorboardRunId`
        # @return [String]
        attr_accessor :tensorboard_run_id
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @parent = args[:parent] if args.key?(:parent)
          @tensorboard_run = args[:tensorboard_run] if args.key?(:tensorboard_run)
          @tensorboard_run_id = args[:tensorboard_run_id] if args.key?(:tensorboard_run_id)
        end
      end
      
      # Request message for TensorboardService.CreateTensorboardTimeSeries.
      class GoogleCloudAiplatformV1beta1CreateTensorboardTimeSeriesRequest
        include Google::Apis::Core::Hashable
      
        # Required. The resource name of the TensorboardRun to create the
        # TensorboardTimeSeries in. Format: `projects/`project`/locations/`location`/
        # tensorboards/`tensorboard`/experiments/`experiment`/runs/`run``
        # Corresponds to the JSON property `parent`
        # @return [String]
        attr_accessor :parent
      
        # TensorboardTimeSeries maps to times series produced in training runs
        # Corresponds to the JSON property `tensorboardTimeSeries`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TensorboardTimeSeries]
        attr_accessor :tensorboard_time_series
      
        # Optional. The user specified unique ID to use for the TensorboardTimeSeries,
        # which becomes the final component of the TensorboardTimeSeries's resource name.
        # This value should match "a-z0-9`0, 127`"
        # Corresponds to the JSON property `tensorboardTimeSeriesId`
        # @return [String]
        attr_accessor :tensorboard_time_series_id
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @parent = args[:parent] if args.key?(:parent)
          @tensorboard_time_series = args[:tensorboard_time_series] if args.key?(:tensorboard_time_series)
          @tensorboard_time_series_id = args[:tensorboard_time_series_id] if args.key?(:tensorboard_time_series_id)
        end
      end
      
      # The storage details for CSV output content.
      class GoogleCloudAiplatformV1beta1CsvDestination
        include Google::Apis::Core::Hashable
      
        # The Google Cloud Storage location where the output is to be written to.
        # Corresponds to the JSON property `gcsDestination`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GcsDestination]
        attr_accessor :gcs_destination
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @gcs_destination = args[:gcs_destination] if args.key?(:gcs_destination)
        end
      end
      
      # The storage details for CSV input content.
      class GoogleCloudAiplatformV1beta1CsvSource
        include Google::Apis::Core::Hashable
      
        # The Google Cloud Storage location for the input content.
        # Corresponds to the JSON property `gcsSource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GcsSource]
        attr_accessor :gcs_source
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @gcs_source = args[:gcs_source] if args.key?(:gcs_source)
        end
      end
      
      # Represents a job that runs custom workloads such as a Docker container or a
      # Python package. A CustomJob can have multiple worker pools and each worker
      # pool can have its own machine and input spec. A CustomJob will be cleaned up
      # once the job enters terminal state (failed or succeeded).
      class GoogleCloudAiplatformV1beta1CustomJob
        include Google::Apis::Core::Hashable
      
        # Output only. Time when the CustomJob was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Required. The display name of the CustomJob. The name can be up to 128
        # characters long and can consist of any UTF-8 characters.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Represents a customer-managed encryption key spec that can be applied to a top-
        # level resource.
        # Corresponds to the JSON property `encryptionSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EncryptionSpec]
        attr_accessor :encryption_spec
      
        # Output only. Time when the CustomJob entered any of the following states: `
        # JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.
        # Corresponds to the JSON property `endTime`
        # @return [String]
        attr_accessor :end_time
      
        # The `Status` type defines a logical error model that is suitable for different
        # programming environments, including REST APIs and RPC APIs. It is used by [
        # gRPC](https://github.com/grpc). Each `Status` message contains three pieces of
        # data: error code, error message, and error details. You can find out more
        # about this error model and how to work with it in the [API Design Guide](https:
        # //cloud.google.com/apis/design/errors).
        # Corresponds to the JSON property `error`
        # @return [Google::Apis::AiplatformV1beta1::GoogleRpcStatus]
        attr_accessor :error
      
        # Represents the spec of a CustomJob.
        # Corresponds to the JSON property `jobSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1CustomJobSpec]
        attr_accessor :job_spec
      
        # The labels with user-defined metadata to organize CustomJobs. Label keys and
        # values can be no longer than 64 characters (Unicode codepoints), can only
        # contain lowercase letters, numeric characters, underscores and dashes.
        # International characters are allowed. See https://goo.gl/xmQnxf for more
        # information and examples of labels.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Output only. Resource name of a CustomJob.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Output only. Time when the CustomJob for the first time entered the `
        # JOB_STATE_RUNNING` state.
        # Corresponds to the JSON property `startTime`
        # @return [String]
        attr_accessor :start_time
      
        # Output only. The detailed state of the job.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor :state
      
        # Output only. Time when the CustomJob was most recently updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        # Output only. URIs for accessing [interactive shells](https://cloud.google.com/
        # vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each
        # training node). Only available if job_spec.enable_web_access is `true`. The
        # keys are names of each node in the training job; for example, `workerpool0-0`
        # for the primary node, `workerpool1-0` for the first node in the second worker
        # pool, and `workerpool1-1` for the second node in the second worker pool. The
        # values are the URIs for each node's interactive shell.
        # Corresponds to the JSON property `webAccessUris`
        # @return [Hash<String,String>]
        attr_accessor :web_access_uris
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @display_name = args[:display_name] if args.key?(:display_name)
          @encryption_spec = args[:encryption_spec] if args.key?(:encryption_spec)
          @end_time = args[:end_time] if args.key?(:end_time)
          @error = args[:error] if args.key?(:error)
          @job_spec = args[:job_spec] if args.key?(:job_spec)
          @labels = args[:labels] if args.key?(:labels)
          @name = args[:name] if args.key?(:name)
          @start_time = args[:start_time] if args.key?(:start_time)
          @state = args[:state] if args.key?(:state)
          @update_time = args[:update_time] if args.key?(:update_time)
          @web_access_uris = args[:web_access_uris] if args.key?(:web_access_uris)
        end
      end
      
      # Represents the spec of a CustomJob.
      class GoogleCloudAiplatformV1beta1CustomJobSpec
        include Google::Apis::Core::Hashable
      
        # The Google Cloud Storage location where the output is to be written to.
        # Corresponds to the JSON property `baseOutputDirectory`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GcsDestination]
        attr_accessor :base_output_directory
      
        # Optional. Whether you want Vertex AI to enable access to the customized
        # dashboard in training chief container. If set to `true`, you can access the
        # dashboard at the URIs given by CustomJob.web_access_uris or Trial.
        # web_access_uris (within HyperparameterTuningJob.trials).
        # Corresponds to the JSON property `enableDashboardAccess`
        # @return [Boolean]
        attr_accessor :enable_dashboard_access
        alias_method :enable_dashboard_access?, :enable_dashboard_access
      
        # Optional. Whether you want Vertex AI to enable [interactive shell access](
        # https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-
        # shell) to training containers. If set to `true`, you can access interactive
        # shells at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris
        # (within HyperparameterTuningJob.trials).
        # Corresponds to the JSON property `enableWebAccess`
        # @return [Boolean]
        attr_accessor :enable_web_access
        alias_method :enable_web_access?, :enable_web_access
      
        # Optional. The Experiment associated with this job. Format: `projects/`project`/
        # locations/`location`/metadataStores/`metadataStores`/contexts/`experiment-name`
        # `
        # Corresponds to the JSON property `experiment`
        # @return [String]
        attr_accessor :experiment
      
        # Optional. The Experiment Run associated with this job. Format: `projects/`
        # project`/locations/`location`/metadataStores/`metadataStores`/contexts/`
        # experiment-name`-`experiment-run-name``
        # Corresponds to the JSON property `experimentRun`
        # @return [String]
        attr_accessor :experiment_run
      
        # Optional. The full name of the Compute Engine [network](/compute/docs/networks-
        # and-firewalls#networks) to which the Job should be peered. For example, `
        # projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/
        # v1/networks/insert) is of the form `projects/`project`/global/networks/`
        # network``. Where `project` is a project number, as in `12345`, and `network`
        # is a network name. To specify this field, you must have already [configured
        # VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/
        # general/vpc-peering). If this field is left unspecified, the job is not peered
        # with any network.
        # Corresponds to the JSON property `network`
        # @return [String]
        attr_accessor :network
      
        # Optional. The ID of the PersistentResource in the same Project and Location
        # which to run If this is specified, the job will be run on existing machines
        # held by the PersistentResource instead of on-demand short-live machines. The
        # network and CMEK configs on the job should be consistent with those on the
        # PersistentResource, otherwise, the job will be rejected.
        # Corresponds to the JSON property `persistentResourceId`
        # @return [String]
        attr_accessor :persistent_resource_id
      
        # Optional. A list of names for the reserved ip ranges under the VPC network
        # that can be used for this job. If set, we will deploy the job within the
        # provided ip ranges. Otherwise, the job will be deployed to any ip ranges under
        # the provided VPC network. Example: ['vertex-ai-ip-range'].
        # Corresponds to the JSON property `reservedIpRanges`
        # @return [Array<String>]
        attr_accessor :reserved_ip_ranges
      
        # All parameters related to queuing and scheduling of custom jobs.
        # Corresponds to the JSON property `scheduling`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Scheduling]
        attr_accessor :scheduling
      
        # Specifies the service account for workload run-as account. Users submitting
        # jobs must have act-as permission on this run-as account. If unspecified, the [
        # Vertex AI Custom Code Service Agent](https://cloud.google.com/vertex-ai/docs/
        # general/access-control#service-agents) for the CustomJob's project is used.
        # Corresponds to the JSON property `serviceAccount`
        # @return [String]
        attr_accessor :service_account
      
        # Optional. The name of a Vertex AI Tensorboard resource to which this CustomJob
        # will upload Tensorboard logs. Format: `projects/`project`/locations/`location`/
        # tensorboards/`tensorboard``
        # Corresponds to the JSON property `tensorboard`
        # @return [String]
        attr_accessor :tensorboard
      
        # Required. The spec of the worker pools including machine type and Docker image.
        # All worker pools except the first one are optional and can be skipped by
        # providing an empty value.
        # Corresponds to the JSON property `workerPoolSpecs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1WorkerPoolSpec>]
        attr_accessor :worker_pool_specs
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @base_output_directory = args[:base_output_directory] if args.key?(:base_output_directory)
          @enable_dashboard_access = args[:enable_dashboard_access] if args.key?(:enable_dashboard_access)
          @enable_web_access = args[:enable_web_access] if args.key?(:enable_web_access)
          @experiment = args[:experiment] if args.key?(:experiment)
          @experiment_run = args[:experiment_run] if args.key?(:experiment_run)
          @network = args[:network] if args.key?(:network)
          @persistent_resource_id = args[:persistent_resource_id] if args.key?(:persistent_resource_id)
          @reserved_ip_ranges = args[:reserved_ip_ranges] if args.key?(:reserved_ip_ranges)
          @scheduling = args[:scheduling] if args.key?(:scheduling)
          @service_account = args[:service_account] if args.key?(:service_account)
          @tensorboard = args[:tensorboard] if args.key?(:tensorboard)
          @worker_pool_specs = args[:worker_pool_specs] if args.key?(:worker_pool_specs)
        end
      end
      
      # A piece of data in a Dataset. Could be an image, a video, a document or plain
      # text.
      class GoogleCloudAiplatformV1beta1DataItem
        include Google::Apis::Core::Hashable
      
        # Output only. Timestamp when this DataItem was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Optional. Used to perform consistent read-modify-write updates. If not set, a
        # blind "overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # Optional. The labels with user-defined metadata to organize your DataItems.
        # Label keys and values can be no longer than 64 characters (Unicode codepoints),
        # can only contain lowercase letters, numeric characters, underscores and
        # dashes. International characters are allowed. No more than 64 user labels can
        # be associated with one DataItem(System labels are excluded). See https://goo.
        # gl/xmQnxf for more information and examples of labels. System reserved label
        # keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Output only. The resource name of the DataItem.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Required. The data that the DataItem represents (for example, an image or a
        # text snippet). The schema of the payload is stored in the parent Dataset's
        # metadata schema's dataItemSchemaUri field.
        # Corresponds to the JSON property `payload`
        # @return [Object]
        attr_accessor :payload
      
        # Output only. Timestamp when this DataItem was last updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @etag = args[:etag] if args.key?(:etag)
          @labels = args[:labels] if args.key?(:labels)
          @name = args[:name] if args.key?(:name)
          @payload = args[:payload] if args.key?(:payload)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # A container for a single DataItem and Annotations on it.
      class GoogleCloudAiplatformV1beta1DataItemView
        include Google::Apis::Core::Hashable
      
        # The Annotations on the DataItem. If too many Annotations should be returned
        # for the DataItem, this field will be truncated per annotations_limit in
        # request. If it was, then the has_truncated_annotations will be set to true.
        # Corresponds to the JSON property `annotations`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Annotation>]
        attr_accessor :annotations
      
        # A piece of data in a Dataset. Could be an image, a video, a document or plain
        # text.
        # Corresponds to the JSON property `dataItem`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DataItem]
        attr_accessor :data_item
      
        # True if and only if the Annotations field has been truncated. It happens if
        # more Annotations for this DataItem met the request's annotation_filter than
        # are allowed to be returned by annotations_limit. Note that if Annotations
        # field is not being returned due to field mask, then this field will not be set
        # to true no matter how many Annotations are there.
        # Corresponds to the JSON property `hasTruncatedAnnotations`
        # @return [Boolean]
        attr_accessor :has_truncated_annotations
        alias_method :has_truncated_annotations?, :has_truncated_annotations
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotations = args[:annotations] if args.key?(:annotations)
          @data_item = args[:data_item] if args.key?(:data_item)
          @has_truncated_annotations = args[:has_truncated_annotations] if args.key?(:has_truncated_annotations)
        end
      end
      
      # DataLabelingJob is used to trigger a human labeling job on unlabeled data from
      # the following Dataset:
      class GoogleCloudAiplatformV1beta1DataLabelingJob
        include Google::Apis::Core::Hashable
      
        # Parameters that configure the active learning pipeline. Active learning will
        # label the data incrementally by several iterations. For every iteration, it
        # will select a batch of data based on the sampling strategy.
        # Corresponds to the JSON property `activeLearningConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ActiveLearningConfig]
        attr_accessor :active_learning_config
      
        # Labels to assign to annotations generated by this DataLabelingJob. Label keys
        # and values can be no longer than 64 characters (Unicode codepoints), can only
        # contain lowercase letters, numeric characters, underscores and dashes.
        # International characters are allowed. See https://goo.gl/xmQnxf for more
        # information and examples of labels. System reserved label keys are prefixed
        # with "aiplatform.googleapis.com/" and are immutable.
        # Corresponds to the JSON property `annotationLabels`
        # @return [Hash<String,String>]
        attr_accessor :annotation_labels
      
        # Output only. Timestamp when this DataLabelingJob was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Represents an amount of money with its currency type.
        # Corresponds to the JSON property `currentSpend`
        # @return [Google::Apis::AiplatformV1beta1::GoogleTypeMoney]
        attr_accessor :current_spend
      
        # Required. Dataset resource names. Right now we only support labeling from a
        # single Dataset. Format: `projects/`project`/locations/`location`/datasets/`
        # dataset``
        # Corresponds to the JSON property `datasets`
        # @return [Array<String>]
        attr_accessor :datasets
      
        # Required. The user-defined name of the DataLabelingJob. The name can be up to
        # 128 characters long and can consist of any UTF-8 characters. Display name of a
        # DataLabelingJob.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Represents a customer-managed encryption key spec that can be applied to a top-
        # level resource.
        # Corresponds to the JSON property `encryptionSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EncryptionSpec]
        attr_accessor :encryption_spec
      
        # The `Status` type defines a logical error model that is suitable for different
        # programming environments, including REST APIs and RPC APIs. It is used by [
        # gRPC](https://github.com/grpc). Each `Status` message contains three pieces of
        # data: error code, error message, and error details. You can find out more
        # about this error model and how to work with it in the [API Design Guide](https:
        # //cloud.google.com/apis/design/errors).
        # Corresponds to the JSON property `error`
        # @return [Google::Apis::AiplatformV1beta1::GoogleRpcStatus]
        attr_accessor :error
      
        # Required. Input config parameters for the DataLabelingJob.
        # Corresponds to the JSON property `inputs`
        # @return [Object]
        attr_accessor :inputs
      
        # Required. Points to a YAML file stored on Google Cloud Storage describing the
        # config for a specific type of DataLabelingJob. The schema files that can be
        # used here are found in the https://storage.googleapis.com/google-cloud-
        # aiplatform bucket in the /schema/datalabelingjob/inputs/ folder.
        # Corresponds to the JSON property `inputsSchemaUri`
        # @return [String]
        attr_accessor :inputs_schema_uri
      
        # Required. The Google Cloud Storage location of the instruction pdf. This pdf
        # is shared with labelers, and provides detailed description on how to label
        # DataItems in Datasets.
        # Corresponds to the JSON property `instructionUri`
        # @return [String]
        attr_accessor :instruction_uri
      
        # Required. Number of labelers to work on each DataItem.
        # Corresponds to the JSON property `labelerCount`
        # @return [Fixnum]
        attr_accessor :labeler_count
      
        # Output only. Current labeling job progress percentage scaled in interval [0,
        # 100], indicating the percentage of DataItems that has been finished.
        # Corresponds to the JSON property `labelingProgress`
        # @return [Fixnum]
        attr_accessor :labeling_progress
      
        # The labels with user-defined metadata to organize your DataLabelingJobs. Label
        # keys and values can be no longer than 64 characters (Unicode codepoints), can
        # only contain lowercase letters, numeric characters, underscores and dashes.
        # International characters are allowed. See https://goo.gl/xmQnxf for more
        # information and examples of labels. System reserved label keys are prefixed
        # with "aiplatform.googleapis.com/" and are immutable. Following system labels
        # exist for each DataLabelingJob: * "aiplatform.googleapis.com/schema": output
        # only, its value is the inputs_schema's title.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Output only. Resource name of the DataLabelingJob.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # The SpecialistPools' resource names associated with this job.
        # Corresponds to the JSON property `specialistPools`
        # @return [Array<String>]
        attr_accessor :specialist_pools
      
        # Output only. The detailed state of the job.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor :state
      
        # Output only. Timestamp when this DataLabelingJob was updated most recently.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @active_learning_config = args[:active_learning_config] if args.key?(:active_learning_config)
          @annotation_labels = args[:annotation_labels] if args.key?(:annotation_labels)
          @create_time = args[:create_time] if args.key?(:create_time)
          @current_spend = args[:current_spend] if args.key?(:current_spend)
          @datasets = args[:datasets] if args.key?(:datasets)
          @display_name = args[:display_name] if args.key?(:display_name)
          @encryption_spec = args[:encryption_spec] if args.key?(:encryption_spec)
          @error = args[:error] if args.key?(:error)
          @inputs = args[:inputs] if args.key?(:inputs)
          @inputs_schema_uri = args[:inputs_schema_uri] if args.key?(:inputs_schema_uri)
          @instruction_uri = args[:instruction_uri] if args.key?(:instruction_uri)
          @labeler_count = args[:labeler_count] if args.key?(:labeler_count)
          @labeling_progress = args[:labeling_progress] if args.key?(:labeling_progress)
          @labels = args[:labels] if args.key?(:labels)
          @name = args[:name] if args.key?(:name)
          @specialist_pools = args[:specialist_pools] if args.key?(:specialist_pools)
          @state = args[:state] if args.key?(:state)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # A collection of DataItems and Annotations on them.
      class GoogleCloudAiplatformV1beta1Dataset
        include Google::Apis::Core::Hashable
      
        # Output only. Timestamp when this Dataset was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Output only. The number of DataItems in this Dataset. Only apply for non-
        # structured Dataset.
        # Corresponds to the JSON property `dataItemCount`
        # @return [Fixnum]
        attr_accessor :data_item_count
      
        # The description of the Dataset.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor :description
      
        # Required. The user-defined name of the Dataset. The name can be up to 128
        # characters long and can consist of any UTF-8 characters.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Represents a customer-managed encryption key spec that can be applied to a top-
        # level resource.
        # Corresponds to the JSON property `encryptionSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EncryptionSpec]
        attr_accessor :encryption_spec
      
        # Used to perform consistent read-modify-write updates. If not set, a blind "
        # overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # The labels with user-defined metadata to organize your Datasets. Label keys
        # and values can be no longer than 64 characters (Unicode codepoints), can only
        # contain lowercase letters, numeric characters, underscores and dashes.
        # International characters are allowed. No more than 64 user labels can be
        # associated with one Dataset (System labels are excluded). See https://goo.gl/
        # xmQnxf for more information and examples of labels. System reserved label keys
        # are prefixed with "aiplatform.googleapis.com/" and are immutable. Following
        # system labels exist for each Dataset: * "aiplatform.googleapis.com/
        # dataset_metadata_schema": output only, its value is the metadata_schema's
        # title.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Required. Additional information about the Dataset.
        # Corresponds to the JSON property `metadata`
        # @return [Object]
        attr_accessor :metadata
      
        # Output only. The resource name of the Artifact that was created in
        # MetadataStore when creating the Dataset. The Artifact resource name pattern is
        # `projects/`project`/locations/`location`/metadataStores/`metadata_store`/
        # artifacts/`artifact``.
        # Corresponds to the JSON property `metadataArtifact`
        # @return [String]
        attr_accessor :metadata_artifact
      
        # Required. Points to a YAML file stored on Google Cloud Storage describing
        # additional information about the Dataset. The schema is defined as an OpenAPI
        # 3.0.2 Schema Object. The schema files that can be used here are found in gs://
        # google-cloud-aiplatform/schema/dataset/metadata/.
        # Corresponds to the JSON property `metadataSchemaUri`
        # @return [String]
        attr_accessor :metadata_schema_uri
      
        # Output only. The resource name of the Dataset.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # All SavedQueries belong to the Dataset will be returned in List/Get Dataset
        # response. The annotation_specs field will not be populated except for UI cases
        # which will only use annotation_spec_count. In CreateDataset request, a
        # SavedQuery is created together if this field is set, up to one SavedQuery can
        # be set in CreateDatasetRequest. The SavedQuery should not contain any
        # AnnotationSpec.
        # Corresponds to the JSON property `savedQueries`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SavedQuery>]
        attr_accessor :saved_queries
      
        # Output only. Timestamp when this Dataset was last updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @data_item_count = args[:data_item_count] if args.key?(:data_item_count)
          @description = args[:description] if args.key?(:description)
          @display_name = args[:display_name] if args.key?(:display_name)
          @encryption_spec = args[:encryption_spec] if args.key?(:encryption_spec)
          @etag = args[:etag] if args.key?(:etag)
          @labels = args[:labels] if args.key?(:labels)
          @metadata = args[:metadata] if args.key?(:metadata)
          @metadata_artifact = args[:metadata_artifact] if args.key?(:metadata_artifact)
          @metadata_schema_uri = args[:metadata_schema_uri] if args.key?(:metadata_schema_uri)
          @name = args[:name] if args.key?(:name)
          @saved_queries = args[:saved_queries] if args.key?(:saved_queries)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # Describes the dataset version.
      class GoogleCloudAiplatformV1beta1DatasetVersion
        include Google::Apis::Core::Hashable
      
        # Output only. Name of the associated BigQuery dataset.
        # Corresponds to the JSON property `bigQueryDatasetName`
        # @return [String]
        attr_accessor :big_query_dataset_name
      
        # Output only. Timestamp when this DatasetVersion was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Used to perform consistent read-modify-write updates. If not set, a blind "
        # overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # Output only. The resource name of the DatasetVersion.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Output only. Timestamp when this DatasetVersion was last updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @big_query_dataset_name = args[:big_query_dataset_name] if args.key?(:big_query_dataset_name)
          @create_time = args[:create_time] if args.key?(:create_time)
          @etag = args[:etag] if args.key?(:etag)
          @name = args[:name] if args.key?(:name)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # A description of resources that are dedicated to a DeployedModel, and that
      # need a higher degree of manual configuration.
      class GoogleCloudAiplatformV1beta1DedicatedResources
        include Google::Apis::Core::Hashable
      
        # Immutable. The metric specifications that overrides a resource utilization
        # metric (CPU utilization, accelerator's duty cycle, and so on) target value (
        # default to 60 if not set). At most one entry is allowed per metric. If
        # machine_spec.accelerator_count is above 0, the autoscaling will be based on
        # both CPU utilization and accelerator's duty cycle metrics and scale up when
        # either metrics exceeds its target value while scale down if both metrics are
        # under their target value. The default target value is 60 for both metrics. If
        # machine_spec.accelerator_count is 0, the autoscaling will be based on CPU
        # utilization metric only with default target value 60 if not explicitly set.
        # For example, in the case of Online Prediction, if you want to override target
        # CPU utilization to 80, you should set autoscaling_metric_specs.metric_name to `
        # aiplatform.googleapis.com/prediction/online/cpu/utilization` and
        # autoscaling_metric_specs.target to `80`.
        # Corresponds to the JSON property `autoscalingMetricSpecs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1AutoscalingMetricSpec>]
        attr_accessor :autoscaling_metric_specs
      
        # Specification of a single machine.
        # Corresponds to the JSON property `machineSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MachineSpec]
        attr_accessor :machine_spec
      
        # Immutable. The maximum number of replicas this DeployedModel may be deployed
        # on when the traffic against it increases. If the requested value is too large,
        # the deployment will error, but if deployment succeeds then the ability to
        # scale the model to that many replicas is guaranteed (barring service outages).
        # If traffic against the DeployedModel increases beyond what its replicas at
        # maximum may handle, a portion of the traffic will be dropped. If this value is
        # not provided, will use min_replica_count as the default value. The value of
        # this field impacts the charge against Vertex CPU and GPU quotas. Specifically,
        # you will be charged for (max_replica_count * number of cores in the selected
        # machine type) and (max_replica_count * number of GPUs per replica in the
        # selected machine type).
        # Corresponds to the JSON property `maxReplicaCount`
        # @return [Fixnum]
        attr_accessor :max_replica_count
      
        # Required. Immutable. The minimum number of machine replicas this DeployedModel
        # will be always deployed on. This value must be greater than or equal to 1. If
        # traffic against the DeployedModel increases, it may dynamically be deployed
        # onto more replicas, and as traffic decreases, some of these extra replicas may
        # be freed.
        # Corresponds to the JSON property `minReplicaCount`
        # @return [Fixnum]
        attr_accessor :min_replica_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @autoscaling_metric_specs = args[:autoscaling_metric_specs] if args.key?(:autoscaling_metric_specs)
          @machine_spec = args[:machine_spec] if args.key?(:machine_spec)
          @max_replica_count = args[:max_replica_count] if args.key?(:max_replica_count)
          @min_replica_count = args[:min_replica_count] if args.key?(:min_replica_count)
        end
      end
      
      # Details of operations that delete Feature values.
      class GoogleCloudAiplatformV1beta1DeleteFeatureValuesOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for FeaturestoreService.DeleteFeatureValues.
      class GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequest
        include Google::Apis::Core::Hashable
      
        # Message to select entity. If an entity id is selected, all the feature values
        # corresponding to the entity id will be deleted, including the entityId.
        # Corresponds to the JSON property `selectEntity`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectEntity]
        attr_accessor :select_entity
      
        # Message to select time range and feature. Values of the selected feature
        # generated within an inclusive time range will be deleted. Using this option
        # permanently deletes the feature values from the specified feature IDs within
        # the specified time range. This might include data from the online storage. If
        # you want to retain any deleted historical data in the online storage, you must
        # re-ingest it.
        # Corresponds to the JSON property `selectTimeRangeAndFeature`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature]
        attr_accessor :select_time_range_and_feature
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @select_entity = args[:select_entity] if args.key?(:select_entity)
          @select_time_range_and_feature = args[:select_time_range_and_feature] if args.key?(:select_time_range_and_feature)
        end
      end
      
      # Message to select entity. If an entity id is selected, all the feature values
      # corresponding to the entity id will be deleted, including the entityId.
      class GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectEntity
        include Google::Apis::Core::Hashable
      
        # Selector for entityId. Getting ids from the given source.
        # Corresponds to the JSON property `entityIdSelector`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EntityIdSelector]
        attr_accessor :entity_id_selector
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @entity_id_selector = args[:entity_id_selector] if args.key?(:entity_id_selector)
        end
      end
      
      # Message to select time range and feature. Values of the selected feature
      # generated within an inclusive time range will be deleted. Using this option
      # permanently deletes the feature values from the specified feature IDs within
      # the specified time range. This might include data from the online storage. If
      # you want to retain any deleted historical data in the online storage, you must
      # re-ingest it.
      class GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature
        include Google::Apis::Core::Hashable
      
        # Selector for Features of an EntityType.
        # Corresponds to the JSON property `featureSelector`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureSelector]
        attr_accessor :feature_selector
      
        # If set, data will not be deleted from online storage. When time range is older
        # than the data in online storage, setting this to be true will make the
        # deletion have no impact on online serving.
        # Corresponds to the JSON property `skipOnlineStorageDelete`
        # @return [Boolean]
        attr_accessor :skip_online_storage_delete
        alias_method :skip_online_storage_delete?, :skip_online_storage_delete
      
        # Represents a time interval, encoded as a Timestamp start (inclusive) and a
        # Timestamp end (exclusive). The start must be less than or equal to the end.
        # When the start equals the end, the interval is empty (matches no time). When
        # both start and end are unspecified, the interval matches any time.
        # Corresponds to the JSON property `timeRange`
        # @return [Google::Apis::AiplatformV1beta1::GoogleTypeInterval]
        attr_accessor :time_range
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @feature_selector = args[:feature_selector] if args.key?(:feature_selector)
          @skip_online_storage_delete = args[:skip_online_storage_delete] if args.key?(:skip_online_storage_delete)
          @time_range = args[:time_range] if args.key?(:time_range)
        end
      end
      
      # Response message for FeaturestoreService.DeleteFeatureValues.
      class GoogleCloudAiplatformV1beta1DeleteFeatureValuesResponse
        include Google::Apis::Core::Hashable
      
        # Response message if the request uses the SelectEntity option.
        # Corresponds to the JSON property `selectEntity`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DeleteFeatureValuesResponseSelectEntity]
        attr_accessor :select_entity
      
        # Response message if the request uses the SelectTimeRangeAndFeature option.
        # Corresponds to the JSON property `selectTimeRangeAndFeature`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DeleteFeatureValuesResponseSelectTimeRangeAndFeature]
        attr_accessor :select_time_range_and_feature
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @select_entity = args[:select_entity] if args.key?(:select_entity)
          @select_time_range_and_feature = args[:select_time_range_and_feature] if args.key?(:select_time_range_and_feature)
        end
      end
      
      # Response message if the request uses the SelectEntity option.
      class GoogleCloudAiplatformV1beta1DeleteFeatureValuesResponseSelectEntity
        include Google::Apis::Core::Hashable
      
        # The count of deleted entity rows in the offline storage. Each row corresponds
        # to the combination of an entity ID and a timestamp. One entity ID can have
        # multiple rows in the offline storage.
        # Corresponds to the JSON property `offlineStorageDeletedEntityRowCount`
        # @return [Fixnum]
        attr_accessor :offline_storage_deleted_entity_row_count
      
        # The count of deleted entities in the online storage. Each entity ID
        # corresponds to one entity.
        # Corresponds to the JSON property `onlineStorageDeletedEntityCount`
        # @return [Fixnum]
        attr_accessor :online_storage_deleted_entity_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @offline_storage_deleted_entity_row_count = args[:offline_storage_deleted_entity_row_count] if args.key?(:offline_storage_deleted_entity_row_count)
          @online_storage_deleted_entity_count = args[:online_storage_deleted_entity_count] if args.key?(:online_storage_deleted_entity_count)
        end
      end
      
      # Response message if the request uses the SelectTimeRangeAndFeature option.
      class GoogleCloudAiplatformV1beta1DeleteFeatureValuesResponseSelectTimeRangeAndFeature
        include Google::Apis::Core::Hashable
      
        # The count of the features or columns impacted. This is the same as the feature
        # count in the request.
        # Corresponds to the JSON property `impactedFeatureCount`
        # @return [Fixnum]
        attr_accessor :impacted_feature_count
      
        # The count of modified entity rows in the offline storage. Each row corresponds
        # to the combination of an entity ID and a timestamp. One entity ID can have
        # multiple rows in the offline storage. Within each row, only the features
        # specified in the request are deleted.
        # Corresponds to the JSON property `offlineStorageModifiedEntityRowCount`
        # @return [Fixnum]
        attr_accessor :offline_storage_modified_entity_row_count
      
        # The count of modified entities in the online storage. Each entity ID
        # corresponds to one entity. Within each entity, only the features specified in
        # the request are deleted.
        # Corresponds to the JSON property `onlineStorageModifiedEntityCount`
        # @return [Fixnum]
        attr_accessor :online_storage_modified_entity_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @impacted_feature_count = args[:impacted_feature_count] if args.key?(:impacted_feature_count)
          @offline_storage_modified_entity_row_count = args[:offline_storage_modified_entity_row_count] if args.key?(:offline_storage_modified_entity_row_count)
          @online_storage_modified_entity_count = args[:online_storage_modified_entity_count] if args.key?(:online_storage_modified_entity_count)
        end
      end
      
      # Details of operations that perform MetadataService.DeleteMetadataStore.
      class GoogleCloudAiplatformV1beta1DeleteMetadataStoreOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Details of operations that perform deletes of any entities.
      class GoogleCloudAiplatformV1beta1DeleteOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Runtime operation information for IndexEndpointService.DeployIndex.
      class GoogleCloudAiplatformV1beta1DeployIndexOperationMetadata
        include Google::Apis::Core::Hashable
      
        # The unique index id specified by user
        # Corresponds to the JSON property `deployedIndexId`
        # @return [String]
        attr_accessor :deployed_index_id
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployed_index_id = args[:deployed_index_id] if args.key?(:deployed_index_id)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for IndexEndpointService.DeployIndex.
      class GoogleCloudAiplatformV1beta1DeployIndexRequest
        include Google::Apis::Core::Hashable
      
        # A deployment of an Index. IndexEndpoints contain one or more DeployedIndexes.
        # Corresponds to the JSON property `deployedIndex`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DeployedIndex]
        attr_accessor :deployed_index
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployed_index = args[:deployed_index] if args.key?(:deployed_index)
        end
      end
      
      # Response message for IndexEndpointService.DeployIndex.
      class GoogleCloudAiplatformV1beta1DeployIndexResponse
        include Google::Apis::Core::Hashable
      
        # A deployment of an Index. IndexEndpoints contain one or more DeployedIndexes.
        # Corresponds to the JSON property `deployedIndex`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DeployedIndex]
        attr_accessor :deployed_index
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployed_index = args[:deployed_index] if args.key?(:deployed_index)
        end
      end
      
      # Runtime operation information for EndpointService.DeployModel.
      class GoogleCloudAiplatformV1beta1DeployModelOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for EndpointService.DeployModel.
      class GoogleCloudAiplatformV1beta1DeployModelRequest
        include Google::Apis::Core::Hashable
      
        # A deployment of a Model. Endpoints contain one or more DeployedModels.
        # Corresponds to the JSON property `deployedModel`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DeployedModel]
        attr_accessor :deployed_model
      
        # A map from a DeployedModel's ID to the percentage of this Endpoint's traffic
        # that should be forwarded to that DeployedModel. If this field is non-empty,
        # then the Endpoint's traffic_split will be overwritten with it. To refer to the
        # ID of the just being deployed Model, a "0" should be used, and the actual ID
        # of the new DeployedModel will be filled in its place by this method. The
        # traffic percentage values must add up to 100. If this field is empty, then the
        # Endpoint's traffic_split is not updated.
        # Corresponds to the JSON property `trafficSplit`
        # @return [Hash<String,Fixnum>]
        attr_accessor :traffic_split
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployed_model = args[:deployed_model] if args.key?(:deployed_model)
          @traffic_split = args[:traffic_split] if args.key?(:traffic_split)
        end
      end
      
      # Response message for EndpointService.DeployModel.
      class GoogleCloudAiplatformV1beta1DeployModelResponse
        include Google::Apis::Core::Hashable
      
        # A deployment of a Model. Endpoints contain one or more DeployedModels.
        # Corresponds to the JSON property `deployedModel`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DeployedModel]
        attr_accessor :deployed_model
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployed_model = args[:deployed_model] if args.key?(:deployed_model)
        end
      end
      
      # Runtime operation information for SolverService.DeploySolver.
      class GoogleCloudAiplatformV1beta1DeploySolverOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # A deployment of an Index. IndexEndpoints contain one or more DeployedIndexes.
      class GoogleCloudAiplatformV1beta1DeployedIndex
        include Google::Apis::Core::Hashable
      
        # A description of resources that to large degree are decided by Vertex AI, and
        # require only a modest additional configuration. Each Model supporting these
        # resources documents its specific guidelines.
        # Corresponds to the JSON property `automaticResources`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1AutomaticResources]
        attr_accessor :automatic_resources
      
        # Output only. Timestamp when the DeployedIndex was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # A description of resources that are dedicated to a DeployedModel, and that
        # need a higher degree of manual configuration.
        # Corresponds to the JSON property `dedicatedResources`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DedicatedResources]
        attr_accessor :dedicated_resources
      
        # Used to set up the auth on the DeployedIndex's private endpoint.
        # Corresponds to the JSON property `deployedIndexAuthConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DeployedIndexAuthConfig]
        attr_accessor :deployed_index_auth_config
      
        # Optional. The deployment group can be no longer than 64 characters (eg: 'test',
        # 'prod'). If not set, we will use the 'default' deployment group. Creating `
        # deployment_groups` with `reserved_ip_ranges` is a recommended practice when
        # the peered network has multiple peering ranges. This creates your deployments
        # from predictable IP spaces for easier traffic administration. Also, one
        # deployment_group (except 'default') can only be used with the same
        # reserved_ip_ranges which means if the deployment_group has been used with
        # reserved_ip_ranges: [a, b, c], using it with [a, b] or [d, e] is disallowed.
        # Note: we only support up to 5 deployment groups(not including 'default').
        # Corresponds to the JSON property `deploymentGroup`
        # @return [String]
        attr_accessor :deployment_group
      
        # The display name of the DeployedIndex. If not provided upon creation, the
        # Index's display_name is used.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Optional. If true, private endpoint's access logs are sent to Cloud Logging.
        # These logs are like standard server access logs, containing information like
        # timestamp and latency for each MatchRequest. Note that logs may incur a cost,
        # especially if the deployed index receives a high queries per second rate (QPS).
        # Estimate your costs before enabling this option.
        # Corresponds to the JSON property `enableAccessLogging`
        # @return [Boolean]
        attr_accessor :enable_access_logging
        alias_method :enable_access_logging?, :enable_access_logging
      
        # Required. The user specified ID of the DeployedIndex. The ID can be up to 128
        # characters long and must start with a letter and only contain letters, numbers,
        # and underscores. The ID must be unique within the project it is created in.
        # Corresponds to the JSON property `id`
        # @return [String]
        attr_accessor :id
      
        # Required. The name of the Index this is the deployment of. We may refer to
        # this Index as the DeployedIndex's "original" Index.
        # Corresponds to the JSON property `index`
        # @return [String]
        attr_accessor :index
      
        # Output only. The DeployedIndex may depend on various data on its original
        # Index. Additionally when certain changes to the original Index are being done (
        # e.g. when what the Index contains is being changed) the DeployedIndex may be
        # asynchronously updated in the background to reflect these changes. If this
        # timestamp's value is at least the Index.update_time of the original Index, it
        # means that this DeployedIndex and the original Index are in sync. If this
        # timestamp is older, then to see which updates this DeployedIndex already
        # contains (and which it does not), one must list the operations that are
        # running on the original Index. Only the successfully completed Operations with
        # update_time equal or before this sync time are contained in this DeployedIndex.
        # Corresponds to the JSON property `indexSyncTime`
        # @return [String]
        attr_accessor :index_sync_time
      
        # IndexPrivateEndpoints proto is used to provide paths for users to send
        # requests via private endpoints (e.g. private service access, private service
        # connect). To send request via private service access, use match_grpc_address.
        # To send request via private service connect, use service_attachment.
        # Corresponds to the JSON property `privateEndpoints`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1IndexPrivateEndpoints]
        attr_accessor :private_endpoints
      
        # Optional. A list of reserved ip ranges under the VPC network that can be used
        # for this DeployedIndex. If set, we will deploy the index within the provided
        # ip ranges. Otherwise, the index might be deployed to any ip ranges under the
        # provided VPC network. The value should be the name of the address (https://
        # cloud.google.com/compute/docs/reference/rest/v1/addresses) Example: ['vertex-
        # ai-ip-range']. For more information about subnets and network IP ranges,
        # please see https://cloud.google.com/vpc/docs/subnets#
        # manually_created_subnet_ip_ranges.
        # Corresponds to the JSON property `reservedIpRanges`
        # @return [Array<String>]
        attr_accessor :reserved_ip_ranges
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @automatic_resources = args[:automatic_resources] if args.key?(:automatic_resources)
          @create_time = args[:create_time] if args.key?(:create_time)
          @dedicated_resources = args[:dedicated_resources] if args.key?(:dedicated_resources)
          @deployed_index_auth_config = args[:deployed_index_auth_config] if args.key?(:deployed_index_auth_config)
          @deployment_group = args[:deployment_group] if args.key?(:deployment_group)
          @display_name = args[:display_name] if args.key?(:display_name)
          @enable_access_logging = args[:enable_access_logging] if args.key?(:enable_access_logging)
          @id = args[:id] if args.key?(:id)
          @index = args[:index] if args.key?(:index)
          @index_sync_time = args[:index_sync_time] if args.key?(:index_sync_time)
          @private_endpoints = args[:private_endpoints] if args.key?(:private_endpoints)
          @reserved_ip_ranges = args[:reserved_ip_ranges] if args.key?(:reserved_ip_ranges)
        end
      end
      
      # Used to set up the auth on the DeployedIndex's private endpoint.
      class GoogleCloudAiplatformV1beta1DeployedIndexAuthConfig
        include Google::Apis::Core::Hashable
      
        # Configuration for an authentication provider, including support for [JSON Web
        # Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).
        # Corresponds to the JSON property `authProvider`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DeployedIndexAuthConfigAuthProvider]
        attr_accessor :auth_provider
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @auth_provider = args[:auth_provider] if args.key?(:auth_provider)
        end
      end
      
      # Configuration for an authentication provider, including support for [JSON Web
      # Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).
      class GoogleCloudAiplatformV1beta1DeployedIndexAuthConfigAuthProvider
        include Google::Apis::Core::Hashable
      
        # A list of allowed JWT issuers. Each entry must be a valid Google service
        # account, in the following format: `service-account-name@project-id.iam.
        # gserviceaccount.com`
        # Corresponds to the JSON property `allowedIssuers`
        # @return [Array<String>]
        attr_accessor :allowed_issuers
      
        # The list of JWT [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-
        # web-token-32#section-4.1.3). that are allowed to access. A JWT containing any
        # of these audiences will be accepted.
        # Corresponds to the JSON property `audiences`
        # @return [Array<String>]
        attr_accessor :audiences
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @allowed_issuers = args[:allowed_issuers] if args.key?(:allowed_issuers)
          @audiences = args[:audiences] if args.key?(:audiences)
        end
      end
      
      # Points to a DeployedIndex.
      class GoogleCloudAiplatformV1beta1DeployedIndexRef
        include Google::Apis::Core::Hashable
      
        # Immutable. The ID of the DeployedIndex in the above IndexEndpoint.
        # Corresponds to the JSON property `deployedIndexId`
        # @return [String]
        attr_accessor :deployed_index_id
      
        # Immutable. A resource name of the IndexEndpoint.
        # Corresponds to the JSON property `indexEndpoint`
        # @return [String]
        attr_accessor :index_endpoint
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployed_index_id = args[:deployed_index_id] if args.key?(:deployed_index_id)
          @index_endpoint = args[:index_endpoint] if args.key?(:index_endpoint)
        end
      end
      
      # A deployment of a Model. Endpoints contain one or more DeployedModels.
      class GoogleCloudAiplatformV1beta1DeployedModel
        include Google::Apis::Core::Hashable
      
        # A description of resources that to large degree are decided by Vertex AI, and
        # require only a modest additional configuration. Each Model supporting these
        # resources documents its specific guidelines.
        # Corresponds to the JSON property `automaticResources`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1AutomaticResources]
        attr_accessor :automatic_resources
      
        # Output only. Timestamp when the DeployedModel was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # A description of resources that are dedicated to a DeployedModel, and that
        # need a higher degree of manual configuration.
        # Corresponds to the JSON property `dedicatedResources`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DedicatedResources]
        attr_accessor :dedicated_resources
      
        # If true, deploy the model without explainable feature, regardless the
        # existence of Model.explanation_spec or explanation_spec.
        # Corresponds to the JSON property `disableExplanations`
        # @return [Boolean]
        attr_accessor :disable_explanations
        alias_method :disable_explanations?, :disable_explanations
      
        # The display name of the DeployedModel. If not provided upon creation, the
        # Model's display_name is used.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # If true, online prediction access logs are sent to Cloud Logging. These logs
        # are like standard server access logs, containing information like timestamp
        # and latency for each prediction request. Note that logs may incur a cost,
        # especially if your project receives prediction requests at a high queries per
        # second rate (QPS). Estimate your costs before enabling this option.
        # Corresponds to the JSON property `enableAccessLogging`
        # @return [Boolean]
        attr_accessor :enable_access_logging
        alias_method :enable_access_logging?, :enable_access_logging
      
        # If true, the container of the DeployedModel instances will send `stderr` and `
        # stdout` streams to Cloud Logging. Only supported for custom-trained Models and
        # AutoML Tabular Models.
        # Corresponds to the JSON property `enableContainerLogging`
        # @return [Boolean]
        attr_accessor :enable_container_logging
        alias_method :enable_container_logging?, :enable_container_logging
      
        # Specification of Model explanation.
        # Corresponds to the JSON property `explanationSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExplanationSpec]
        attr_accessor :explanation_spec
      
        # Immutable. The ID of the DeployedModel. If not provided upon deployment,
        # Vertex AI will generate a value for this ID. This value should be 1-10
        # characters, and valid characters are `/[0-9]/`.
        # Corresponds to the JSON property `id`
        # @return [String]
        attr_accessor :id
      
        # Required. The resource name of the Model that this is the deployment of. Note
        # that the Model may be in a different location than the DeployedModel's
        # Endpoint. The resource name may contain version id or version alias to specify
        # the version. Example: `projects/`project`/locations/`location`/models/`model`@
        # 2` or `projects/`project`/locations/`location`/models/`model`@golden` if no
        # version is specified, the default version will be deployed.
        # Corresponds to the JSON property `model`
        # @return [String]
        attr_accessor :model
      
        # Output only. The version ID of the model that is deployed.
        # Corresponds to the JSON property `modelVersionId`
        # @return [String]
        attr_accessor :model_version_id
      
        # PrivateEndpoints proto is used to provide paths for users to send requests
        # privately. To send request via private service access, use predict_http_uri,
        # explain_http_uri or health_http_uri. To send request via private service
        # connect, use service_attachment.
        # Corresponds to the JSON property `privateEndpoints`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PrivateEndpoints]
        attr_accessor :private_endpoints
      
        # The service account that the DeployedModel's container runs as. Specify the
        # email address of the service account. If this service account is not specified,
        # the container runs as a service account that doesn't have access to the
        # resource project. Users deploying the Model must have the `iam.serviceAccounts.
        # actAs` permission on this service account.
        # Corresponds to the JSON property `serviceAccount`
        # @return [String]
        attr_accessor :service_account
      
        # The resource name of the shared DeploymentResourcePool to deploy on. Format: `
        # projects/`project`/locations/`location`/deploymentResourcePools/`
        # deployment_resource_pool``
        # Corresponds to the JSON property `sharedResources`
        # @return [String]
        attr_accessor :shared_resources
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @automatic_resources = args[:automatic_resources] if args.key?(:automatic_resources)
          @create_time = args[:create_time] if args.key?(:create_time)
          @dedicated_resources = args[:dedicated_resources] if args.key?(:dedicated_resources)
          @disable_explanations = args[:disable_explanations] if args.key?(:disable_explanations)
          @display_name = args[:display_name] if args.key?(:display_name)
          @enable_access_logging = args[:enable_access_logging] if args.key?(:enable_access_logging)
          @enable_container_logging = args[:enable_container_logging] if args.key?(:enable_container_logging)
          @explanation_spec = args[:explanation_spec] if args.key?(:explanation_spec)
          @id = args[:id] if args.key?(:id)
          @model = args[:model] if args.key?(:model)
          @model_version_id = args[:model_version_id] if args.key?(:model_version_id)
          @private_endpoints = args[:private_endpoints] if args.key?(:private_endpoints)
          @service_account = args[:service_account] if args.key?(:service_account)
          @shared_resources = args[:shared_resources] if args.key?(:shared_resources)
        end
      end
      
      # Points to a DeployedModel.
      class GoogleCloudAiplatformV1beta1DeployedModelRef
        include Google::Apis::Core::Hashable
      
        # Immutable. An ID of a DeployedModel in the above Endpoint.
        # Corresponds to the JSON property `deployedModelId`
        # @return [String]
        attr_accessor :deployed_model_id
      
        # Immutable. A resource name of an Endpoint.
        # Corresponds to the JSON property `endpoint`
        # @return [String]
        attr_accessor :endpoint
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployed_model_id = args[:deployed_model_id] if args.key?(:deployed_model_id)
          @endpoint = args[:endpoint] if args.key?(:endpoint)
        end
      end
      
      # A description of resources that can be shared by multiple DeployedModels,
      # whose underlying specification consists of a DedicatedResources.
      class GoogleCloudAiplatformV1beta1DeploymentResourcePool
        include Google::Apis::Core::Hashable
      
        # Output only. Timestamp when this DeploymentResourcePool was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # A description of resources that are dedicated to a DeployedModel, and that
        # need a higher degree of manual configuration.
        # Corresponds to the JSON property `dedicatedResources`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DedicatedResources]
        attr_accessor :dedicated_resources
      
        # Immutable. The resource name of the DeploymentResourcePool. Format: `projects/`
        # project`/locations/`location`/deploymentResourcePools/`
        # deployment_resource_pool``
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @dedicated_resources = args[:dedicated_resources] if args.key?(:dedicated_resources)
          @name = args[:name] if args.key?(:name)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1DestinationFeatureSetting
        include Google::Apis::Core::Hashable
      
        # Specify the field name in the export destination. If not specified, Feature ID
        # is used.
        # Corresponds to the JSON property `destinationField`
        # @return [String]
        attr_accessor :destination_field
      
        # Required. The ID of the Feature to apply the setting to.
        # Corresponds to the JSON property `featureId`
        # @return [String]
        attr_accessor :feature_id
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @destination_field = args[:destination_field] if args.key?(:destination_field)
          @feature_id = args[:feature_id] if args.key?(:feature_id)
        end
      end
      
      # Represents the spec of disk options.
      class GoogleCloudAiplatformV1beta1DiskSpec
        include Google::Apis::Core::Hashable
      
        # Size in GB of the boot disk (default is 100GB).
        # Corresponds to the JSON property `bootDiskSizeGb`
        # @return [Fixnum]
        attr_accessor :boot_disk_size_gb
      
        # Type of the boot disk (default is "pd-ssd"). Valid values: "pd-ssd" (
        # Persistent Disk Solid State Drive) or "pd-standard" (Persistent Disk Hard Disk
        # Drive).
        # Corresponds to the JSON property `bootDiskType`
        # @return [String]
        attr_accessor :boot_disk_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @boot_disk_size_gb = args[:boot_disk_size_gb] if args.key?(:boot_disk_size_gb)
          @boot_disk_type = args[:boot_disk_type] if args.key?(:boot_disk_type)
        end
      end
      
      # A list of double values.
      class GoogleCloudAiplatformV1beta1DoubleArray
        include Google::Apis::Core::Hashable
      
        # A list of double values.
        # Corresponds to the JSON property `values`
        # @return [Array<Float>]
        attr_accessor :values
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @values = args[:values] if args.key?(:values)
        end
      end
      
      # Represents a customer-managed encryption key spec that can be applied to a top-
      # level resource.
      class GoogleCloudAiplatformV1beta1EncryptionSpec
        include Google::Apis::Core::Hashable
      
        # Required. The Cloud KMS resource identifier of the customer managed encryption
        # key used to protect a resource. Has the form: `projects/my-project/locations/
        # my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same
        # region as where the compute resource is created.
        # Corresponds to the JSON property `kmsKeyName`
        # @return [String]
        attr_accessor :kms_key_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @kms_key_name = args[:kms_key_name] if args.key?(:kms_key_name)
        end
      end
      
      # Models are deployed into it, and afterwards Endpoint is called to obtain
      # predictions and explanations.
      class GoogleCloudAiplatformV1beta1Endpoint
        include Google::Apis::Core::Hashable
      
        # Output only. Timestamp when this Endpoint was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Output only. The models deployed in this Endpoint. To add or remove
        # DeployedModels use EndpointService.DeployModel and EndpointService.
        # UndeployModel respectively.
        # Corresponds to the JSON property `deployedModels`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DeployedModel>]
        attr_accessor :deployed_models
      
        # The description of the Endpoint.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor :description
      
        # Required. The display name of the Endpoint. The name can be up to 128
        # characters long and can consist of any UTF-8 characters.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Deprecated: If true, expose the Endpoint via private service connect. Only one
        # of the fields, network or enable_private_service_connect, can be set.
        # Corresponds to the JSON property `enablePrivateServiceConnect`
        # @return [Boolean]
        attr_accessor :enable_private_service_connect
        alias_method :enable_private_service_connect?, :enable_private_service_connect
      
        # Represents a customer-managed encryption key spec that can be applied to a top-
        # level resource.
        # Corresponds to the JSON property `encryptionSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EncryptionSpec]
        attr_accessor :encryption_spec
      
        # Used to perform consistent read-modify-write updates. If not set, a blind "
        # overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # The labels with user-defined metadata to organize your Endpoints. Label keys
        # and values can be no longer than 64 characters (Unicode codepoints), can only
        # contain lowercase letters, numeric characters, underscores and dashes.
        # International characters are allowed. See https://goo.gl/xmQnxf for more
        # information and examples of labels.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Output only. Resource name of the Model Monitoring job associated with this
        # Endpoint if monitoring is enabled by JobService.
        # CreateModelDeploymentMonitoringJob. Format: `projects/`project`/locations/`
        # location`/modelDeploymentMonitoringJobs/`model_deployment_monitoring_job``
        # Corresponds to the JSON property `modelDeploymentMonitoringJob`
        # @return [String]
        attr_accessor :model_deployment_monitoring_job
      
        # Output only. The resource name of the Endpoint.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Optional. The full name of the Google Compute Engine [network](https://cloud.
        # google.com//compute/docs/networks-and-firewalls#networks) to which the
        # Endpoint should be peered. Private services access must already be configured
        # for the network. If left unspecified, the Endpoint is not peered with any
        # network. Only one of the fields, network or enable_private_service_connect,
        # can be set. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/
        # networks/insert): `projects/`project`/global/networks/`network``. Where ``
        # project`` is a project number, as in `12345`, and ``network`` is network name.
        # Corresponds to the JSON property `network`
        # @return [String]
        attr_accessor :network
      
        # Configuration for logging request-response to a BigQuery table.
        # Corresponds to the JSON property `predictRequestResponseLoggingConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig]
        attr_accessor :predict_request_response_logging_config
      
        # A map from a DeployedModel's ID to the percentage of this Endpoint's traffic
        # that should be forwarded to that DeployedModel. If a DeployedModel's ID is not
        # listed in this map, then it receives no traffic. The traffic percentage values
        # must add up to 100, or map must be empty if the Endpoint is to not accept any
        # traffic at a moment.
        # Corresponds to the JSON property `trafficSplit`
        # @return [Hash<String,Fixnum>]
        attr_accessor :traffic_split
      
        # Output only. Timestamp when this Endpoint was last updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @deployed_models = args[:deployed_models] if args.key?(:deployed_models)
          @description = args[:description] if args.key?(:description)
          @display_name = args[:display_name] if args.key?(:display_name)
          @enable_private_service_connect = args[:enable_private_service_connect] if args.key?(:enable_private_service_connect)
          @encryption_spec = args[:encryption_spec] if args.key?(:encryption_spec)
          @etag = args[:etag] if args.key?(:etag)
          @labels = args[:labels] if args.key?(:labels)
          @model_deployment_monitoring_job = args[:model_deployment_monitoring_job] if args.key?(:model_deployment_monitoring_job)
          @name = args[:name] if args.key?(:name)
          @network = args[:network] if args.key?(:network)
          @predict_request_response_logging_config = args[:predict_request_response_logging_config] if args.key?(:predict_request_response_logging_config)
          @traffic_split = args[:traffic_split] if args.key?(:traffic_split)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # Selector for entityId. Getting ids from the given source.
      class GoogleCloudAiplatformV1beta1EntityIdSelector
        include Google::Apis::Core::Hashable
      
        # The storage details for CSV input content.
        # Corresponds to the JSON property `csvSource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1CsvSource]
        attr_accessor :csv_source
      
        # Source column that holds entity IDs. If not provided, entity IDs are extracted
        # from the column named entity_id.
        # Corresponds to the JSON property `entityIdField`
        # @return [String]
        attr_accessor :entity_id_field
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @csv_source = args[:csv_source] if args.key?(:csv_source)
          @entity_id_field = args[:entity_id_field] if args.key?(:entity_id_field)
        end
      end
      
      # An entity type is a type of object in a system that needs to be modeled and
      # have stored information about. For example, driver is an entity type, and
      # driver0 is an instance of an entity type driver.
      class GoogleCloudAiplatformV1beta1EntityType
        include Google::Apis::Core::Hashable
      
        # Output only. Timestamp when this EntityType was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Optional. Description of the EntityType.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor :description
      
        # Optional. Used to perform a consistent read-modify-write updates. If not set,
        # a blind "overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # Optional. The labels with user-defined metadata to organize your EntityTypes.
        # Label keys and values can be no longer than 64 characters (Unicode codepoints),
        # can only contain lowercase letters, numeric characters, underscores and
        # dashes. International characters are allowed. See https://goo.gl/xmQnxf for
        # more information on and examples of labels. No more than 64 user labels can be
        # associated with one EntityType (System labels are excluded)." System reserved
        # label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Configuration of how features in Featurestore are monitored.
        # Corresponds to the JSON property `monitoringConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfig]
        attr_accessor :monitoring_config
      
        # Immutable. Name of the EntityType. Format: `projects/`project`/locations/`
        # location`/featurestores/`featurestore`/entityTypes/`entity_type`` The last
        # part entity_type is assigned by the client. The entity_type can be up to 64
        # characters long and can consist only of ASCII Latin letters A-Z and a-z and
        # underscore(_), and ASCII digits 0-9 starting with a letter. The value will be
        # unique given a featurestore.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Optional. Config for data retention policy in offline storage. TTL in days for
        # feature values that will be stored in offline storage. The Feature Store
        # offline storage periodically removes obsolete feature values older than `
        # offline_storage_ttl_days` since the feature generation time. If unset (or
        # explicitly set to 0), default to 4000 days TTL.
        # Corresponds to the JSON property `offlineStorageTtlDays`
        # @return [Fixnum]
        attr_accessor :offline_storage_ttl_days
      
        # Output only. Timestamp when this EntityType was most recently updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @description = args[:description] if args.key?(:description)
          @etag = args[:etag] if args.key?(:etag)
          @labels = args[:labels] if args.key?(:labels)
          @monitoring_config = args[:monitoring_config] if args.key?(:monitoring_config)
          @name = args[:name] if args.key?(:name)
          @offline_storage_ttl_days = args[:offline_storage_ttl_days] if args.key?(:offline_storage_ttl_days)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # Represents an environment variable present in a Container or Python Module.
      class GoogleCloudAiplatformV1beta1EnvVar
        include Google::Apis::Core::Hashable
      
        # Required. Name of the environment variable. Must be a valid C identifier.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Required. Variables that reference a $(VAR_NAME) are expanded using the
        # previous defined environment variables in the container and any service
        # environment variables. If a variable cannot be resolved, the reference in the
        # input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a
        # double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
        # regardless of whether the variable exists or not.
        # Corresponds to the JSON property `value`
        # @return [String]
        attr_accessor :value
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @name = args[:name] if args.key?(:name)
          @value = args[:value] if args.key?(:value)
        end
      end
      
      # Model error analysis for each annotation.
      class GoogleCloudAiplatformV1beta1ErrorAnalysisAnnotation
        include Google::Apis::Core::Hashable
      
        # Attributed items for a given annotation, typically representing neighbors from
        # the training sets constrained by the query type.
        # Corresponds to the JSON property `attributedItems`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ErrorAnalysisAnnotationAttributedItem>]
        attr_accessor :attributed_items
      
        # The outlier score of this annotated item. Usually defined as the min of all
        # distances from attributed items.
        # Corresponds to the JSON property `outlierScore`
        # @return [Float]
        attr_accessor :outlier_score
      
        # The threshold used to determine if this annotation is an outlier or not.
        # Corresponds to the JSON property `outlierThreshold`
        # @return [Float]
        attr_accessor :outlier_threshold
      
        # The query type used for finding the attributed items.
        # Corresponds to the JSON property `queryType`
        # @return [String]
        attr_accessor :query_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @attributed_items = args[:attributed_items] if args.key?(:attributed_items)
          @outlier_score = args[:outlier_score] if args.key?(:outlier_score)
          @outlier_threshold = args[:outlier_threshold] if args.key?(:outlier_threshold)
          @query_type = args[:query_type] if args.key?(:query_type)
        end
      end
      
      # Attributed items for a given annotation, typically representing neighbors from
      # the training sets constrained by the query type.
      class GoogleCloudAiplatformV1beta1ErrorAnalysisAnnotationAttributedItem
        include Google::Apis::Core::Hashable
      
        # The unique ID for each annotation. Used by FE to allocate the annotation in DB.
        # Corresponds to the JSON property `annotationResourceName`
        # @return [String]
        attr_accessor :annotation_resource_name
      
        # The distance of this item to the annotation.
        # Corresponds to the JSON property `distance`
        # @return [Float]
        attr_accessor :distance
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotation_resource_name = args[:annotation_resource_name] if args.key?(:annotation_resource_name)
          @distance = args[:distance] if args.key?(:distance)
        end
      end
      
      # True positive, false positive, or false negative. EvaluatedAnnotation is only
      # available under ModelEvaluationSlice with slice of `annotationSpec` dimension.
      class GoogleCloudAiplatformV1beta1EvaluatedAnnotation
        include Google::Apis::Core::Hashable
      
        # Output only. The data item payload that the Model predicted this
        # EvaluatedAnnotation on.
        # Corresponds to the JSON property `dataItemPayload`
        # @return [Object]
        attr_accessor :data_item_payload
      
        # Annotations of model error analysis results.
        # Corresponds to the JSON property `errorAnalysisAnnotations`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ErrorAnalysisAnnotation>]
        attr_accessor :error_analysis_annotations
      
        # Output only. ID of the EvaluatedDataItemView under the same ancestor
        # ModelEvaluation. The EvaluatedDataItemView consists of all ground truths and
        # predictions on data_item_payload.
        # Corresponds to the JSON property `evaluatedDataItemViewId`
        # @return [String]
        attr_accessor :evaluated_data_item_view_id
      
        # Explanations of predictions. Each element of the explanations indicates the
        # explanation for one explanation Method. The attributions list in the
        # EvaluatedAnnotationExplanation.explanation object corresponds to the
        # predictions list. For example, the second element in the attributions list
        # explains the second element in the predictions list.
        # Corresponds to the JSON property `explanations`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EvaluatedAnnotationExplanation>]
        attr_accessor :explanations
      
        # Output only. The ground truth Annotations, i.e. the Annotations that exist in
        # the test data the Model is evaluated on. For true positive, there is one and
        # only one ground truth annotation, which matches the only prediction in
        # predictions. For false positive, there are zero or more ground truth
        # annotations that are similar to the only prediction in predictions, but not
        # enough for a match. For false negative, there is one and only one ground truth
        # annotation, which doesn't match any predictions created by the model. The
        # schema of the ground truth is stored in ModelEvaluation.annotation_schema_uri
        # Corresponds to the JSON property `groundTruths`
        # @return [Array<Object>]
        attr_accessor :ground_truths
      
        # Output only. The model predicted annotations. For true positive, there is one
        # and only one prediction, which matches the only one ground truth annotation in
        # ground_truths. For false positive, there is one and only one prediction, which
        # doesn't match any ground truth annotation of the corresponding
        # data_item_view_id. For false negative, there are zero or more predictions
        # which are similar to the only ground truth annotation in ground_truths but not
        # enough for a match. The schema of the prediction is stored in ModelEvaluation.
        # annotation_schema_uri
        # Corresponds to the JSON property `predictions`
        # @return [Array<Object>]
        attr_accessor :predictions
      
        # Output only. Type of the EvaluatedAnnotation.
        # Corresponds to the JSON property `type`
        # @return [String]
        attr_accessor :type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @data_item_payload = args[:data_item_payload] if args.key?(:data_item_payload)
          @error_analysis_annotations = args[:error_analysis_annotations] if args.key?(:error_analysis_annotations)
          @evaluated_data_item_view_id = args[:evaluated_data_item_view_id] if args.key?(:evaluated_data_item_view_id)
          @explanations = args[:explanations] if args.key?(:explanations)
          @ground_truths = args[:ground_truths] if args.key?(:ground_truths)
          @predictions = args[:predictions] if args.key?(:predictions)
          @type = args[:type] if args.key?(:type)
        end
      end
      
      # Explanation result of the prediction produced by the Model.
      class GoogleCloudAiplatformV1beta1EvaluatedAnnotationExplanation
        include Google::Apis::Core::Hashable
      
        # Explanation of a prediction (provided in PredictResponse.predictions) produced
        # by the Model on a given instance.
        # Corresponds to the JSON property `explanation`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Explanation]
        attr_accessor :explanation
      
        # Explanation type. For AutoML Image Classification models, possible values are:
        # * `image-integrated-gradients` * `image-xrai`
        # Corresponds to the JSON property `explanationType`
        # @return [String]
        attr_accessor :explanation_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @explanation = args[:explanation] if args.key?(:explanation)
          @explanation_type = args[:explanation_type] if args.key?(:explanation_type)
        end
      end
      
      # An edge describing the relationship between an Artifact and an Execution in a
      # lineage graph.
      class GoogleCloudAiplatformV1beta1Event
        include Google::Apis::Core::Hashable
      
        # Required. The relative resource name of the Artifact in the Event.
        # Corresponds to the JSON property `artifact`
        # @return [String]
        attr_accessor :artifact
      
        # Output only. Time the Event occurred.
        # Corresponds to the JSON property `eventTime`
        # @return [String]
        attr_accessor :event_time
      
        # Output only. The relative resource name of the Execution in the Event.
        # Corresponds to the JSON property `execution`
        # @return [String]
        attr_accessor :execution
      
        # The labels with user-defined metadata to annotate Events. Label keys and
        # values can be no longer than 64 characters (Unicode codepoints), can only
        # contain lowercase letters, numeric characters, underscores and dashes.
        # International characters are allowed. No more than 64 user labels can be
        # associated with one Event (System labels are excluded). See https://goo.gl/
        # xmQnxf for more information and examples of labels. System reserved label keys
        # are prefixed with "aiplatform.googleapis.com/" and are immutable.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Required. The type of the Event.
        # Corresponds to the JSON property `type`
        # @return [String]
        attr_accessor :type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @artifact = args[:artifact] if args.key?(:artifact)
          @event_time = args[:event_time] if args.key?(:event_time)
          @execution = args[:execution] if args.key?(:execution)
          @labels = args[:labels] if args.key?(:labels)
          @type = args[:type] if args.key?(:type)
        end
      end
      
      # Example-based explainability that returns the nearest neighbors from the
      # provided dataset.
      class GoogleCloudAiplatformV1beta1Examples
        include Google::Apis::Core::Hashable
      
        # The Cloud Storage input instances.
        # Corresponds to the JSON property `exampleGcsSource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExamplesExampleGcsSource]
        attr_accessor :example_gcs_source
      
        # The Google Cloud Storage location for the input content.
        # Corresponds to the JSON property `gcsSource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GcsSource]
        attr_accessor :gcs_source
      
        # The full configuration for the generated index, the semantics are the same as
        # metadata and should match [NearestNeighborSearchConfig](https://cloud.google.
        # com/vertex-ai/docs/explainable-ai/configuring-explanations-example-based#
        # nearest-neighbor-search-config).
        # Corresponds to the JSON property `nearestNeighborSearchConfig`
        # @return [Object]
        attr_accessor :nearest_neighbor_search_config
      
        # The number of neighbors to return when querying for examples.
        # Corresponds to the JSON property `neighborCount`
        # @return [Fixnum]
        attr_accessor :neighbor_count
      
        # Preset configuration for example-based explanations
        # Corresponds to the JSON property `presets`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Presets]
        attr_accessor :presets
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @example_gcs_source = args[:example_gcs_source] if args.key?(:example_gcs_source)
          @gcs_source = args[:gcs_source] if args.key?(:gcs_source)
          @nearest_neighbor_search_config = args[:nearest_neighbor_search_config] if args.key?(:nearest_neighbor_search_config)
          @neighbor_count = args[:neighbor_count] if args.key?(:neighbor_count)
          @presets = args[:presets] if args.key?(:presets)
        end
      end
      
      # The Cloud Storage input instances.
      class GoogleCloudAiplatformV1beta1ExamplesExampleGcsSource
        include Google::Apis::Core::Hashable
      
        # The format in which instances are given, if not specified, assume it's JSONL
        # format. Currently only JSONL format is supported.
        # Corresponds to the JSON property `dataFormat`
        # @return [String]
        attr_accessor :data_format
      
        # The Google Cloud Storage location for the input content.
        # Corresponds to the JSON property `gcsSource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GcsSource]
        attr_accessor :gcs_source
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @data_format = args[:data_format] if args.key?(:data_format)
          @gcs_source = args[:gcs_source] if args.key?(:gcs_source)
        end
      end
      
      # Overrides for example-based explanations.
      class GoogleCloudAiplatformV1beta1ExamplesOverride
        include Google::Apis::Core::Hashable
      
        # The number of neighbors to return that have the same crowding tag.
        # Corresponds to the JSON property `crowdingCount`
        # @return [Fixnum]
        attr_accessor :crowding_count
      
        # The format of the data being provided with each call.
        # Corresponds to the JSON property `dataFormat`
        # @return [String]
        attr_accessor :data_format
      
        # The number of neighbors to return.
        # Corresponds to the JSON property `neighborCount`
        # @return [Fixnum]
        attr_accessor :neighbor_count
      
        # Restrict the resulting nearest neighbors to respect these constraints.
        # Corresponds to the JSON property `restrictions`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExamplesRestrictionsNamespace>]
        attr_accessor :restrictions
      
        # If true, return the embeddings instead of neighbors.
        # Corresponds to the JSON property `returnEmbeddings`
        # @return [Boolean]
        attr_accessor :return_embeddings
        alias_method :return_embeddings?, :return_embeddings
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @crowding_count = args[:crowding_count] if args.key?(:crowding_count)
          @data_format = args[:data_format] if args.key?(:data_format)
          @neighbor_count = args[:neighbor_count] if args.key?(:neighbor_count)
          @restrictions = args[:restrictions] if args.key?(:restrictions)
          @return_embeddings = args[:return_embeddings] if args.key?(:return_embeddings)
        end
      end
      
      # Restrictions namespace for example-based explanations overrides.
      class GoogleCloudAiplatformV1beta1ExamplesRestrictionsNamespace
        include Google::Apis::Core::Hashable
      
        # The list of allowed tags.
        # Corresponds to the JSON property `allow`
        # @return [Array<String>]
        attr_accessor :allow
      
        # The list of deny tags.
        # Corresponds to the JSON property `deny`
        # @return [Array<String>]
        attr_accessor :deny
      
        # The namespace name.
        # Corresponds to the JSON property `namespaceName`
        # @return [String]
        attr_accessor :namespace_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @allow = args[:allow] if args.key?(:allow)
          @deny = args[:deny] if args.key?(:deny)
          @namespace_name = args[:namespace_name] if args.key?(:namespace_name)
        end
      end
      
      # Instance of a general execution.
      class GoogleCloudAiplatformV1beta1Execution
        include Google::Apis::Core::Hashable
      
        # Output only. Timestamp when this Execution was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Description of the Execution
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor :description
      
        # User provided display name of the Execution. May be up to 128 Unicode
        # characters.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # An eTag used to perform consistent read-modify-write updates. If not set, a
        # blind "overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # The labels with user-defined metadata to organize your Executions. Label keys
        # and values can be no longer than 64 characters (Unicode codepoints), can only
        # contain lowercase letters, numeric characters, underscores and dashes.
        # International characters are allowed. No more than 64 user labels can be
        # associated with one Execution (System labels are excluded).
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Properties of the Execution. Top level metadata keys' heading and trailing
        # spaces will be trimmed. The size of this field should not exceed 200KB.
        # Corresponds to the JSON property `metadata`
        # @return [Hash<String,Object>]
        attr_accessor :metadata
      
        # Output only. The resource name of the Execution.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # The title of the schema describing the metadata. Schema title and version is
        # expected to be registered in earlier Create Schema calls. And both are used
        # together as unique identifiers to identify schemas within the local metadata
        # store.
        # Corresponds to the JSON property `schemaTitle`
        # @return [String]
        attr_accessor :schema_title
      
        # The version of the schema in `schema_title` to use. Schema title and version
        # is expected to be registered in earlier Create Schema calls. And both are used
        # together as unique identifiers to identify schemas within the local metadata
        # store.
        # Corresponds to the JSON property `schemaVersion`
        # @return [String]
        attr_accessor :schema_version
      
        # The state of this Execution. This is a property of the Execution, and does not
        # imply or capture any ongoing process. This property is managed by clients (
        # such as Vertex AI Pipelines) and the system does not prescribe or check the
        # validity of state transitions.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor :state
      
        # Output only. Timestamp when this Execution was last updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @description = args[:description] if args.key?(:description)
          @display_name = args[:display_name] if args.key?(:display_name)
          @etag = args[:etag] if args.key?(:etag)
          @labels = args[:labels] if args.key?(:labels)
          @metadata = args[:metadata] if args.key?(:metadata)
          @name = args[:name] if args.key?(:name)
          @schema_title = args[:schema_title] if args.key?(:schema_title)
          @schema_version = args[:schema_version] if args.key?(:schema_version)
          @state = args[:state] if args.key?(:state)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # Request message for PredictionService.Explain.
      class GoogleCloudAiplatformV1beta1ExplainRequest
        include Google::Apis::Core::Hashable
      
        # If specified, this ExplainRequest will be served by the chosen DeployedModel,
        # overriding Endpoint.traffic_split.
        # Corresponds to the JSON property `deployedModelId`
        # @return [String]
        attr_accessor :deployed_model_id
      
        # The ExplanationSpec entries that can be overridden at online explanation time.
        # Corresponds to the JSON property `explanationSpecOverride`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExplanationSpecOverride]
        attr_accessor :explanation_spec_override
      
        # Required. The instances that are the input to the explanation call. A
        # DeployedModel may have an upper limit on the number of instances it supports
        # per request, and when it is exceeded the explanation call errors in case of
        # AutoML Models, or, in case of customer created Models, the behaviour is as
        # documented by that Model. The schema of any single instance may be specified
        # via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.
        # Corresponds to the JSON property `instances`
        # @return [Array<Object>]
        attr_accessor :instances
      
        # The parameters that govern the prediction. The schema of the parameters may be
        # specified via Endpoint's DeployedModels' Model's PredictSchemata's
        # parameters_schema_uri.
        # Corresponds to the JSON property `parameters`
        # @return [Object]
        attr_accessor :parameters
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployed_model_id = args[:deployed_model_id] if args.key?(:deployed_model_id)
          @explanation_spec_override = args[:explanation_spec_override] if args.key?(:explanation_spec_override)
          @instances = args[:instances] if args.key?(:instances)
          @parameters = args[:parameters] if args.key?(:parameters)
        end
      end
      
      # Response message for PredictionService.Explain.
      class GoogleCloudAiplatformV1beta1ExplainResponse
        include Google::Apis::Core::Hashable
      
        # ID of the Endpoint's DeployedModel that served this explanation.
        # Corresponds to the JSON property `deployedModelId`
        # @return [String]
        attr_accessor :deployed_model_id
      
        # The explanations of the Model's PredictResponse.predictions. It has the same
        # number of elements as instances to be explained.
        # Corresponds to the JSON property `explanations`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Explanation>]
        attr_accessor :explanations
      
        # The predictions that are the output of the predictions call. Same as
        # PredictResponse.predictions.
        # Corresponds to the JSON property `predictions`
        # @return [Array<Object>]
        attr_accessor :predictions
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployed_model_id = args[:deployed_model_id] if args.key?(:deployed_model_id)
          @explanations = args[:explanations] if args.key?(:explanations)
          @predictions = args[:predictions] if args.key?(:predictions)
        end
      end
      
      # Explanation of a prediction (provided in PredictResponse.predictions) produced
      # by the Model on a given instance.
      class GoogleCloudAiplatformV1beta1Explanation
        include Google::Apis::Core::Hashable
      
        # Output only. Feature attributions grouped by predicted outputs. For Models
        # that predict only one output, such as regression Models that predict only one
        # score, there is only one attibution that explains the predicted output. For
        # Models that predict multiple outputs, such as multiclass Models that predict
        # multiple classes, each element explains one specific item. Attribution.
        # output_index can be used to identify which output this attribution is
        # explaining. If users set ExplanationParameters.top_k, the attributions are
        # sorted by instance_output_value in descending order. If ExplanationParameters.
        # output_indices is specified, the attributions are stored by Attribution.
        # output_index in the same order as they appear in the output_indices.
        # Corresponds to the JSON property `attributions`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Attribution>]
        attr_accessor :attributions
      
        # Output only. List of the nearest neighbors for example-based explanations. For
        # models deployed with the examples explanations feature enabled, the
        # attributions field is empty and instead the neighbors field is populated.
        # Corresponds to the JSON property `neighbors`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Neighbor>]
        attr_accessor :neighbors
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @attributions = args[:attributions] if args.key?(:attributions)
          @neighbors = args[:neighbors] if args.key?(:neighbors)
        end
      end
      
      # Metadata describing the Model's input and output for explanation.
      class GoogleCloudAiplatformV1beta1ExplanationMetadata
        include Google::Apis::Core::Hashable
      
        # Points to a YAML file stored on Google Cloud Storage describing the format of
        # the feature attributions. The schema is defined as an OpenAPI 3.0.2 [Schema
        # Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.
        # md#schemaObject). AutoML tabular Models always have this field populated by
        # Vertex AI. Note: The URI given on output may be different, including the URI
        # scheme, than the one given on input. The output URI will point to a location
        # where the user only has a read access.
        # Corresponds to the JSON property `featureAttributionsSchemaUri`
        # @return [String]
        attr_accessor :feature_attributions_schema_uri
      
        # Required. Map from feature names to feature input metadata. Keys are the name
        # of the features. Values are the specification of the feature. An empty
        # InputMetadata is valid. It describes a text feature which has the name
        # specified as the key in ExplanationMetadata.inputs. The baseline of the empty
        # feature is chosen by Vertex AI. For Vertex AI-provided Tensorflow images, the
        # key can be any friendly name of the feature. Once specified,
        # featureAttributions are keyed by this key (if not grouped with another feature)
        # . For custom images, the key must match with the key in instance.
        # Corresponds to the JSON property `inputs`
        # @return [Hash<String,Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadata>]
        attr_accessor :inputs
      
        # Name of the source to generate embeddings for example based explanations.
        # Corresponds to the JSON property `latentSpaceSource`
        # @return [String]
        attr_accessor :latent_space_source
      
        # Required. Map from output names to output metadata. For Vertex AI-provided
        # Tensorflow images, keys can be any user defined string that consists of any
        # UTF-8 characters. For custom images, keys are the name of the output field in
        # the prediction to be explained. Currently only one key is allowed.
        # Corresponds to the JSON property `outputs`
        # @return [Hash<String,Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata>]
        attr_accessor :outputs
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @feature_attributions_schema_uri = args[:feature_attributions_schema_uri] if args.key?(:feature_attributions_schema_uri)
          @inputs = args[:inputs] if args.key?(:inputs)
          @latent_space_source = args[:latent_space_source] if args.key?(:latent_space_source)
          @outputs = args[:outputs] if args.key?(:outputs)
        end
      end
      
      # Metadata of the input of a feature. Fields other than InputMetadata.
      # input_baselines are applicable only for Models that are using Vertex AI-
      # provided images for Tensorflow.
      class GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadata
        include Google::Apis::Core::Hashable
      
        # Specifies the shape of the values of the input if the input is a sparse
        # representation. Refer to Tensorflow documentation for more details: https://
        # www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor.
        # Corresponds to the JSON property `denseShapeTensorName`
        # @return [String]
        attr_accessor :dense_shape_tensor_name
      
        # A list of baselines for the encoded tensor. The shape of each baseline should
        # match the shape of the encoded tensor. If a scalar is provided, Vertex AI
        # broadcasts to the same shape as the encoded tensor.
        # Corresponds to the JSON property `encodedBaselines`
        # @return [Array<Object>]
        attr_accessor :encoded_baselines
      
        # Encoded tensor is a transformation of the input tensor. Must be provided if
        # choosing Integrated Gradients attribution or XRAI attribution and the input
        # tensor is not differentiable. An encoded tensor is generated if the input
        # tensor is encoded by a lookup table.
        # Corresponds to the JSON property `encodedTensorName`
        # @return [String]
        attr_accessor :encoded_tensor_name
      
        # Defines how the feature is encoded into the input tensor. Defaults to IDENTITY.
        # Corresponds to the JSON property `encoding`
        # @return [String]
        attr_accessor :encoding
      
        # Domain details of the input feature value. Provides numeric information about
        # the feature, such as its range (min, max). If the feature has been pre-
        # processed, for example with z-scoring, then it provides information about how
        # to recover the original feature. For example, if the input feature is an image
        # and it has been pre-processed to obtain 0-mean and stddev = 1 values, then
        # original_mean, and original_stddev refer to the mean and stddev of the
        # original feature (e.g. image tensor) from which input feature (with mean = 0
        # and stddev = 1) was obtained.
        # Corresponds to the JSON property `featureValueDomain`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain]
        attr_accessor :feature_value_domain
      
        # Name of the group that the input belongs to. Features with the same group name
        # will be treated as one feature when computing attributions. Features grouped
        # together can have different shapes in value. If provided, there will be one
        # single attribution generated in Attribution.feature_attributions, keyed by the
        # group name.
        # Corresponds to the JSON property `groupName`
        # @return [String]
        attr_accessor :group_name
      
        # A list of feature names for each index in the input tensor. Required when the
        # input InputMetadata.encoding is BAG_OF_FEATURES, BAG_OF_FEATURES_SPARSE,
        # INDICATOR.
        # Corresponds to the JSON property `indexFeatureMapping`
        # @return [Array<String>]
        attr_accessor :index_feature_mapping
      
        # Specifies the index of the values of the input tensor. Required when the input
        # tensor is a sparse representation. Refer to Tensorflow documentation for more
        # details: https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor.
        # Corresponds to the JSON property `indicesTensorName`
        # @return [String]
        attr_accessor :indices_tensor_name
      
        # Baseline inputs for this feature. If no baseline is specified, Vertex AI
        # chooses the baseline for this feature. If multiple baselines are specified,
        # Vertex AI returns the average attributions across them in Attribution.
        # feature_attributions. For Vertex AI-provided Tensorflow images (both 1.x and 2.
        # x), the shape of each baseline must match the shape of the input tensor. If a
        # scalar is provided, we broadcast to the same shape as the input tensor. For
        # custom images, the element of the baselines must be in the same format as the
        # feature's input in the instance[]. The schema of any single instance may be
        # specified via Endpoint's DeployedModels' Model's PredictSchemata's
        # instance_schema_uri.
        # Corresponds to the JSON property `inputBaselines`
        # @return [Array<Object>]
        attr_accessor :input_baselines
      
        # Name of the input tensor for this feature. Required and is only applicable to
        # Vertex AI-provided images for Tensorflow.
        # Corresponds to the JSON property `inputTensorName`
        # @return [String]
        attr_accessor :input_tensor_name
      
        # Modality of the feature. Valid values are: numeric, image. Defaults to numeric.
        # Corresponds to the JSON property `modality`
        # @return [String]
        attr_accessor :modality
      
        # Visualization configurations for image explanation.
        # Corresponds to the JSON property `visualization`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualization]
        attr_accessor :visualization
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @dense_shape_tensor_name = args[:dense_shape_tensor_name] if args.key?(:dense_shape_tensor_name)
          @encoded_baselines = args[:encoded_baselines] if args.key?(:encoded_baselines)
          @encoded_tensor_name = args[:encoded_tensor_name] if args.key?(:encoded_tensor_name)
          @encoding = args[:encoding] if args.key?(:encoding)
          @feature_value_domain = args[:feature_value_domain] if args.key?(:feature_value_domain)
          @group_name = args[:group_name] if args.key?(:group_name)
          @index_feature_mapping = args[:index_feature_mapping] if args.key?(:index_feature_mapping)
          @indices_tensor_name = args[:indices_tensor_name] if args.key?(:indices_tensor_name)
          @input_baselines = args[:input_baselines] if args.key?(:input_baselines)
          @input_tensor_name = args[:input_tensor_name] if args.key?(:input_tensor_name)
          @modality = args[:modality] if args.key?(:modality)
          @visualization = args[:visualization] if args.key?(:visualization)
        end
      end
      
      # Domain details of the input feature value. Provides numeric information about
      # the feature, such as its range (min, max). If the feature has been pre-
      # processed, for example with z-scoring, then it provides information about how
      # to recover the original feature. For example, if the input feature is an image
      # and it has been pre-processed to obtain 0-mean and stddev = 1 values, then
      # original_mean, and original_stddev refer to the mean and stddev of the
      # original feature (e.g. image tensor) from which input feature (with mean = 0
      # and stddev = 1) was obtained.
      class GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain
        include Google::Apis::Core::Hashable
      
        # The maximum permissible value for this feature.
        # Corresponds to the JSON property `maxValue`
        # @return [Float]
        attr_accessor :max_value
      
        # The minimum permissible value for this feature.
        # Corresponds to the JSON property `minValue`
        # @return [Float]
        attr_accessor :min_value
      
        # If this input feature has been normalized to a mean value of 0, the
        # original_mean specifies the mean value of the domain prior to normalization.
        # Corresponds to the JSON property `originalMean`
        # @return [Float]
        attr_accessor :original_mean
      
        # If this input feature has been normalized to a standard deviation of 1.0, the
        # original_stddev specifies the standard deviation of the domain prior to
        # normalization.
        # Corresponds to the JSON property `originalStddev`
        # @return [Float]
        attr_accessor :original_stddev
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @max_value = args[:max_value] if args.key?(:max_value)
          @min_value = args[:min_value] if args.key?(:min_value)
          @original_mean = args[:original_mean] if args.key?(:original_mean)
          @original_stddev = args[:original_stddev] if args.key?(:original_stddev)
        end
      end
      
      # Visualization configurations for image explanation.
      class GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualization
        include Google::Apis::Core::Hashable
      
        # Excludes attributions below the specified percentile, from the highlighted
        # areas. Defaults to 62.
        # Corresponds to the JSON property `clipPercentLowerbound`
        # @return [Float]
        attr_accessor :clip_percent_lowerbound
      
        # Excludes attributions above the specified percentile from the highlighted
        # areas. Using the clip_percent_upperbound and clip_percent_lowerbound together
        # can be useful for filtering out noise and making it easier to see areas of
        # strong attribution. Defaults to 99.9.
        # Corresponds to the JSON property `clipPercentUpperbound`
        # @return [Float]
        attr_accessor :clip_percent_upperbound
      
        # The color scheme used for the highlighted areas. Defaults to PINK_GREEN for
        # Integrated Gradients attribution, which shows positive attributions in green
        # and negative in pink. Defaults to VIRIDIS for XRAI attribution, which
        # highlights the most influential regions in yellow and the least influential in
        # blue.
        # Corresponds to the JSON property `colorMap`
        # @return [String]
        attr_accessor :color_map
      
        # How the original image is displayed in the visualization. Adjusting the
        # overlay can help increase visual clarity if the original image makes it
        # difficult to view the visualization. Defaults to NONE.
        # Corresponds to the JSON property `overlayType`
        # @return [String]
        attr_accessor :overlay_type
      
        # Whether to only highlight pixels with positive contributions, negative or both.
        # Defaults to POSITIVE.
        # Corresponds to the JSON property `polarity`
        # @return [String]
        attr_accessor :polarity
      
        # Type of the image visualization. Only applicable to Integrated Gradients
        # attribution. OUTLINES shows regions of attribution, while PIXELS shows per-
        # pixel attribution. Defaults to OUTLINES.
        # Corresponds to the JSON property `type`
        # @return [String]
        attr_accessor :type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @clip_percent_lowerbound = args[:clip_percent_lowerbound] if args.key?(:clip_percent_lowerbound)
          @clip_percent_upperbound = args[:clip_percent_upperbound] if args.key?(:clip_percent_upperbound)
          @color_map = args[:color_map] if args.key?(:color_map)
          @overlay_type = args[:overlay_type] if args.key?(:overlay_type)
          @polarity = args[:polarity] if args.key?(:polarity)
          @type = args[:type] if args.key?(:type)
        end
      end
      
      # Metadata of the prediction output to be explained.
      class GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata
        include Google::Apis::Core::Hashable
      
        # Specify a field name in the prediction to look for the display name. Use this
        # if the prediction contains the display names for the outputs. The display
        # names in the prediction must have the same shape of the outputs, so that it
        # can be located by Attribution.output_index for a specific output.
        # Corresponds to the JSON property `displayNameMappingKey`
        # @return [String]
        attr_accessor :display_name_mapping_key
      
        # Static mapping between the index and display name. Use this if the outputs are
        # a deterministic n-dimensional array, e.g. a list of scores of all the classes
        # in a pre-defined order for a multi-classification Model. It's not feasible if
        # the outputs are non-deterministic, e.g. the Model produces top-k classes or
        # sort the outputs by their values. The shape of the value must be an n-
        # dimensional array of strings. The number of dimensions must match that of the
        # outputs to be explained. The Attribution.output_display_name is populated by
        # locating in the mapping with Attribution.output_index.
        # Corresponds to the JSON property `indexDisplayNameMapping`
        # @return [Object]
        attr_accessor :index_display_name_mapping
      
        # Name of the output tensor. Required and is only applicable to Vertex AI
        # provided images for Tensorflow.
        # Corresponds to the JSON property `outputTensorName`
        # @return [String]
        attr_accessor :output_tensor_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @display_name_mapping_key = args[:display_name_mapping_key] if args.key?(:display_name_mapping_key)
          @index_display_name_mapping = args[:index_display_name_mapping] if args.key?(:index_display_name_mapping)
          @output_tensor_name = args[:output_tensor_name] if args.key?(:output_tensor_name)
        end
      end
      
      # The ExplanationMetadata entries that can be overridden at online explanation
      # time.
      class GoogleCloudAiplatformV1beta1ExplanationMetadataOverride
        include Google::Apis::Core::Hashable
      
        # Required. Overrides the input metadata of the features. The key is the name of
        # the feature to be overridden. The keys specified here must exist in the input
        # metadata to be overridden. If a feature is not specified here, the
        # corresponding feature's input metadata is not overridden.
        # Corresponds to the JSON property `inputs`
        # @return [Hash<String,Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExplanationMetadataOverrideInputMetadataOverride>]
        attr_accessor :inputs
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @inputs = args[:inputs] if args.key?(:inputs)
        end
      end
      
      # The input metadata entries to be overridden.
      class GoogleCloudAiplatformV1beta1ExplanationMetadataOverrideInputMetadataOverride
        include Google::Apis::Core::Hashable
      
        # Baseline inputs for this feature. This overrides the `input_baseline` field of
        # the ExplanationMetadata.InputMetadata object of the corresponding feature's
        # input metadata. If it's not specified, the original baselines are not
        # overridden.
        # Corresponds to the JSON property `inputBaselines`
        # @return [Array<Object>]
        attr_accessor :input_baselines
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @input_baselines = args[:input_baselines] if args.key?(:input_baselines)
        end
      end
      
      # Parameters to configure explaining for Model's predictions.
      class GoogleCloudAiplatformV1beta1ExplanationParameters
        include Google::Apis::Core::Hashable
      
        # Example-based explainability that returns the nearest neighbors from the
        # provided dataset.
        # Corresponds to the JSON property `examples`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Examples]
        attr_accessor :examples
      
        # An attribution method that computes the Aumann-Shapley value taking advantage
        # of the model's fully differentiable structure. Refer to this paper for more
        # details: https://arxiv.org/abs/1703.01365
        # Corresponds to the JSON property `integratedGradientsAttribution`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution]
        attr_accessor :integrated_gradients_attribution
      
        # If populated, only returns attributions that have output_index contained in
        # output_indices. It must be an ndarray of integers, with the same shape of the
        # output it's explaining. If not populated, returns attributions for top_k
        # indices of outputs. If neither top_k nor output_indices is populated, returns
        # the argmax index of the outputs. Only applicable to Models that predict
        # multiple outputs (e,g, multi-class Models that predict multiple classes).
        # Corresponds to the JSON property `outputIndices`
        # @return [Array<Object>]
        attr_accessor :output_indices
      
        # An attribution method that approximates Shapley values for features that
        # contribute to the label being predicted. A sampling strategy is used to
        # approximate the value rather than considering all subsets of features.
        # Corresponds to the JSON property `sampledShapleyAttribution`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SampledShapleyAttribution]
        attr_accessor :sampled_shapley_attribution
      
        # If populated, returns attributions for top K indices of outputs (defaults to 1)
        # . Only applies to Models that predicts more than one outputs (e,g, multi-class
        # Models). When set to -1, returns explanations for all outputs.
        # Corresponds to the JSON property `topK`
        # @return [Fixnum]
        attr_accessor :top_k
      
        # An explanation method that redistributes Integrated Gradients attributions to
        # segmented regions, taking advantage of the model's fully differentiable
        # structure. Refer to this paper for more details: https://arxiv.org/abs/1906.
        # 02825 Supported only by image Models.
        # Corresponds to the JSON property `xraiAttribution`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1XraiAttribution]
        attr_accessor :xrai_attribution
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @examples = args[:examples] if args.key?(:examples)
          @integrated_gradients_attribution = args[:integrated_gradients_attribution] if args.key?(:integrated_gradients_attribution)
          @output_indices = args[:output_indices] if args.key?(:output_indices)
          @sampled_shapley_attribution = args[:sampled_shapley_attribution] if args.key?(:sampled_shapley_attribution)
          @top_k = args[:top_k] if args.key?(:top_k)
          @xrai_attribution = args[:xrai_attribution] if args.key?(:xrai_attribution)
        end
      end
      
      # Specification of Model explanation.
      class GoogleCloudAiplatformV1beta1ExplanationSpec
        include Google::Apis::Core::Hashable
      
        # Metadata describing the Model's input and output for explanation.
        # Corresponds to the JSON property `metadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExplanationMetadata]
        attr_accessor :metadata
      
        # Parameters to configure explaining for Model's predictions.
        # Corresponds to the JSON property `parameters`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExplanationParameters]
        attr_accessor :parameters
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @metadata = args[:metadata] if args.key?(:metadata)
          @parameters = args[:parameters] if args.key?(:parameters)
        end
      end
      
      # The ExplanationSpec entries that can be overridden at online explanation time.
      class GoogleCloudAiplatformV1beta1ExplanationSpecOverride
        include Google::Apis::Core::Hashable
      
        # Overrides for example-based explanations.
        # Corresponds to the JSON property `examplesOverride`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExamplesOverride]
        attr_accessor :examples_override
      
        # The ExplanationMetadata entries that can be overridden at online explanation
        # time.
        # Corresponds to the JSON property `metadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExplanationMetadataOverride]
        attr_accessor :metadata
      
        # Parameters to configure explaining for Model's predictions.
        # Corresponds to the JSON property `parameters`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExplanationParameters]
        attr_accessor :parameters
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @examples_override = args[:examples_override] if args.key?(:examples_override)
          @metadata = args[:metadata] if args.key?(:metadata)
          @parameters = args[:parameters] if args.key?(:parameters)
        end
      end
      
      # Describes what part of the Dataset is to be exported, the destination of the
      # export and how to export.
      class GoogleCloudAiplatformV1beta1ExportDataConfig
        include Google::Apis::Core::Hashable
      
        # An expression for filtering what part of the Dataset is to be exported. Only
        # Annotations that match this filter will be exported. The filter syntax is the
        # same as in ListAnnotations.
        # Corresponds to the JSON property `annotationsFilter`
        # @return [String]
        attr_accessor :annotations_filter
      
        # Assigns input data to training, validation, and test sets based on the given
        # filters, data pieces not matched by any filter are ignored. Currently only
        # supported for Datasets containing DataItems. If any of the filters in this
        # message are to match nothing, then they can be set as '-' (the minus sign).
        # Supported only for unstructured Datasets.
        # Corresponds to the JSON property `filterSplit`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExportFilterSplit]
        attr_accessor :filter_split
      
        # Assigns the input data to training, validation, and test sets as per the given
        # fractions. Any of `training_fraction`, `validation_fraction` and `
        # test_fraction` may optionally be provided, they must sum to up to 1. If the
        # provided ones sum to less than 1, the remainder is assigned to sets as decided
        # by Vertex AI. If none of the fractions are set, by default roughly 80% of data
        # is used for training, 10% for validation, and 10% for test.
        # Corresponds to the JSON property `fractionSplit`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExportFractionSplit]
        attr_accessor :fraction_split
      
        # The Google Cloud Storage location where the output is to be written to.
        # Corresponds to the JSON property `gcsDestination`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GcsDestination]
        attr_accessor :gcs_destination
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotations_filter = args[:annotations_filter] if args.key?(:annotations_filter)
          @filter_split = args[:filter_split] if args.key?(:filter_split)
          @fraction_split = args[:fraction_split] if args.key?(:fraction_split)
          @gcs_destination = args[:gcs_destination] if args.key?(:gcs_destination)
        end
      end
      
      # Runtime operation information for DatasetService.ExportData.
      class GoogleCloudAiplatformV1beta1ExportDataOperationMetadata
        include Google::Apis::Core::Hashable
      
        # A Google Cloud Storage directory which path ends with '/'. The exported data
        # is stored in the directory.
        # Corresponds to the JSON property `gcsOutputDirectory`
        # @return [String]
        attr_accessor :gcs_output_directory
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @gcs_output_directory = args[:gcs_output_directory] if args.key?(:gcs_output_directory)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for DatasetService.ExportData.
      class GoogleCloudAiplatformV1beta1ExportDataRequest
        include Google::Apis::Core::Hashable
      
        # Describes what part of the Dataset is to be exported, the destination of the
        # export and how to export.
        # Corresponds to the JSON property `exportConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExportDataConfig]
        attr_accessor :export_config
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @export_config = args[:export_config] if args.key?(:export_config)
        end
      end
      
      # Response message for DatasetService.ExportData.
      class GoogleCloudAiplatformV1beta1ExportDataResponse
        include Google::Apis::Core::Hashable
      
        # All of the files that are exported in this export operation.
        # Corresponds to the JSON property `exportedFiles`
        # @return [Array<String>]
        attr_accessor :exported_files
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @exported_files = args[:exported_files] if args.key?(:exported_files)
        end
      end
      
      # Details of EndpointService.ExportEndpoint operation.
      class GoogleCloudAiplatformV1beta1ExportEndpointOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Response message of EndpointService.ExportEndpoint operation.
      class GoogleCloudAiplatformV1beta1ExportEndpointResponse
        include Google::Apis::Core::Hashable
      
        # Describes the output of the ExportEndpoint.
        # Corresponds to the JSON property `outputInfo`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExportEndpointResponseOutputInfo]
        attr_accessor :output_info
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @output_info = args[:output_info] if args.key?(:output_info)
        end
      end
      
      # Describes the output of the ExportEndpoint.
      class GoogleCloudAiplatformV1beta1ExportEndpointResponseOutputInfo
        include Google::Apis::Core::Hashable
      
        # The BigQuery location for the output content.
        # Corresponds to the JSON property `bigQueryDestination`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BigQueryDestination]
        attr_accessor :big_query_destination
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @big_query_destination = args[:big_query_destination] if args.key?(:big_query_destination)
        end
      end
      
      # Details of operations that exports Features values.
      class GoogleCloudAiplatformV1beta1ExportFeatureValuesOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for FeaturestoreService.ExportFeatureValues.
      class GoogleCloudAiplatformV1beta1ExportFeatureValuesRequest
        include Google::Apis::Core::Hashable
      
        # A destination location for Feature values and format.
        # Corresponds to the JSON property `destination`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureValueDestination]
        attr_accessor :destination
      
        # Selector for Features of an EntityType.
        # Corresponds to the JSON property `featureSelector`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureSelector]
        attr_accessor :feature_selector
      
        # Describes exporting all historical Feature values of all entities of the
        # EntityType between [start_time, end_time].
        # Corresponds to the JSON property `fullExport`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExportFeatureValuesRequestFullExport]
        attr_accessor :full_export
      
        # Per-Feature export settings.
        # Corresponds to the JSON property `settings`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DestinationFeatureSetting>]
        attr_accessor :settings
      
        # Describes exporting the latest Feature values of all entities of the
        # EntityType between [start_time, snapshot_time].
        # Corresponds to the JSON property `snapshotExport`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExportFeatureValuesRequestSnapshotExport]
        attr_accessor :snapshot_export
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @destination = args[:destination] if args.key?(:destination)
          @feature_selector = args[:feature_selector] if args.key?(:feature_selector)
          @full_export = args[:full_export] if args.key?(:full_export)
          @settings = args[:settings] if args.key?(:settings)
          @snapshot_export = args[:snapshot_export] if args.key?(:snapshot_export)
        end
      end
      
      # Describes exporting all historical Feature values of all entities of the
      # EntityType between [start_time, end_time].
      class GoogleCloudAiplatformV1beta1ExportFeatureValuesRequestFullExport
        include Google::Apis::Core::Hashable
      
        # Exports Feature values as of this timestamp. If not set, retrieve values as of
        # now. Timestamp, if present, must not have higher than millisecond precision.
        # Corresponds to the JSON property `endTime`
        # @return [String]
        attr_accessor :end_time
      
        # Excludes Feature values with feature generation timestamp before this
        # timestamp. If not set, retrieve oldest values kept in Feature Store. Timestamp,
        # if present, must not have higher than millisecond precision.
        # Corresponds to the JSON property `startTime`
        # @return [String]
        attr_accessor :start_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @end_time = args[:end_time] if args.key?(:end_time)
          @start_time = args[:start_time] if args.key?(:start_time)
        end
      end
      
      # Describes exporting the latest Feature values of all entities of the
      # EntityType between [start_time, snapshot_time].
      class GoogleCloudAiplatformV1beta1ExportFeatureValuesRequestSnapshotExport
        include Google::Apis::Core::Hashable
      
        # Exports Feature values as of this timestamp. If not set, retrieve values as of
        # now. Timestamp, if present, must not have higher than millisecond precision.
        # Corresponds to the JSON property `snapshotTime`
        # @return [String]
        attr_accessor :snapshot_time
      
        # Excludes Feature values with feature generation timestamp before this
        # timestamp. If not set, retrieve oldest values kept in Feature Store. Timestamp,
        # if present, must not have higher than millisecond precision.
        # Corresponds to the JSON property `startTime`
        # @return [String]
        attr_accessor :start_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @snapshot_time = args[:snapshot_time] if args.key?(:snapshot_time)
          @start_time = args[:start_time] if args.key?(:start_time)
        end
      end
      
      # Response message for FeaturestoreService.ExportFeatureValues.
      class GoogleCloudAiplatformV1beta1ExportFeatureValuesResponse
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Assigns input data to training, validation, and test sets based on the given
      # filters, data pieces not matched by any filter are ignored. Currently only
      # supported for Datasets containing DataItems. If any of the filters in this
      # message are to match nothing, then they can be set as '-' (the minus sign).
      # Supported only for unstructured Datasets.
      class GoogleCloudAiplatformV1beta1ExportFilterSplit
        include Google::Apis::Core::Hashable
      
        # Required. A filter on DataItems of the Dataset. DataItems that match this
        # filter are used to test the Model. A filter with same syntax as the one used
        # in DatasetService.ListDataItems may be used. If a single DataItem is matched
        # by more than one of the FilterSplit filters, then it is assigned to the first
        # set that applies to it in the training, validation, test order.
        # Corresponds to the JSON property `testFilter`
        # @return [String]
        attr_accessor :test_filter
      
        # Required. A filter on DataItems of the Dataset. DataItems that match this
        # filter are used to train the Model. A filter with same syntax as the one used
        # in DatasetService.ListDataItems may be used. If a single DataItem is matched
        # by more than one of the FilterSplit filters, then it is assigned to the first
        # set that applies to it in the training, validation, test order.
        # Corresponds to the JSON property `trainingFilter`
        # @return [String]
        attr_accessor :training_filter
      
        # Required. A filter on DataItems of the Dataset. DataItems that match this
        # filter are used to validate the Model. A filter with same syntax as the one
        # used in DatasetService.ListDataItems may be used. If a single DataItem is
        # matched by more than one of the FilterSplit filters, then it is assigned to
        # the first set that applies to it in the training, validation, test order.
        # Corresponds to the JSON property `validationFilter`
        # @return [String]
        attr_accessor :validation_filter
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @test_filter = args[:test_filter] if args.key?(:test_filter)
          @training_filter = args[:training_filter] if args.key?(:training_filter)
          @validation_filter = args[:validation_filter] if args.key?(:validation_filter)
        end
      end
      
      # Assigns the input data to training, validation, and test sets as per the given
      # fractions. Any of `training_fraction`, `validation_fraction` and `
      # test_fraction` may optionally be provided, they must sum to up to 1. If the
      # provided ones sum to less than 1, the remainder is assigned to sets as decided
      # by Vertex AI. If none of the fractions are set, by default roughly 80% of data
      # is used for training, 10% for validation, and 10% for test.
      class GoogleCloudAiplatformV1beta1ExportFractionSplit
        include Google::Apis::Core::Hashable
      
        # The fraction of the input data that is to be used to evaluate the Model.
        # Corresponds to the JSON property `testFraction`
        # @return [Float]
        attr_accessor :test_fraction
      
        # The fraction of the input data that is to be used to train the Model.
        # Corresponds to the JSON property `trainingFraction`
        # @return [Float]
        attr_accessor :training_fraction
      
        # The fraction of the input data that is to be used to validate the Model.
        # Corresponds to the JSON property `validationFraction`
        # @return [Float]
        attr_accessor :validation_fraction
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @test_fraction = args[:test_fraction] if args.key?(:test_fraction)
          @training_fraction = args[:training_fraction] if args.key?(:training_fraction)
          @validation_fraction = args[:validation_fraction] if args.key?(:validation_fraction)
        end
      end
      
      # Details of ModelService.ExportModel operation.
      class GoogleCloudAiplatformV1beta1ExportModelOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        # Further describes the output of the ExportModel. Supplements
        # ExportModelRequest.OutputConfig.
        # Corresponds to the JSON property `outputInfo`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExportModelOperationMetadataOutputInfo]
        attr_accessor :output_info
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
          @output_info = args[:output_info] if args.key?(:output_info)
        end
      end
      
      # Further describes the output of the ExportModel. Supplements
      # ExportModelRequest.OutputConfig.
      class GoogleCloudAiplatformV1beta1ExportModelOperationMetadataOutputInfo
        include Google::Apis::Core::Hashable
      
        # Output only. If the Model artifact is being exported to Google Cloud Storage
        # this is the full path of the directory created, into which the Model files are
        # being written to.
        # Corresponds to the JSON property `artifactOutputUri`
        # @return [String]
        attr_accessor :artifact_output_uri
      
        # Output only. If the Model image is being exported to Google Container Registry
        # or Artifact Registry this is the full path of the image created.
        # Corresponds to the JSON property `imageOutputUri`
        # @return [String]
        attr_accessor :image_output_uri
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @artifact_output_uri = args[:artifact_output_uri] if args.key?(:artifact_output_uri)
          @image_output_uri = args[:image_output_uri] if args.key?(:image_output_uri)
        end
      end
      
      # Request message for ModelService.ExportModel.
      class GoogleCloudAiplatformV1beta1ExportModelRequest
        include Google::Apis::Core::Hashable
      
        # Output configuration for the Model export.
        # Corresponds to the JSON property `outputConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExportModelRequestOutputConfig]
        attr_accessor :output_config
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @output_config = args[:output_config] if args.key?(:output_config)
        end
      end
      
      # Output configuration for the Model export.
      class GoogleCloudAiplatformV1beta1ExportModelRequestOutputConfig
        include Google::Apis::Core::Hashable
      
        # The Google Cloud Storage location where the output is to be written to.
        # Corresponds to the JSON property `artifactDestination`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GcsDestination]
        attr_accessor :artifact_destination
      
        # The ID of the format in which the Model must be exported. Each Model lists the
        # export formats it supports. If no value is provided here, then the first from
        # the list of the Model's supported formats is used by default.
        # Corresponds to the JSON property `exportFormatId`
        # @return [String]
        attr_accessor :export_format_id
      
        # The Container Registry location for the container image.
        # Corresponds to the JSON property `imageDestination`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ContainerRegistryDestination]
        attr_accessor :image_destination
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @artifact_destination = args[:artifact_destination] if args.key?(:artifact_destination)
          @export_format_id = args[:export_format_id] if args.key?(:export_format_id)
          @image_destination = args[:image_destination] if args.key?(:image_destination)
        end
      end
      
      # Response message of ModelService.ExportModel operation.
      class GoogleCloudAiplatformV1beta1ExportModelResponse
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Request message for TensorboardService.ExportTensorboardTimeSeriesData.
      class GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataRequest
        include Google::Apis::Core::Hashable
      
        # Exports the TensorboardTimeSeries' data that match the filter expression.
        # Corresponds to the JSON property `filter`
        # @return [String]
        attr_accessor :filter
      
        # Field to use to sort the TensorboardTimeSeries' data. By default,
        # TensorboardTimeSeries' data is returned in a pseudo random order.
        # Corresponds to the JSON property `orderBy`
        # @return [String]
        attr_accessor :order_by
      
        # The maximum number of data points to return per page. The default page_size is
        # 1000. Values must be between 1 and 10000. Values above 10000 are coerced to
        # 10000.
        # Corresponds to the JSON property `pageSize`
        # @return [Fixnum]
        attr_accessor :page_size
      
        # A page token, received from a previous ExportTensorboardTimeSeriesData call.
        # Provide this to retrieve the subsequent page. When paginating, all other
        # parameters provided to ExportTensorboardTimeSeriesData must match the call
        # that provided the page token.
        # Corresponds to the JSON property `pageToken`
        # @return [String]
        attr_accessor :page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @filter = args[:filter] if args.key?(:filter)
          @order_by = args[:order_by] if args.key?(:order_by)
          @page_size = args[:page_size] if args.key?(:page_size)
          @page_token = args[:page_token] if args.key?(:page_token)
        end
      end
      
      # Response message for TensorboardService.ExportTensorboardTimeSeriesData.
      class GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataResponse
        include Google::Apis::Core::Hashable
      
        # A token, which can be sent as page_token to retrieve the next page. If this
        # field is omitted, there are no subsequent pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        # The returned time series data points.
        # Corresponds to the JSON property `timeSeriesDataPoints`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TimeSeriesDataPoint>]
        attr_accessor :time_series_data_points
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
          @time_series_data_points = args[:time_series_data_points] if args.key?(:time_series_data_points)
        end
      end
      
      # Feature Metadata information that describes an attribute of an entity type.
      # For example, apple is an entity type, and color is a feature that describes
      # apple.
      class GoogleCloudAiplatformV1beta1Feature
        include Google::Apis::Core::Hashable
      
        # Output only. Timestamp when this EntityType was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Description of the Feature.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor :description
      
        # Optional. If not set, use the monitoring_config defined for the EntityType
        # this Feature belongs to. Only Features with type (Feature.ValueType) BOOL,
        # STRING, DOUBLE or INT64 can enable monitoring. If set to true, all types of
        # data monitoring are disabled despite the config on EntityType.
        # Corresponds to the JSON property `disableMonitoring`
        # @return [Boolean]
        attr_accessor :disable_monitoring
        alias_method :disable_monitoring?, :disable_monitoring
      
        # Used to perform a consistent read-modify-write updates. If not set, a blind "
        # overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # Optional. The labels with user-defined metadata to organize your Features.
        # Label keys and values can be no longer than 64 characters (Unicode codepoints),
        # can only contain lowercase letters, numeric characters, underscores and
        # dashes. International characters are allowed. See https://goo.gl/xmQnxf for
        # more information on and examples of labels. No more than 64 user labels can be
        # associated with one Feature (System labels are excluded)." System reserved
        # label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Configuration of how features in Featurestore are monitored.
        # Corresponds to the JSON property `monitoringConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfig]
        attr_accessor :monitoring_config
      
        # Output only. A list of historical SnapshotAnalysis stats requested by user,
        # sorted by FeatureStatsAnomaly.start_time descending.
        # Corresponds to the JSON property `monitoringStats`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureStatsAnomaly>]
        attr_accessor :monitoring_stats
      
        # Output only. The list of historical stats and anomalies with specified
        # objectives.
        # Corresponds to the JSON property `monitoringStatsAnomalies`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureMonitoringStatsAnomaly>]
        attr_accessor :monitoring_stats_anomalies
      
        # Immutable. Name of the Feature. Format: `projects/`project`/locations/`
        # location`/featurestores/`featurestore`/entityTypes/`entity_type`/features/`
        # feature`` The last part feature is assigned by the client. The feature can be
        # up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-
        # z, underscore(_), and ASCII digits 0-9 starting with a letter. The value will
        # be unique given an entity type.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Output only. Timestamp when this EntityType was most recently updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        # Immutable. Type of Feature value.
        # Corresponds to the JSON property `valueType`
        # @return [String]
        attr_accessor :value_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @description = args[:description] if args.key?(:description)
          @disable_monitoring = args[:disable_monitoring] if args.key?(:disable_monitoring)
          @etag = args[:etag] if args.key?(:etag)
          @labels = args[:labels] if args.key?(:labels)
          @monitoring_config = args[:monitoring_config] if args.key?(:monitoring_config)
          @monitoring_stats = args[:monitoring_stats] if args.key?(:monitoring_stats)
          @monitoring_stats_anomalies = args[:monitoring_stats_anomalies] if args.key?(:monitoring_stats_anomalies)
          @name = args[:name] if args.key?(:name)
          @update_time = args[:update_time] if args.key?(:update_time)
          @value_type = args[:value_type] if args.key?(:value_type)
        end
      end
      
      # Vertex AI Feature Group.
      class GoogleCloudAiplatformV1beta1FeatureGroup
        include Google::Apis::Core::Hashable
      
        # Input source type for BigQuery Tables and Views.
        # Corresponds to the JSON property `bigQuery`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureGroupBigQuery]
        attr_accessor :big_query
      
        # Output only. Timestamp when this FeatureGroup was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Optional. Description of the FeatureGroup.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor :description
      
        # Optional. Used to perform consistent read-modify-write updates. If not set, a
        # blind "overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # Optional. The labels with user-defined metadata to organize your FeatureGroup.
        # Label keys and values can be no longer than 64 characters (Unicode codepoints),
        # can only contain lowercase letters, numeric characters, underscores and
        # dashes. International characters are allowed. See https://goo.gl/xmQnxf for
        # more information on and examples of labels. No more than 64 user labels can be
        # associated with one FeatureGroup(System labels are excluded)." System reserved
        # label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Output only. Name of the FeatureGroup. Format: `projects/`project`/locations/`
        # location`/featureGroups/`featureGroup``
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Output only. Timestamp when this FeatureGroup was last updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @big_query = args[:big_query] if args.key?(:big_query)
          @create_time = args[:create_time] if args.key?(:create_time)
          @description = args[:description] if args.key?(:description)
          @etag = args[:etag] if args.key?(:etag)
          @labels = args[:labels] if args.key?(:labels)
          @name = args[:name] if args.key?(:name)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # Input source type for BigQuery Tables and Views.
      class GoogleCloudAiplatformV1beta1FeatureGroupBigQuery
        include Google::Apis::Core::Hashable
      
        # The BigQuery location for the input content.
        # Corresponds to the JSON property `bigQuerySource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BigQuerySource]
        attr_accessor :big_query_source
      
        # Optional. Columns to construct entity_id / row keys. Currently only supports 1
        # entity_id_column. If not provided defaults to `entity_id`.
        # Corresponds to the JSON property `entityIdColumns`
        # @return [Array<String>]
        attr_accessor :entity_id_columns
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @big_query_source = args[:big_query_source] if args.key?(:big_query_source)
          @entity_id_columns = args[:entity_id_columns] if args.key?(:entity_id_columns)
        end
      end
      
      # A list of historical SnapshotAnalysis or ImportFeaturesAnalysis stats
      # requested by user, sorted by FeatureStatsAnomaly.start_time descending.
      class GoogleCloudAiplatformV1beta1FeatureMonitoringStatsAnomaly
        include Google::Apis::Core::Hashable
      
        # Stats and Anomaly generated at specific timestamp for specific Feature. The
        # start_time and end_time are used to define the time range of the dataset that
        # current stats belongs to, e.g. prediction traffic is bucketed into prediction
        # datasets by time window. If the Dataset is not defined by time window,
        # start_time = end_time. Timestamp of the stats and anomalies always refers to
        # end_time. Raw stats and anomalies are stored in stats_uri or anomaly_uri in
        # the tensorflow defined protos. Field data_stats contains almost identical
        # information with the raw stats in Vertex AI defined proto, for UI to display.
        # Corresponds to the JSON property `featureStatsAnomaly`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureStatsAnomaly]
        attr_accessor :feature_stats_anomaly
      
        # Output only. The objective for each stats.
        # Corresponds to the JSON property `objective`
        # @return [String]
        attr_accessor :objective
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @feature_stats_anomaly = args[:feature_stats_anomaly] if args.key?(:feature_stats_anomaly)
          @objective = args[:objective] if args.key?(:objective)
        end
      end
      
      # Noise sigma by features. Noise sigma represents the standard deviation of the
      # gaussian kernel that will be used to add noise to interpolated inputs prior to
      # computing gradients.
      class GoogleCloudAiplatformV1beta1FeatureNoiseSigma
        include Google::Apis::Core::Hashable
      
        # Noise sigma per feature. No noise is added to features that are not set.
        # Corresponds to the JSON property `noiseSigma`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureNoiseSigmaNoiseSigmaForFeature>]
        attr_accessor :noise_sigma
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @noise_sigma = args[:noise_sigma] if args.key?(:noise_sigma)
        end
      end
      
      # Noise sigma for a single feature.
      class GoogleCloudAiplatformV1beta1FeatureNoiseSigmaNoiseSigmaForFeature
        include Google::Apis::Core::Hashable
      
        # The name of the input feature for which noise sigma is provided. The features
        # are defined in explanation metadata inputs.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # This represents the standard deviation of the Gaussian kernel that will be
        # used to add noise to the feature prior to computing gradients. Similar to
        # noise_sigma but represents the noise added to the current feature. Defaults to
        # 0.1.
        # Corresponds to the JSON property `sigma`
        # @return [Float]
        attr_accessor :sigma
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @name = args[:name] if args.key?(:name)
          @sigma = args[:sigma] if args.key?(:sigma)
        end
      end
      
      # Vertex AI Feature Online Store provides a centralized repository for serving
      # ML features and embedding indexes at low latency. The Feature Online Store is
      # a top-level container.
      class GoogleCloudAiplatformV1beta1FeatureOnlineStore
        include Google::Apis::Core::Hashable
      
        # Contains settings for the Cloud Bigtable instance that will be created to
        # serve featureValues for all FeatureViews under this FeatureOnlineStore.
        # Corresponds to the JSON property `bigtable`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtable]
        attr_accessor :bigtable
      
        # Output only. Timestamp when this FeatureOnlineStore was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # The dedicated serving endpoint for this FeatureOnlineStore.
        # Corresponds to the JSON property `dedicatedServingEndpoint`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureOnlineStoreDedicatedServingEndpoint]
        attr_accessor :dedicated_serving_endpoint
      
        # Contains settings for embedding management.
        # Corresponds to the JSON property `embeddingManagement`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureOnlineStoreEmbeddingManagement]
        attr_accessor :embedding_management
      
        # Optional. Used to perform consistent read-modify-write updates. If not set, a
        # blind "overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # Optional. The labels with user-defined metadata to organize your
        # FeatureOnlineStore. Label keys and values can be no longer than 64 characters (
        # Unicode codepoints), can only contain lowercase letters, numeric characters,
        # underscores and dashes. International characters are allowed. See https://goo.
        # gl/xmQnxf for more information on and examples of labels. No more than 64 user
        # labels can be associated with one FeatureOnlineStore(System labels are
        # excluded)." System reserved label keys are prefixed with "aiplatform.
        # googleapis.com/" and are immutable.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Output only. Name of the FeatureOnlineStore. Format: `projects/`project`/
        # locations/`location`/featureOnlineStores/`featureOnlineStore``
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Output only. State of the featureOnlineStore.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor :state
      
        # Output only. Timestamp when this FeatureOnlineStore was last updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bigtable = args[:bigtable] if args.key?(:bigtable)
          @create_time = args[:create_time] if args.key?(:create_time)
          @dedicated_serving_endpoint = args[:dedicated_serving_endpoint] if args.key?(:dedicated_serving_endpoint)
          @embedding_management = args[:embedding_management] if args.key?(:embedding_management)
          @etag = args[:etag] if args.key?(:etag)
          @labels = args[:labels] if args.key?(:labels)
          @name = args[:name] if args.key?(:name)
          @state = args[:state] if args.key?(:state)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtable
        include Google::Apis::Core::Hashable
      
        # Required. Autoscaling config applied to Bigtable Instance.
        # Corresponds to the JSON property `autoScaling`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtableAutoScaling]
        attr_accessor :auto_scaling
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @auto_scaling = args[:auto_scaling] if args.key?(:auto_scaling)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtableAutoScaling
        include Google::Apis::Core::Hashable
      
        # Optional. A percentage of the cluster's CPU capacity. Can be from 10% to 80%.
        # When a cluster's CPU utilization exceeds the target that you have set,
        # Bigtable immediately adds nodes to the cluster. When CPU utilization is
        # substantially lower than the target, Bigtable removes nodes. If not set will
        # default to 50%.
        # Corresponds to the JSON property `cpuUtilizationTarget`
        # @return [Fixnum]
        attr_accessor :cpu_utilization_target
      
        # Required. The maximum number of nodes to scale up to. Must be greater than or
        # equal to min_node_count, and less than or equal to 10 times of 'min_node_count'
        # .
        # Corresponds to the JSON property `maxNodeCount`
        # @return [Fixnum]
        attr_accessor :max_node_count
      
        # Required. The minimum number of nodes to scale down to. Must be greater than
        # or equal to 1.
        # Corresponds to the JSON property `minNodeCount`
        # @return [Fixnum]
        attr_accessor :min_node_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @cpu_utilization_target = args[:cpu_utilization_target] if args.key?(:cpu_utilization_target)
          @max_node_count = args[:max_node_count] if args.key?(:max_node_count)
          @min_node_count = args[:min_node_count] if args.key?(:min_node_count)
        end
      end
      
      # The dedicated serving endpoint for this FeatureOnlineStore.
      class GoogleCloudAiplatformV1beta1FeatureOnlineStoreDedicatedServingEndpoint
        include Google::Apis::Core::Hashable
      
        # Output only. This field will be populated with the domain name to use for this
        # FeatureOnlineStore
        # Corresponds to the JSON property `publicEndpointDomainName`
        # @return [String]
        attr_accessor :public_endpoint_domain_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @public_endpoint_domain_name = args[:public_endpoint_domain_name] if args.key?(:public_endpoint_domain_name)
        end
      end
      
      # Contains settings for embedding management.
      class GoogleCloudAiplatformV1beta1FeatureOnlineStoreEmbeddingManagement
        include Google::Apis::Core::Hashable
      
        # Optional. Immutable. Whether to enable embedding management in this
        # FeatureOnlineStore. It's immutable after creation to ensure the
        # FeatureOnlineStore availability.
        # Corresponds to the JSON property `enabled`
        # @return [Boolean]
        attr_accessor :enabled
        alias_method :enabled?, :enabled
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @enabled = args[:enabled] if args.key?(:enabled)
        end
      end
      
      # Selector for Features of an EntityType.
      class GoogleCloudAiplatformV1beta1FeatureSelector
        include Google::Apis::Core::Hashable
      
        # Matcher for Features of an EntityType by Feature ID.
        # Corresponds to the JSON property `idMatcher`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1IdMatcher]
        attr_accessor :id_matcher
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @id_matcher = args[:id_matcher] if args.key?(:id_matcher)
        end
      end
      
      # Stats and Anomaly generated at specific timestamp for specific Feature. The
      # start_time and end_time are used to define the time range of the dataset that
      # current stats belongs to, e.g. prediction traffic is bucketed into prediction
      # datasets by time window. If the Dataset is not defined by time window,
      # start_time = end_time. Timestamp of the stats and anomalies always refers to
      # end_time. Raw stats and anomalies are stored in stats_uri or anomaly_uri in
      # the tensorflow defined protos. Field data_stats contains almost identical
      # information with the raw stats in Vertex AI defined proto, for UI to display.
      class GoogleCloudAiplatformV1beta1FeatureStatsAnomaly
        include Google::Apis::Core::Hashable
      
        # This is the threshold used when detecting anomalies. The threshold can be
        # changed by user, so this one might be different from ThresholdConfig.value.
        # Corresponds to the JSON property `anomalyDetectionThreshold`
        # @return [Float]
        attr_accessor :anomaly_detection_threshold
      
        # Path of the anomaly file for current feature values in Cloud Storage bucket.
        # Format: gs:////anomalies. Example: gs://monitoring_bucket/feature_name/
        # anomalies. Stats are stored as binary format with Protobuf message Anoamlies
        # are stored as binary format with Protobuf message [tensorflow.metadata.v0.
        # AnomalyInfo] (https://github.com/tensorflow/metadata/blob/master/
        # tensorflow_metadata/proto/v0/anomalies.proto).
        # Corresponds to the JSON property `anomalyUri`
        # @return [String]
        attr_accessor :anomaly_uri
      
        # Deviation from the current stats to baseline stats. 1. For categorical feature,
        # the distribution distance is calculated by L-inifinity norm. 2. For numerical
        # feature, the distribution distance is calculated by Jensen–Shannon divergence.
        # Corresponds to the JSON property `distributionDeviation`
        # @return [Float]
        attr_accessor :distribution_deviation
      
        # The end timestamp of window where stats were generated. For objectives where
        # time window doesn't make sense (e.g. Featurestore Snapshot Monitoring),
        # end_time indicates the timestamp of the data used to generate stats (e.g.
        # timestamp we take snapshots for feature values).
        # Corresponds to the JSON property `endTime`
        # @return [String]
        attr_accessor :end_time
      
        # Feature importance score, only populated when cross-feature monitoring is
        # enabled. For now only used to represent feature attribution score within range
        # [0, 1] for ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_SKEW and
        # ModelDeploymentMonitoringObjectiveType.FEATURE_ATTRIBUTION_DRIFT.
        # Corresponds to the JSON property `score`
        # @return [Float]
        attr_accessor :score
      
        # The start timestamp of window where stats were generated. For objectives where
        # time window doesn't make sense (e.g. Featurestore Snapshot Monitoring),
        # start_time is only used to indicate the monitoring intervals, so it always
        # equals to (end_time - monitoring_interval).
        # Corresponds to the JSON property `startTime`
        # @return [String]
        attr_accessor :start_time
      
        # Path of the stats file for current feature values in Cloud Storage bucket.
        # Format: gs:////stats. Example: gs://monitoring_bucket/feature_name/stats.
        # Stats are stored as binary format with Protobuf message [tensorflow.metadata.
        # v0.FeatureNameStatistics](https://github.com/tensorflow/metadata/blob/master/
        # tensorflow_metadata/proto/v0/statistics.proto).
        # Corresponds to the JSON property `statsUri`
        # @return [String]
        attr_accessor :stats_uri
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @anomaly_detection_threshold = args[:anomaly_detection_threshold] if args.key?(:anomaly_detection_threshold)
          @anomaly_uri = args[:anomaly_uri] if args.key?(:anomaly_uri)
          @distribution_deviation = args[:distribution_deviation] if args.key?(:distribution_deviation)
          @end_time = args[:end_time] if args.key?(:end_time)
          @score = args[:score] if args.key?(:score)
          @start_time = args[:start_time] if args.key?(:start_time)
          @stats_uri = args[:stats_uri] if args.key?(:stats_uri)
        end
      end
      
      # Value for a feature.
      class GoogleCloudAiplatformV1beta1FeatureValue
        include Google::Apis::Core::Hashable
      
        # A list of boolean values.
        # Corresponds to the JSON property `boolArrayValue`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BoolArray]
        attr_accessor :bool_array_value
      
        # Bool type feature value.
        # Corresponds to the JSON property `boolValue`
        # @return [Boolean]
        attr_accessor :bool_value
        alias_method :bool_value?, :bool_value
      
        # Bytes feature value.
        # Corresponds to the JSON property `bytesValue`
        # NOTE: Values are automatically base64 encoded/decoded in the client library.
        # @return [String]
        attr_accessor :bytes_value
      
        # A list of double values.
        # Corresponds to the JSON property `doubleArrayValue`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DoubleArray]
        attr_accessor :double_array_value
      
        # Double type feature value.
        # Corresponds to the JSON property `doubleValue`
        # @return [Float]
        attr_accessor :double_value
      
        # A list of int64 values.
        # Corresponds to the JSON property `int64ArrayValue`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Int64Array]
        attr_accessor :int64_array_value
      
        # Int64 feature value.
        # Corresponds to the JSON property `int64Value`
        # @return [Fixnum]
        attr_accessor :int64_value
      
        # Metadata of feature value.
        # Corresponds to the JSON property `metadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureValueMetadata]
        attr_accessor :metadata
      
        # A list of string values.
        # Corresponds to the JSON property `stringArrayValue`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StringArray]
        attr_accessor :string_array_value
      
        # String feature value.
        # Corresponds to the JSON property `stringValue`
        # @return [String]
        attr_accessor :string_value
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bool_array_value = args[:bool_array_value] if args.key?(:bool_array_value)
          @bool_value = args[:bool_value] if args.key?(:bool_value)
          @bytes_value = args[:bytes_value] if args.key?(:bytes_value)
          @double_array_value = args[:double_array_value] if args.key?(:double_array_value)
          @double_value = args[:double_value] if args.key?(:double_value)
          @int64_array_value = args[:int64_array_value] if args.key?(:int64_array_value)
          @int64_value = args[:int64_value] if args.key?(:int64_value)
          @metadata = args[:metadata] if args.key?(:metadata)
          @string_array_value = args[:string_array_value] if args.key?(:string_array_value)
          @string_value = args[:string_value] if args.key?(:string_value)
        end
      end
      
      # A destination location for Feature values and format.
      class GoogleCloudAiplatformV1beta1FeatureValueDestination
        include Google::Apis::Core::Hashable
      
        # The BigQuery location for the output content.
        # Corresponds to the JSON property `bigqueryDestination`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BigQueryDestination]
        attr_accessor :bigquery_destination
      
        # The storage details for CSV output content.
        # Corresponds to the JSON property `csvDestination`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1CsvDestination]
        attr_accessor :csv_destination
      
        # The storage details for TFRecord output content.
        # Corresponds to the JSON property `tfrecordDestination`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TfRecordDestination]
        attr_accessor :tfrecord_destination
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bigquery_destination = args[:bigquery_destination] if args.key?(:bigquery_destination)
          @csv_destination = args[:csv_destination] if args.key?(:csv_destination)
          @tfrecord_destination = args[:tfrecord_destination] if args.key?(:tfrecord_destination)
        end
      end
      
      # Container for list of values.
      class GoogleCloudAiplatformV1beta1FeatureValueList
        include Google::Apis::Core::Hashable
      
        # A list of feature values. All of them should be the same data type.
        # Corresponds to the JSON property `values`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureValue>]
        attr_accessor :values
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @values = args[:values] if args.key?(:values)
        end
      end
      
      # Metadata of feature value.
      class GoogleCloudAiplatformV1beta1FeatureValueMetadata
        include Google::Apis::Core::Hashable
      
        # Feature generation timestamp. Typically, it is provided by user at feature
        # ingestion time. If not, feature store will use the system timestamp when the
        # data is ingested into feature store. For streaming ingestion, the time,
        # aligned by days, must be no older than five years (1825 days) and no later
        # than one year (366 days) in the future.
        # Corresponds to the JSON property `generateTime`
        # @return [String]
        attr_accessor :generate_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generate_time = args[:generate_time] if args.key?(:generate_time)
        end
      end
      
      # FeatureView is representation of values that the FeatureOnlineStore will serve
      # based on its syncConfig.
      class GoogleCloudAiplatformV1beta1FeatureView
        include Google::Apis::Core::Hashable
      
        # Optional. Configures how data is supposed to be extracted from a BigQuery
        # source to be loaded onto the FeatureOnlineStore.
        # Corresponds to the JSON property `bigQuerySource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureViewBigQuerySource]
        attr_accessor :big_query_source
      
        # Output only. Timestamp when this FeatureView was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Optional. Used to perform consistent read-modify-write updates. If not set, a
        # blind "overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # A Feature Registry source for features that need to be synced to Online Store.
        # Corresponds to the JSON property `featureRegistrySource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySource]
        attr_accessor :feature_registry_source
      
        # Optional. The labels with user-defined metadata to organize your FeatureViews.
        # Label keys and values can be no longer than 64 characters (Unicode codepoints),
        # can only contain lowercase letters, numeric characters, underscores and
        # dashes. International characters are allowed. See https://goo.gl/xmQnxf for
        # more information on and examples of labels. No more than 64 user labels can be
        # associated with one FeatureOnlineStore(System labels are excluded)." System
        # reserved label keys are prefixed with "aiplatform.googleapis.com/" and are
        # immutable.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Output only. Name of the FeatureView. Format: `projects/`project`/locations/`
        # location`/featureOnlineStores/`feature_online_store`/featureViews/`
        # feature_view``
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Configures when data is to be synced/updated for this FeatureView. At the end
        # of the sync the latest featureValues for each entityId of this FeatureView are
        # made ready for online serving.
        # Corresponds to the JSON property `syncConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureViewSyncConfig]
        attr_accessor :sync_config
      
        # Output only. Timestamp when this FeatureView was last updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        # Configuration for vector search.
        # Corresponds to the JSON property `vectorSearchConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig]
        attr_accessor :vector_search_config
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @big_query_source = args[:big_query_source] if args.key?(:big_query_source)
          @create_time = args[:create_time] if args.key?(:create_time)
          @etag = args[:etag] if args.key?(:etag)
          @feature_registry_source = args[:feature_registry_source] if args.key?(:feature_registry_source)
          @labels = args[:labels] if args.key?(:labels)
          @name = args[:name] if args.key?(:name)
          @sync_config = args[:sync_config] if args.key?(:sync_config)
          @update_time = args[:update_time] if args.key?(:update_time)
          @vector_search_config = args[:vector_search_config] if args.key?(:vector_search_config)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1FeatureViewBigQuerySource
        include Google::Apis::Core::Hashable
      
        # Required. Columns to construct entity_id / row keys. Start by supporting 1
        # only.
        # Corresponds to the JSON property `entityIdColumns`
        # @return [Array<String>]
        attr_accessor :entity_id_columns
      
        # Required. The Bigquery View URI that will be materialized on each sync trigger
        # based on FeatureView.SyncConfig.
        # Corresponds to the JSON property `uri`
        # @return [String]
        attr_accessor :uri
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @entity_id_columns = args[:entity_id_columns] if args.key?(:entity_id_columns)
          @uri = args[:uri] if args.key?(:uri)
        end
      end
      
      # A Feature Registry source for features that need to be synced to Online Store.
      class GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySource
        include Google::Apis::Core::Hashable
      
        # Required. List of features that need to be synced to Online Store.
        # Corresponds to the JSON property `featureGroups`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySourceFeatureGroup>]
        attr_accessor :feature_groups
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @feature_groups = args[:feature_groups] if args.key?(:feature_groups)
        end
      end
      
      # Features belonging to a single feature group that will be synced to Online
      # Store.
      class GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySourceFeatureGroup
        include Google::Apis::Core::Hashable
      
        # Required. Identifier of the feature group.
        # Corresponds to the JSON property `featureGroupId`
        # @return [String]
        attr_accessor :feature_group_id
      
        # Required. Identifiers of features under the feature group.
        # Corresponds to the JSON property `featureIds`
        # @return [Array<String>]
        attr_accessor :feature_ids
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @feature_group_id = args[:feature_group_id] if args.key?(:feature_group_id)
          @feature_ids = args[:feature_ids] if args.key?(:feature_ids)
        end
      end
      
      # FeatureViewSync is a representation of sync operation which copies data from
      # data source to Feature View in Online Store.
      class GoogleCloudAiplatformV1beta1FeatureViewSync
        include Google::Apis::Core::Hashable
      
        # Output only. Time when this FeatureViewSync is created. Creation of a
        # FeatureViewSync means that the job is pending / waiting for sufficient
        # resources but may not have started the actual data transfer yet.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # The `Status` type defines a logical error model that is suitable for different
        # programming environments, including REST APIs and RPC APIs. It is used by [
        # gRPC](https://github.com/grpc). Each `Status` message contains three pieces of
        # data: error code, error message, and error details. You can find out more
        # about this error model and how to work with it in the [API Design Guide](https:
        # //cloud.google.com/apis/design/errors).
        # Corresponds to the JSON property `finalStatus`
        # @return [Google::Apis::AiplatformV1beta1::GoogleRpcStatus]
        attr_accessor :final_status
      
        # Output only. Name of the FeatureViewSync. Format: `projects/`project`/
        # locations/`location`/featureOnlineStores/`feature_online_store`/featureViews/`
        # feature_view`/featureViewSyncs/`feature_view_sync``
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Represents a time interval, encoded as a Timestamp start (inclusive) and a
        # Timestamp end (exclusive). The start must be less than or equal to the end.
        # When the start equals the end, the interval is empty (matches no time). When
        # both start and end are unspecified, the interval matches any time.
        # Corresponds to the JSON property `runTime`
        # @return [Google::Apis::AiplatformV1beta1::GoogleTypeInterval]
        attr_accessor :run_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @final_status = args[:final_status] if args.key?(:final_status)
          @name = args[:name] if args.key?(:name)
          @run_time = args[:run_time] if args.key?(:run_time)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1FeatureViewSyncConfig
        include Google::Apis::Core::Hashable
      
        # Cron schedule (https://en.wikipedia.org/wiki/Cron) to launch scheduled runs.
        # To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "
        # CRON_TZ=$`IANA_TIME_ZONE`" or "TZ=$`IANA_TIME_ZONE`". The $`IANA_TIME_ZONE`
        # may only be a valid string from IANA time zone database. For example, "CRON_TZ=
        # America/New_York 1 * * * *", or "TZ=America/New_York 1 * * * *".
        # Corresponds to the JSON property `cron`
        # @return [String]
        attr_accessor :cron
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @cron = args[:cron] if args.key?(:cron)
        end
      end
      
      # Configuration for vector search.
      class GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig
        include Google::Apis::Core::Hashable
      
        # Optional. Configuration options for using brute force search, which simply
        # implements the standard linear search in the database for each query. It is
        # primarily meant for benchmarking and to generate the ground truth for
        # approximate search.
        # Corresponds to the JSON property `bruteForceConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigBruteForceConfig]
        attr_accessor :brute_force_config
      
        # Optional. Column of crowding. This column contains crowding attribute which is
        # a constraint on a neighbor list produced by nearest neighbor search requiring
        # that no more than some value k' of the k neighbors returned have the same
        # value of crowding_attribute.
        # Corresponds to the JSON property `crowdingColumn`
        # @return [String]
        attr_accessor :crowding_column
      
        # Optional. The distance measure used in nearest neighbor search.
        # Corresponds to the JSON property `distanceMeasureType`
        # @return [String]
        attr_accessor :distance_measure_type
      
        # Optional. Column of embedding. This column contains the source data to create
        # index for vector search. embedding_column must be set when using vector search.
        # Corresponds to the JSON property `embeddingColumn`
        # @return [String]
        attr_accessor :embedding_column
      
        # Optional. The number of dimensions of the input embedding.
        # Corresponds to the JSON property `embeddingDimension`
        # @return [Fixnum]
        attr_accessor :embedding_dimension
      
        # Optional. Columns of features that're used to filter vector search results.
        # Corresponds to the JSON property `filterColumns`
        # @return [Array<String>]
        attr_accessor :filter_columns
      
        # Optional. Configuration options for the tree-AH algorithm (Shallow tree +
        # Asymmetric Hashing). Please refer to this paper for more details: https://
        # arxiv.org/abs/1908.10396
        # Corresponds to the JSON property `treeAhConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAhConfig]
        attr_accessor :tree_ah_config
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @brute_force_config = args[:brute_force_config] if args.key?(:brute_force_config)
          @crowding_column = args[:crowding_column] if args.key?(:crowding_column)
          @distance_measure_type = args[:distance_measure_type] if args.key?(:distance_measure_type)
          @embedding_column = args[:embedding_column] if args.key?(:embedding_column)
          @embedding_dimension = args[:embedding_dimension] if args.key?(:embedding_dimension)
          @filter_columns = args[:filter_columns] if args.key?(:filter_columns)
          @tree_ah_config = args[:tree_ah_config] if args.key?(:tree_ah_config)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigBruteForceConfig
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAhConfig
        include Google::Apis::Core::Hashable
      
        # Optional. Number of embeddings on each leaf node. The default value is 1000 if
        # not set.
        # Corresponds to the JSON property `leafNodeEmbeddingCount`
        # @return [Fixnum]
        attr_accessor :leaf_node_embedding_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @leaf_node_embedding_count = args[:leaf_node_embedding_count] if args.key?(:leaf_node_embedding_count)
        end
      end
      
      # Vertex AI Feature Store provides a centralized repository for organizing,
      # storing, and serving ML features. The Featurestore is a top-level container
      # for your features and their values.
      class GoogleCloudAiplatformV1beta1Featurestore
        include Google::Apis::Core::Hashable
      
        # Output only. Timestamp when this Featurestore was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Represents a customer-managed encryption key spec that can be applied to a top-
        # level resource.
        # Corresponds to the JSON property `encryptionSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EncryptionSpec]
        attr_accessor :encryption_spec
      
        # Optional. Used to perform consistent read-modify-write updates. If not set, a
        # blind "overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # Optional. The labels with user-defined metadata to organize your Featurestore.
        # Label keys and values can be no longer than 64 characters (Unicode codepoints),
        # can only contain lowercase letters, numeric characters, underscores and
        # dashes. International characters are allowed. See https://goo.gl/xmQnxf for
        # more information on and examples of labels. No more than 64 user labels can be
        # associated with one Featurestore(System labels are excluded)." System reserved
        # label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Output only. Name of the Featurestore. Format: `projects/`project`/locations/`
        # location`/featurestores/`featurestore``
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # OnlineServingConfig specifies the details for provisioning online serving
        # resources.
        # Corresponds to the JSON property `onlineServingConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfig]
        attr_accessor :online_serving_config
      
        # Optional. TTL in days for feature values that will be stored in online serving
        # storage. The Feature Store online storage periodically removes obsolete
        # feature values older than `online_storage_ttl_days` since the feature
        # generation time. Note that `online_storage_ttl_days` should be less than or
        # equal to `offline_storage_ttl_days` for each EntityType under a featurestore.
        # If not set, default to 4000 days
        # Corresponds to the JSON property `onlineStorageTtlDays`
        # @return [Fixnum]
        attr_accessor :online_storage_ttl_days
      
        # Output only. State of the featurestore.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor :state
      
        # Output only. Timestamp when this Featurestore was last updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @encryption_spec = args[:encryption_spec] if args.key?(:encryption_spec)
          @etag = args[:etag] if args.key?(:etag)
          @labels = args[:labels] if args.key?(:labels)
          @name = args[:name] if args.key?(:name)
          @online_serving_config = args[:online_serving_config] if args.key?(:online_serving_config)
          @online_storage_ttl_days = args[:online_storage_ttl_days] if args.key?(:online_storage_ttl_days)
          @state = args[:state] if args.key?(:state)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # Configuration of how features in Featurestore are monitored.
      class GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfig
        include Google::Apis::Core::Hashable
      
        # The config for Featurestore Monitoring threshold.
        # Corresponds to the JSON property `categoricalThresholdConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigThresholdConfig]
        attr_accessor :categorical_threshold_config
      
        # Configuration of the Featurestore's ImportFeature Analysis Based Monitoring.
        # This type of analysis generates statistics for values of each Feature imported
        # by every ImportFeatureValues operation.
        # Corresponds to the JSON property `importFeaturesAnalysis`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigImportFeaturesAnalysis]
        attr_accessor :import_features_analysis
      
        # The config for Featurestore Monitoring threshold.
        # Corresponds to the JSON property `numericalThresholdConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigThresholdConfig]
        attr_accessor :numerical_threshold_config
      
        # Configuration of the Featurestore's Snapshot Analysis Based Monitoring. This
        # type of analysis generates statistics for each Feature based on a snapshot of
        # the latest feature value of each entities every monitoring_interval.
        # Corresponds to the JSON property `snapshotAnalysis`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigSnapshotAnalysis]
        attr_accessor :snapshot_analysis
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @categorical_threshold_config = args[:categorical_threshold_config] if args.key?(:categorical_threshold_config)
          @import_features_analysis = args[:import_features_analysis] if args.key?(:import_features_analysis)
          @numerical_threshold_config = args[:numerical_threshold_config] if args.key?(:numerical_threshold_config)
          @snapshot_analysis = args[:snapshot_analysis] if args.key?(:snapshot_analysis)
        end
      end
      
      # Configuration of the Featurestore's ImportFeature Analysis Based Monitoring.
      # This type of analysis generates statistics for values of each Feature imported
      # by every ImportFeatureValues operation.
      class GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigImportFeaturesAnalysis
        include Google::Apis::Core::Hashable
      
        # The baseline used to do anomaly detection for the statistics generated by
        # import features analysis.
        # Corresponds to the JSON property `anomalyDetectionBaseline`
        # @return [String]
        attr_accessor :anomaly_detection_baseline
      
        # Whether to enable / disable / inherite default hebavior for import features
        # analysis.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor :state
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @anomaly_detection_baseline = args[:anomaly_detection_baseline] if args.key?(:anomaly_detection_baseline)
          @state = args[:state] if args.key?(:state)
        end
      end
      
      # Configuration of the Featurestore's Snapshot Analysis Based Monitoring. This
      # type of analysis generates statistics for each Feature based on a snapshot of
      # the latest feature value of each entities every monitoring_interval.
      class GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigSnapshotAnalysis
        include Google::Apis::Core::Hashable
      
        # The monitoring schedule for snapshot analysis. For EntityType-level config:
        # unset / disabled = true indicates disabled by default for Features under it;
        # otherwise by default enable snapshot analysis monitoring with
        # monitoring_interval for Features under it. Feature-level config: disabled =
        # true indicates disabled regardless of the EntityType-level config; unset
        # monitoring_interval indicates going with EntityType-level config; otherwise
        # run snapshot analysis monitoring with monitoring_interval regardless of the
        # EntityType-level config. Explicitly Disable the snapshot analysis based
        # monitoring.
        # Corresponds to the JSON property `disabled`
        # @return [Boolean]
        attr_accessor :disabled
        alias_method :disabled?, :disabled
      
        # Configuration of the snapshot analysis based monitoring pipeline running
        # interval. The value is rolled up to full day. If both monitoring_interval_days
        # and the deprecated `monitoring_interval` field are set when creating/updating
        # EntityTypes/Features, monitoring_interval_days will be used.
        # Corresponds to the JSON property `monitoringInterval`
        # @return [String]
        attr_accessor :monitoring_interval
      
        # Configuration of the snapshot analysis based monitoring pipeline running
        # interval. The value indicates number of days.
        # Corresponds to the JSON property `monitoringIntervalDays`
        # @return [Fixnum]
        attr_accessor :monitoring_interval_days
      
        # Customized export features time window for snapshot analysis. Unit is one day.
        # Default value is 3 weeks. Minimum value is 1 day. Maximum value is 4000 days.
        # Corresponds to the JSON property `stalenessDays`
        # @return [Fixnum]
        attr_accessor :staleness_days
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @disabled = args[:disabled] if args.key?(:disabled)
          @monitoring_interval = args[:monitoring_interval] if args.key?(:monitoring_interval)
          @monitoring_interval_days = args[:monitoring_interval_days] if args.key?(:monitoring_interval_days)
          @staleness_days = args[:staleness_days] if args.key?(:staleness_days)
        end
      end
      
      # The config for Featurestore Monitoring threshold.
      class GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigThresholdConfig
        include Google::Apis::Core::Hashable
      
        # Specify a threshold value that can trigger the alert. 1. For categorical
        # feature, the distribution distance is calculated by L-inifinity norm. 2. For
        # numerical feature, the distribution distance is calculated by Jensen–Shannon
        # divergence. Each feature must have a non-zero threshold if they need to be
        # monitored. Otherwise no alert will be triggered for that feature.
        # Corresponds to the JSON property `value`
        # @return [Float]
        attr_accessor :value
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @value = args[:value] if args.key?(:value)
        end
      end
      
      # OnlineServingConfig specifies the details for provisioning online serving
      # resources.
      class GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfig
        include Google::Apis::Core::Hashable
      
        # The number of nodes for the online store. The number of nodes doesn't scale
        # automatically, but you can manually update the number of nodes. If set to 0,
        # the featurestore will not have an online store and cannot be used for online
        # serving.
        # Corresponds to the JSON property `fixedNodeCount`
        # @return [Fixnum]
        attr_accessor :fixed_node_count
      
        # Online serving scaling configuration. If min_node_count and max_node_count are
        # set to the same value, the cluster will be configured with the fixed number of
        # node (no auto-scaling).
        # Corresponds to the JSON property `scaling`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfigScaling]
        attr_accessor :scaling
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @fixed_node_count = args[:fixed_node_count] if args.key?(:fixed_node_count)
          @scaling = args[:scaling] if args.key?(:scaling)
        end
      end
      
      # Online serving scaling configuration. If min_node_count and max_node_count are
      # set to the same value, the cluster will be configured with the fixed number of
      # node (no auto-scaling).
      class GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfigScaling
        include Google::Apis::Core::Hashable
      
        # Optional. The cpu utilization that the Autoscaler should be trying to achieve.
        # This number is on a scale from 0 (no utilization) to 100 (total utilization),
        # and is limited between 10 and 80. When a cluster's CPU utilization exceeds the
        # target that you have set, Bigtable immediately adds nodes to the cluster. When
        # CPU utilization is substantially lower than the target, Bigtable removes nodes.
        # If not set or set to 0, default to 50.
        # Corresponds to the JSON property `cpuUtilizationTarget`
        # @return [Fixnum]
        attr_accessor :cpu_utilization_target
      
        # The maximum number of nodes to scale up to. Must be greater than
        # min_node_count, and less than or equal to 10 times of 'min_node_count'.
        # Corresponds to the JSON property `maxNodeCount`
        # @return [Fixnum]
        attr_accessor :max_node_count
      
        # Required. The minimum number of nodes to scale down to. Must be greater than
        # or equal to 1.
        # Corresponds to the JSON property `minNodeCount`
        # @return [Fixnum]
        attr_accessor :min_node_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @cpu_utilization_target = args[:cpu_utilization_target] if args.key?(:cpu_utilization_target)
          @max_node_count = args[:max_node_count] if args.key?(:max_node_count)
          @min_node_count = args[:min_node_count] if args.key?(:min_node_count)
        end
      end
      
      # Request message for FeatureOnlineStoreService.FetchFeatureValues. All the
      # features under the requested feature view will be returned.
      class GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest
        include Google::Apis::Core::Hashable
      
        # Specify response data format. If not set, KeyValue format will be used.
        # Corresponds to the JSON property `format`
        # @return [String]
        attr_accessor :format
      
        # Simple ID. The whole string will be used as is to identify Entity to fetch
        # feature values for.
        # Corresponds to the JSON property `id`
        # @return [String]
        attr_accessor :id
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @format = args[:format] if args.key?(:format)
          @id = args[:id] if args.key?(:id)
        end
      end
      
      # Response message for FeatureOnlineStoreService.FetchFeatureValues
      class GoogleCloudAiplatformV1beta1FetchFeatureValuesResponse
        include Google::Apis::Core::Hashable
      
        # Response structure in the format of key (feature name) and (feature) value
        # pair.
        # Corresponds to the JSON property `keyValues`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FetchFeatureValuesResponseFeatureNameValuePairList]
        attr_accessor :key_values
      
        # Feature values in proto Struct format.
        # Corresponds to the JSON property `protoStruct`
        # @return [Hash<String,Object>]
        attr_accessor :proto_struct
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @key_values = args[:key_values] if args.key?(:key_values)
          @proto_struct = args[:proto_struct] if args.key?(:proto_struct)
        end
      end
      
      # Response structure in the format of key (feature name) and (feature) value
      # pair.
      class GoogleCloudAiplatformV1beta1FetchFeatureValuesResponseFeatureNameValuePairList
        include Google::Apis::Core::Hashable
      
        # List of feature names and values.
        # Corresponds to the JSON property `features`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FetchFeatureValuesResponseFeatureNameValuePairListFeatureNameValuePair>]
        attr_accessor :features
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @features = args[:features] if args.key?(:features)
        end
      end
      
      # Feature name & value pair.
      class GoogleCloudAiplatformV1beta1FetchFeatureValuesResponseFeatureNameValuePairListFeatureNameValuePair
        include Google::Apis::Core::Hashable
      
        # Feature short name.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Value for a feature.
        # Corresponds to the JSON property `value`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureValue]
        attr_accessor :value
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @name = args[:name] if args.key?(:name)
          @value = args[:value] if args.key?(:value)
        end
      end
      
      # Assigns input data to training, validation, and test sets based on the given
      # filters, data pieces not matched by any filter are ignored. Currently only
      # supported for Datasets containing DataItems. If any of the filters in this
      # message are to match nothing, then they can be set as '-' (the minus sign).
      # Supported only for unstructured Datasets.
      class GoogleCloudAiplatformV1beta1FilterSplit
        include Google::Apis::Core::Hashable
      
        # Required. A filter on DataItems of the Dataset. DataItems that match this
        # filter are used to test the Model. A filter with same syntax as the one used
        # in DatasetService.ListDataItems may be used. If a single DataItem is matched
        # by more than one of the FilterSplit filters, then it is assigned to the first
        # set that applies to it in the training, validation, test order.
        # Corresponds to the JSON property `testFilter`
        # @return [String]
        attr_accessor :test_filter
      
        # Required. A filter on DataItems of the Dataset. DataItems that match this
        # filter are used to train the Model. A filter with same syntax as the one used
        # in DatasetService.ListDataItems may be used. If a single DataItem is matched
        # by more than one of the FilterSplit filters, then it is assigned to the first
        # set that applies to it in the training, validation, test order.
        # Corresponds to the JSON property `trainingFilter`
        # @return [String]
        attr_accessor :training_filter
      
        # Required. A filter on DataItems of the Dataset. DataItems that match this
        # filter are used to validate the Model. A filter with same syntax as the one
        # used in DatasetService.ListDataItems may be used. If a single DataItem is
        # matched by more than one of the FilterSplit filters, then it is assigned to
        # the first set that applies to it in the training, validation, test order.
        # Corresponds to the JSON property `validationFilter`
        # @return [String]
        attr_accessor :validation_filter
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @test_filter = args[:test_filter] if args.key?(:test_filter)
          @training_filter = args[:training_filter] if args.key?(:training_filter)
          @validation_filter = args[:validation_filter] if args.key?(:validation_filter)
        end
      end
      
      # The request message for MatchService.FindNeighbors.
      class GoogleCloudAiplatformV1beta1FindNeighborsRequest
        include Google::Apis::Core::Hashable
      
        # The ID of the DeployedIndex that will serve the request. This request is sent
        # to a specific IndexEndpoint, as per the IndexEndpoint.network. That
        # IndexEndpoint also has IndexEndpoint.deployed_indexes, and each such index has
        # a DeployedIndex.id field. The value of the field below must equal one of the
        # DeployedIndex.id fields of the IndexEndpoint that is being called for this
        # request.
        # Corresponds to the JSON property `deployedIndexId`
        # @return [String]
        attr_accessor :deployed_index_id
      
        # The list of queries.
        # Corresponds to the JSON property `queries`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FindNeighborsRequestQuery>]
        attr_accessor :queries
      
        # If set to true, the full datapoints (including all vector values and restricts)
        # of the nearest neighbors are returned. Note that returning full datapoint
        # will significantly increase the latency and cost of the query.
        # Corresponds to the JSON property `returnFullDatapoint`
        # @return [Boolean]
        attr_accessor :return_full_datapoint
        alias_method :return_full_datapoint?, :return_full_datapoint
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployed_index_id = args[:deployed_index_id] if args.key?(:deployed_index_id)
          @queries = args[:queries] if args.key?(:queries)
          @return_full_datapoint = args[:return_full_datapoint] if args.key?(:return_full_datapoint)
        end
      end
      
      # A query to find a number of the nearest neighbors (most similar vectors) of a
      # vector.
      class GoogleCloudAiplatformV1beta1FindNeighborsRequestQuery
        include Google::Apis::Core::Hashable
      
        # The number of neighbors to find via approximate search before exact reordering
        # is performed. If not set, the default value from scam config is used; if set,
        # this value must be > 0.
        # Corresponds to the JSON property `approximateNeighborCount`
        # @return [Fixnum]
        attr_accessor :approximate_neighbor_count
      
        # A datapoint of Index.
        # Corresponds to the JSON property `datapoint`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1IndexDatapoint]
        attr_accessor :datapoint
      
        # The fraction of the number of leaves to search, set at query time allows user
        # to tune search performance. This value increase result in both search accuracy
        # and latency increase. The value should be between 0.0 and 1.0. If not set or
        # set to 0.0, query uses the default value specified in
        # NearestNeighborSearchConfig.TreeAHConfig.fraction_leaf_nodes_to_search.
        # Corresponds to the JSON property `fractionLeafNodesToSearchOverride`
        # @return [Float]
        attr_accessor :fraction_leaf_nodes_to_search_override
      
        # The number of nearest neighbors to be retrieved from database for each query.
        # If not set, will use the default from the service configuration (https://cloud.
        # google.com/vertex-ai/docs/matching-engine/configuring-indexes#nearest-neighbor-
        # search-config).
        # Corresponds to the JSON property `neighborCount`
        # @return [Fixnum]
        attr_accessor :neighbor_count
      
        # Crowding is a constraint on a neighbor list produced by nearest neighbor
        # search requiring that no more than some value k' of the k neighbors returned
        # have the same value of crowding_attribute. It's used for improving result
        # diversity. This field is the maximum number of matches with the same crowding
        # tag.
        # Corresponds to the JSON property `perCrowdingAttributeNeighborCount`
        # @return [Fixnum]
        attr_accessor :per_crowding_attribute_neighbor_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @approximate_neighbor_count = args[:approximate_neighbor_count] if args.key?(:approximate_neighbor_count)
          @datapoint = args[:datapoint] if args.key?(:datapoint)
          @fraction_leaf_nodes_to_search_override = args[:fraction_leaf_nodes_to_search_override] if args.key?(:fraction_leaf_nodes_to_search_override)
          @neighbor_count = args[:neighbor_count] if args.key?(:neighbor_count)
          @per_crowding_attribute_neighbor_count = args[:per_crowding_attribute_neighbor_count] if args.key?(:per_crowding_attribute_neighbor_count)
        end
      end
      
      # The response message for MatchService.FindNeighbors.
      class GoogleCloudAiplatformV1beta1FindNeighborsResponse
        include Google::Apis::Core::Hashable
      
        # The nearest neighbors of the query datapoints.
        # Corresponds to the JSON property `nearestNeighbors`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FindNeighborsResponseNearestNeighbors>]
        attr_accessor :nearest_neighbors
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @nearest_neighbors = args[:nearest_neighbors] if args.key?(:nearest_neighbors)
        end
      end
      
      # Nearest neighbors for one query.
      class GoogleCloudAiplatformV1beta1FindNeighborsResponseNearestNeighbors
        include Google::Apis::Core::Hashable
      
        # The ID of the query datapoint.
        # Corresponds to the JSON property `id`
        # @return [String]
        attr_accessor :id
      
        # All its neighbors.
        # Corresponds to the JSON property `neighbors`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FindNeighborsResponseNeighbor>]
        attr_accessor :neighbors
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @id = args[:id] if args.key?(:id)
          @neighbors = args[:neighbors] if args.key?(:neighbors)
        end
      end
      
      # A neighbor of the query vector.
      class GoogleCloudAiplatformV1beta1FindNeighborsResponseNeighbor
        include Google::Apis::Core::Hashable
      
        # A datapoint of Index.
        # Corresponds to the JSON property `datapoint`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1IndexDatapoint]
        attr_accessor :datapoint
      
        # The distance between the neighbor and the query vector.
        # Corresponds to the JSON property `distance`
        # @return [Float]
        attr_accessor :distance
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @datapoint = args[:datapoint] if args.key?(:datapoint)
          @distance = args[:distance] if args.key?(:distance)
        end
      end
      
      # Assigns the input data to training, validation, and test sets as per the given
      # fractions. Any of `training_fraction`, `validation_fraction` and `
      # test_fraction` may optionally be provided, they must sum to up to 1. If the
      # provided ones sum to less than 1, the remainder is assigned to sets as decided
      # by Vertex AI. If none of the fractions are set, by default roughly 80% of data
      # is used for training, 10% for validation, and 10% for test.
      class GoogleCloudAiplatformV1beta1FractionSplit
        include Google::Apis::Core::Hashable
      
        # The fraction of the input data that is to be used to evaluate the Model.
        # Corresponds to the JSON property `testFraction`
        # @return [Float]
        attr_accessor :test_fraction
      
        # The fraction of the input data that is to be used to train the Model.
        # Corresponds to the JSON property `trainingFraction`
        # @return [Float]
        attr_accessor :training_fraction
      
        # The fraction of the input data that is to be used to validate the Model.
        # Corresponds to the JSON property `validationFraction`
        # @return [Float]
        attr_accessor :validation_fraction
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @test_fraction = args[:test_fraction] if args.key?(:test_fraction)
          @training_fraction = args[:training_fraction] if args.key?(:training_fraction)
          @validation_fraction = args[:validation_fraction] if args.key?(:validation_fraction)
        end
      end
      
      # The Google Cloud Storage location where the output is to be written to.
      class GoogleCloudAiplatformV1beta1GcsDestination
        include Google::Apis::Core::Hashable
      
        # Required. Google Cloud Storage URI to output directory. If the uri doesn't end
        # with '/', a '/' will be automatically appended. The directory is created if it
        # doesn't exist.
        # Corresponds to the JSON property `outputUriPrefix`
        # @return [String]
        attr_accessor :output_uri_prefix
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @output_uri_prefix = args[:output_uri_prefix] if args.key?(:output_uri_prefix)
        end
      end
      
      # The Google Cloud Storage location for the input content.
      class GoogleCloudAiplatformV1beta1GcsSource
        include Google::Apis::Core::Hashable
      
        # Required. Google Cloud Storage URI(-s) to the input file(s). May contain
        # wildcards. For more information on wildcards, see https://cloud.google.com/
        # storage/docs/gsutil/addlhelp/WildcardNames.
        # Corresponds to the JSON property `uris`
        # @return [Array<String>]
        attr_accessor :uris
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @uris = args[:uris] if args.key?(:uris)
        end
      end
      
      # Request message for NotebookInternalService.GenerateAccessToken.
      class GoogleCloudAiplatformV1beta1GenerateAccessTokenRequest
        include Google::Apis::Core::Hashable
      
        # Required. The VM identity token (a JWT) for authenticating the VM. https://
        # cloud.google.com/compute/docs/instances/verifying-instance-identity
        # Corresponds to the JSON property `vmToken`
        # @return [String]
        attr_accessor :vm_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @vm_token = args[:vm_token] if args.key?(:vm_token)
        end
      end
      
      # Response message for NotebookInternalService.GenerateToken.
      class GoogleCloudAiplatformV1beta1GenerateAccessTokenResponse
        include Google::Apis::Core::Hashable
      
        # Short-lived access token string which may be used to access Google APIs.
        # Corresponds to the JSON property `accessToken`
        # @return [String]
        attr_accessor :access_token
      
        # The time in seconds when the access token expires. Typically that's 3600.
        # Corresponds to the JSON property `expiresIn`
        # @return [Fixnum]
        attr_accessor :expires_in
      
        # Space-separated list of scopes contained in the returned token. https://cloud.
        # google.com/docs/authentication/token-types#access-contents
        # Corresponds to the JSON property `scope`
        # @return [String]
        attr_accessor :scope
      
        # Type of the returned access token (e.g. "Bearer"). It specifies how the token
        # must be used. Bearer tokens may be used by any entity without proof of
        # identity.
        # Corresponds to the JSON property `tokenType`
        # @return [String]
        attr_accessor :token_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @access_token = args[:access_token] if args.key?(:access_token)
          @expires_in = args[:expires_in] if args.key?(:expires_in)
          @scope = args[:scope] if args.key?(:scope)
          @token_type = args[:token_type] if args.key?(:token_type)
        end
      end
      
      # Generic Metadata shared by all operations.
      class GoogleCloudAiplatformV1beta1GenericOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Output only. Time when the operation was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Output only. Partial failures encountered. E.g. single files that couldn't be
        # read. This field should never exceed 20 entries. Status details field will
        # contain standard Google Cloud error details.
        # Corresponds to the JSON property `partialFailures`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleRpcStatus>]
        attr_accessor :partial_failures
      
        # Output only. Time when the operation was updated for the last time. If the
        # operation has finished (successfully or not), this is the finish time.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @partial_failures = args[:partial_failures] if args.key?(:partial_failures)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # Contains information about the source of the models generated from Generative
      # AI Studio.
      class GoogleCloudAiplatformV1beta1GenieSource
        include Google::Apis::Core::Hashable
      
        # Required. The public base model URI.
        # Corresponds to the JSON property `baseModelUri`
        # @return [String]
        attr_accessor :base_model_uri
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @base_model_uri = args[:base_model_uri] if args.key?(:base_model_uri)
        end
      end
      
      # Represents a HyperparameterTuningJob. A HyperparameterTuningJob has a Study
      # specification and multiple CustomJobs with identical CustomJob specification.
      class GoogleCloudAiplatformV1beta1HyperparameterTuningJob
        include Google::Apis::Core::Hashable
      
        # Output only. Time when the HyperparameterTuningJob was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Required. The display name of the HyperparameterTuningJob. The name can be up
        # to 128 characters long and can consist of any UTF-8 characters.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Represents a customer-managed encryption key spec that can be applied to a top-
        # level resource.
        # Corresponds to the JSON property `encryptionSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EncryptionSpec]
        attr_accessor :encryption_spec
      
        # Output only. Time when the HyperparameterTuningJob entered any of the
        # following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `
        # JOB_STATE_CANCELLED`.
        # Corresponds to the JSON property `endTime`
        # @return [String]
        attr_accessor :end_time
      
        # The `Status` type defines a logical error model that is suitable for different
        # programming environments, including REST APIs and RPC APIs. It is used by [
        # gRPC](https://github.com/grpc). Each `Status` message contains three pieces of
        # data: error code, error message, and error details. You can find out more
        # about this error model and how to work with it in the [API Design Guide](https:
        # //cloud.google.com/apis/design/errors).
        # Corresponds to the JSON property `error`
        # @return [Google::Apis::AiplatformV1beta1::GoogleRpcStatus]
        attr_accessor :error
      
        # The labels with user-defined metadata to organize HyperparameterTuningJobs.
        # Label keys and values can be no longer than 64 characters (Unicode codepoints),
        # can only contain lowercase letters, numeric characters, underscores and
        # dashes. International characters are allowed. See https://goo.gl/xmQnxf for
        # more information and examples of labels.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # The number of failed Trials that need to be seen before failing the
        # HyperparameterTuningJob. If set to 0, Vertex AI decides how many Trials must
        # fail before the whole job fails.
        # Corresponds to the JSON property `maxFailedTrialCount`
        # @return [Fixnum]
        attr_accessor :max_failed_trial_count
      
        # Required. The desired total number of Trials.
        # Corresponds to the JSON property `maxTrialCount`
        # @return [Fixnum]
        attr_accessor :max_trial_count
      
        # Output only. Resource name of the HyperparameterTuningJob.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Required. The desired number of Trials to run in parallel.
        # Corresponds to the JSON property `parallelTrialCount`
        # @return [Fixnum]
        attr_accessor :parallel_trial_count
      
        # Output only. Time when the HyperparameterTuningJob for the first time entered
        # the `JOB_STATE_RUNNING` state.
        # Corresponds to the JSON property `startTime`
        # @return [String]
        attr_accessor :start_time
      
        # Output only. The detailed state of the job.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor :state
      
        # Represents specification of a Study.
        # Corresponds to the JSON property `studySpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StudySpec]
        attr_accessor :study_spec
      
        # Represents the spec of a CustomJob.
        # Corresponds to the JSON property `trialJobSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1CustomJobSpec]
        attr_accessor :trial_job_spec
      
        # Output only. Trials of the HyperparameterTuningJob.
        # Corresponds to the JSON property `trials`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Trial>]
        attr_accessor :trials
      
        # Output only. Time when the HyperparameterTuningJob was most recently updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @display_name = args[:display_name] if args.key?(:display_name)
          @encryption_spec = args[:encryption_spec] if args.key?(:encryption_spec)
          @end_time = args[:end_time] if args.key?(:end_time)
          @error = args[:error] if args.key?(:error)
          @labels = args[:labels] if args.key?(:labels)
          @max_failed_trial_count = args[:max_failed_trial_count] if args.key?(:max_failed_trial_count)
          @max_trial_count = args[:max_trial_count] if args.key?(:max_trial_count)
          @name = args[:name] if args.key?(:name)
          @parallel_trial_count = args[:parallel_trial_count] if args.key?(:parallel_trial_count)
          @start_time = args[:start_time] if args.key?(:start_time)
          @state = args[:state] if args.key?(:state)
          @study_spec = args[:study_spec] if args.key?(:study_spec)
          @trial_job_spec = args[:trial_job_spec] if args.key?(:trial_job_spec)
          @trials = args[:trials] if args.key?(:trials)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # Matcher for Features of an EntityType by Feature ID.
      class GoogleCloudAiplatformV1beta1IdMatcher
        include Google::Apis::Core::Hashable
      
        # Required. The following are accepted as `ids`: * A single-element list
        # containing only `*`, which selects all Features in the target EntityType, or *
        # A list containing only Feature IDs, which selects only Features with those IDs
        # in the target EntityType.
        # Corresponds to the JSON property `ids`
        # @return [Array<String>]
        attr_accessor :ids
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @ids = args[:ids] if args.key?(:ids)
        end
      end
      
      # Describes the location from where we import data into a Dataset, together with
      # the labels that will be applied to the DataItems and the Annotations.
      class GoogleCloudAiplatformV1beta1ImportDataConfig
        include Google::Apis::Core::Hashable
      
        # Labels that will be applied to newly imported Annotations. If two Annotations
        # are identical, one of them will be deduped. Two Annotations are considered
        # identical if their payload, payload_schema_uri and all of their labels are the
        # same. These labels will be overridden by Annotation labels specified inside
        # index file referenced by import_schema_uri, e.g. jsonl file.
        # Corresponds to the JSON property `annotationLabels`
        # @return [Hash<String,String>]
        attr_accessor :annotation_labels
      
        # Labels that will be applied to newly imported DataItems. If an identical
        # DataItem as one being imported already exists in the Dataset, then these
        # labels will be appended to these of the already existing one, and if labels
        # with identical key is imported before, the old label value will be overwritten.
        # If two DataItems are identical in the same import data operation, the labels
        # will be combined and if key collision happens in this case, one of the values
        # will be picked randomly. Two DataItems are considered identical if their
        # content bytes are identical (e.g. image bytes or pdf bytes). These labels will
        # be overridden by Annotation labels specified inside index file referenced by
        # import_schema_uri, e.g. jsonl file.
        # Corresponds to the JSON property `dataItemLabels`
        # @return [Hash<String,String>]
        attr_accessor :data_item_labels
      
        # The Google Cloud Storage location for the input content.
        # Corresponds to the JSON property `gcsSource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GcsSource]
        attr_accessor :gcs_source
      
        # Required. Points to a YAML file stored on Google Cloud Storage describing the
        # import format. Validation will be done against the schema. The schema is
        # defined as an [OpenAPI 3.0.2 Schema Object](https://github.com/OAI/OpenAPI-
        # Specification/blob/main/versions/3.0.2.md#schemaObject).
        # Corresponds to the JSON property `importSchemaUri`
        # @return [String]
        attr_accessor :import_schema_uri
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotation_labels = args[:annotation_labels] if args.key?(:annotation_labels)
          @data_item_labels = args[:data_item_labels] if args.key?(:data_item_labels)
          @gcs_source = args[:gcs_source] if args.key?(:gcs_source)
          @import_schema_uri = args[:import_schema_uri] if args.key?(:import_schema_uri)
        end
      end
      
      # Runtime operation information for DatasetService.ImportData.
      class GoogleCloudAiplatformV1beta1ImportDataOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for DatasetService.ImportData.
      class GoogleCloudAiplatformV1beta1ImportDataRequest
        include Google::Apis::Core::Hashable
      
        # Required. The desired input locations. The contents of all input locations
        # will be imported in one batch.
        # Corresponds to the JSON property `importConfigs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ImportDataConfig>]
        attr_accessor :import_configs
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @import_configs = args[:import_configs] if args.key?(:import_configs)
        end
      end
      
      # Response message for DatasetService.ImportData.
      class GoogleCloudAiplatformV1beta1ImportDataResponse
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Details of ExtensionRegistryService.ImportExtension operation.
      class GoogleCloudAiplatformV1beta1ImportExtensionOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Details of operations that perform import Feature values.
      class GoogleCloudAiplatformV1beta1ImportFeatureValuesOperationMetadata
        include Google::Apis::Core::Hashable
      
        # List of ImportFeatureValues operations running under a single EntityType that
        # are blocking this operation.
        # Corresponds to the JSON property `blockingOperationIds`
        # @return [Array<Fixnum>]
        attr_accessor :blocking_operation_ids
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        # Number of entities that have been imported by the operation.
        # Corresponds to the JSON property `importedEntityCount`
        # @return [Fixnum]
        attr_accessor :imported_entity_count
      
        # Number of Feature values that have been imported by the operation.
        # Corresponds to the JSON property `importedFeatureValueCount`
        # @return [Fixnum]
        attr_accessor :imported_feature_value_count
      
        # The number of rows in input source that weren't imported due to either * Not
        # having any featureValues. * Having a null entityId. * Having a null timestamp.
        # * Not being parsable (applicable for CSV sources).
        # Corresponds to the JSON property `invalidRowCount`
        # @return [Fixnum]
        attr_accessor :invalid_row_count
      
        # The source URI from where Feature values are imported.
        # Corresponds to the JSON property `sourceUris`
        # @return [Array<String>]
        attr_accessor :source_uris
      
        # The number rows that weren't ingested due to having timestamps outside the
        # retention boundary.
        # Corresponds to the JSON property `timestampOutsideRetentionRowsCount`
        # @return [Fixnum]
        attr_accessor :timestamp_outside_retention_rows_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @blocking_operation_ids = args[:blocking_operation_ids] if args.key?(:blocking_operation_ids)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
          @imported_entity_count = args[:imported_entity_count] if args.key?(:imported_entity_count)
          @imported_feature_value_count = args[:imported_feature_value_count] if args.key?(:imported_feature_value_count)
          @invalid_row_count = args[:invalid_row_count] if args.key?(:invalid_row_count)
          @source_uris = args[:source_uris] if args.key?(:source_uris)
          @timestamp_outside_retention_rows_count = args[:timestamp_outside_retention_rows_count] if args.key?(:timestamp_outside_retention_rows_count)
        end
      end
      
      # Request message for FeaturestoreService.ImportFeatureValues.
      class GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest
        include Google::Apis::Core::Hashable
      
        # The storage details for Avro input content.
        # Corresponds to the JSON property `avroSource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1AvroSource]
        attr_accessor :avro_source
      
        # The BigQuery location for the input content.
        # Corresponds to the JSON property `bigquerySource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BigQuerySource]
        attr_accessor :bigquery_source
      
        # The storage details for CSV input content.
        # Corresponds to the JSON property `csvSource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1CsvSource]
        attr_accessor :csv_source
      
        # If true, API doesn't start ingestion analysis pipeline.
        # Corresponds to the JSON property `disableIngestionAnalysis`
        # @return [Boolean]
        attr_accessor :disable_ingestion_analysis
        alias_method :disable_ingestion_analysis?, :disable_ingestion_analysis
      
        # If set, data will not be imported for online serving. This is typically used
        # for backfilling, where Feature generation timestamps are not in the timestamp
        # range needed for online serving.
        # Corresponds to the JSON property `disableOnlineServing`
        # @return [Boolean]
        attr_accessor :disable_online_serving
        alias_method :disable_online_serving?, :disable_online_serving
      
        # Source column that holds entity IDs. If not provided, entity IDs are extracted
        # from the column named entity_id.
        # Corresponds to the JSON property `entityIdField`
        # @return [String]
        attr_accessor :entity_id_field
      
        # Required. Specifications defining which Feature values to import from the
        # entity. The request fails if no feature_specs are provided, and having
        # multiple feature_specs for one Feature is not allowed.
        # Corresponds to the JSON property `featureSpecs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ImportFeatureValuesRequestFeatureSpec>]
        attr_accessor :feature_specs
      
        # Single Feature timestamp for all entities being imported. The timestamp must
        # not have higher than millisecond precision.
        # Corresponds to the JSON property `featureTime`
        # @return [String]
        attr_accessor :feature_time
      
        # Source column that holds the Feature timestamp for all Feature values in each
        # entity.
        # Corresponds to the JSON property `featureTimeField`
        # @return [String]
        attr_accessor :feature_time_field
      
        # Specifies the number of workers that are used to write data to the
        # Featurestore. Consider the online serving capacity that you require to achieve
        # the desired import throughput without interfering with online serving. The
        # value must be positive, and less than or equal to 100. If not set, defaults to
        # using 1 worker. The low count ensures minimal impact on online serving
        # performance.
        # Corresponds to the JSON property `workerCount`
        # @return [Fixnum]
        attr_accessor :worker_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @avro_source = args[:avro_source] if args.key?(:avro_source)
          @bigquery_source = args[:bigquery_source] if args.key?(:bigquery_source)
          @csv_source = args[:csv_source] if args.key?(:csv_source)
          @disable_ingestion_analysis = args[:disable_ingestion_analysis] if args.key?(:disable_ingestion_analysis)
          @disable_online_serving = args[:disable_online_serving] if args.key?(:disable_online_serving)
          @entity_id_field = args[:entity_id_field] if args.key?(:entity_id_field)
          @feature_specs = args[:feature_specs] if args.key?(:feature_specs)
          @feature_time = args[:feature_time] if args.key?(:feature_time)
          @feature_time_field = args[:feature_time_field] if args.key?(:feature_time_field)
          @worker_count = args[:worker_count] if args.key?(:worker_count)
        end
      end
      
      # Defines the Feature value(s) to import.
      class GoogleCloudAiplatformV1beta1ImportFeatureValuesRequestFeatureSpec
        include Google::Apis::Core::Hashable
      
        # Required. ID of the Feature to import values of. This Feature must exist in
        # the target EntityType, or the request will fail.
        # Corresponds to the JSON property `id`
        # @return [String]
        attr_accessor :id
      
        # Source column to get the Feature values from. If not set, uses the column with
        # the same name as the Feature ID.
        # Corresponds to the JSON property `sourceField`
        # @return [String]
        attr_accessor :source_field
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @id = args[:id] if args.key?(:id)
          @source_field = args[:source_field] if args.key?(:source_field)
        end
      end
      
      # Response message for FeaturestoreService.ImportFeatureValues.
      class GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse
        include Google::Apis::Core::Hashable
      
        # Number of entities that have been imported by the operation.
        # Corresponds to the JSON property `importedEntityCount`
        # @return [Fixnum]
        attr_accessor :imported_entity_count
      
        # Number of Feature values that have been imported by the operation.
        # Corresponds to the JSON property `importedFeatureValueCount`
        # @return [Fixnum]
        attr_accessor :imported_feature_value_count
      
        # The number of rows in input source that weren't imported due to either * Not
        # having any featureValues. * Having a null entityId. * Having a null timestamp.
        # * Not being parsable (applicable for CSV sources).
        # Corresponds to the JSON property `invalidRowCount`
        # @return [Fixnum]
        attr_accessor :invalid_row_count
      
        # The number rows that weren't ingested due to having feature timestamps outside
        # the retention boundary.
        # Corresponds to the JSON property `timestampOutsideRetentionRowsCount`
        # @return [Fixnum]
        attr_accessor :timestamp_outside_retention_rows_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @imported_entity_count = args[:imported_entity_count] if args.key?(:imported_entity_count)
          @imported_feature_value_count = args[:imported_feature_value_count] if args.key?(:imported_feature_value_count)
          @invalid_row_count = args[:invalid_row_count] if args.key?(:invalid_row_count)
          @timestamp_outside_retention_rows_count = args[:timestamp_outside_retention_rows_count] if args.key?(:timestamp_outside_retention_rows_count)
        end
      end
      
      # Request message for ModelService.ImportModelEvaluation
      class GoogleCloudAiplatformV1beta1ImportModelEvaluationRequest
        include Google::Apis::Core::Hashable
      
        # A collection of metrics calculated by comparing Model's predictions on all of
        # the test data against annotations from the test data.
        # Corresponds to the JSON property `modelEvaluation`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelEvaluation]
        attr_accessor :model_evaluation
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @model_evaluation = args[:model_evaluation] if args.key?(:model_evaluation)
        end
      end
      
      # A representation of a collection of database items organized in a way that
      # allows for approximate nearest neighbor (a.k.a ANN) algorithms search.
      class GoogleCloudAiplatformV1beta1Index
        include Google::Apis::Core::Hashable
      
        # Output only. Timestamp when this Index was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Output only. The pointers to DeployedIndexes created from this Index. An Index
        # can be only deleted if all its DeployedIndexes had been undeployed first.
        # Corresponds to the JSON property `deployedIndexes`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DeployedIndexRef>]
        attr_accessor :deployed_indexes
      
        # The description of the Index.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor :description
      
        # Required. The display name of the Index. The name can be up to 128 characters
        # long and can consist of any UTF-8 characters.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Represents a customer-managed encryption key spec that can be applied to a top-
        # level resource.
        # Corresponds to the JSON property `encryptionSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EncryptionSpec]
        attr_accessor :encryption_spec
      
        # Used to perform consistent read-modify-write updates. If not set, a blind "
        # overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # Stats of the Index.
        # Corresponds to the JSON property `indexStats`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1IndexStats]
        attr_accessor :index_stats
      
        # Immutable. The update method to use with this Index. If not set, BATCH_UPDATE
        # will be used by default.
        # Corresponds to the JSON property `indexUpdateMethod`
        # @return [String]
        attr_accessor :index_update_method
      
        # The labels with user-defined metadata to organize your Indexes. Label keys and
        # values can be no longer than 64 characters (Unicode codepoints), can only
        # contain lowercase letters, numeric characters, underscores and dashes.
        # International characters are allowed. See https://goo.gl/xmQnxf for more
        # information and examples of labels.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # An additional information about the Index; the schema of the metadata can be
        # found in metadata_schema.
        # Corresponds to the JSON property `metadata`
        # @return [Object]
        attr_accessor :metadata
      
        # Immutable. Points to a YAML file stored on Google Cloud Storage describing
        # additional information about the Index, that is specific to it. Unset if the
        # Index does not have any additional information. The schema is defined as an
        # OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/
        # blob/main/versions/3.0.2.md#schemaObject). Note: The URI given on output will
        # be immutable and probably different, including the URI scheme, than the one
        # given on input. The output URI will point to a location where the user only
        # has a read access.
        # Corresponds to the JSON property `metadataSchemaUri`
        # @return [String]
        attr_accessor :metadata_schema_uri
      
        # Output only. The resource name of the Index.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Output only. Timestamp when this Index was most recently updated. This also
        # includes any update to the contents of the Index. Note that Operations working
        # on this Index may have their Operations.metadata.generic_metadata.update_time
        # a little after the value of this timestamp, yet that does not mean their
        # results are not already reflected in the Index. Result of any successfully
        # completed Operation on the Index is reflected in it.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @deployed_indexes = args[:deployed_indexes] if args.key?(:deployed_indexes)
          @description = args[:description] if args.key?(:description)
          @display_name = args[:display_name] if args.key?(:display_name)
          @encryption_spec = args[:encryption_spec] if args.key?(:encryption_spec)
          @etag = args[:etag] if args.key?(:etag)
          @index_stats = args[:index_stats] if args.key?(:index_stats)
          @index_update_method = args[:index_update_method] if args.key?(:index_update_method)
          @labels = args[:labels] if args.key?(:labels)
          @metadata = args[:metadata] if args.key?(:metadata)
          @metadata_schema_uri = args[:metadata_schema_uri] if args.key?(:metadata_schema_uri)
          @name = args[:name] if args.key?(:name)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # A datapoint of Index.
      class GoogleCloudAiplatformV1beta1IndexDatapoint
        include Google::Apis::Core::Hashable
      
        # Crowding tag is a constraint on a neighbor list produced by nearest neighbor
        # search requiring that no more than some value k' of the k neighbors returned
        # have the same value of crowding_attribute.
        # Corresponds to the JSON property `crowdingTag`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1IndexDatapointCrowdingTag]
        attr_accessor :crowding_tag
      
        # Required. Unique identifier of the datapoint.
        # Corresponds to the JSON property `datapointId`
        # @return [String]
        attr_accessor :datapoint_id
      
        # Required. Feature embedding vector. An array of numbers with the length of [
        # NearestNeighborSearchConfig.dimensions].
        # Corresponds to the JSON property `featureVector`
        # @return [Array<Float>]
        attr_accessor :feature_vector
      
        # Optional. List of Restrict of the datapoint, used to perform "restricted
        # searches" where boolean rule are used to filter the subset of the database
        # eligible for matching. This uses categorical tokens. See: https://cloud.google.
        # com/vertex-ai/docs/matching-engine/filtering
        # Corresponds to the JSON property `restricts`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1IndexDatapointRestriction>]
        attr_accessor :restricts
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @crowding_tag = args[:crowding_tag] if args.key?(:crowding_tag)
          @datapoint_id = args[:datapoint_id] if args.key?(:datapoint_id)
          @feature_vector = args[:feature_vector] if args.key?(:feature_vector)
          @restricts = args[:restricts] if args.key?(:restricts)
        end
      end
      
      # Crowding tag is a constraint on a neighbor list produced by nearest neighbor
      # search requiring that no more than some value k' of the k neighbors returned
      # have the same value of crowding_attribute.
      class GoogleCloudAiplatformV1beta1IndexDatapointCrowdingTag
        include Google::Apis::Core::Hashable
      
        # The attribute value used for crowding. The maximum number of neighbors to
        # return per crowding attribute value (per_crowding_attribute_num_neighbors) is
        # configured per-query. This field is ignored if
        # per_crowding_attribute_num_neighbors is larger than the total number of
        # neighbors to return for a given query.
        # Corresponds to the JSON property `crowdingAttribute`
        # @return [String]
        attr_accessor :crowding_attribute
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @crowding_attribute = args[:crowding_attribute] if args.key?(:crowding_attribute)
        end
      end
      
      # Restriction of a datapoint which describe its attributes(tokens) from each of
      # several attribute categories(namespaces).
      class GoogleCloudAiplatformV1beta1IndexDatapointRestriction
        include Google::Apis::Core::Hashable
      
        # The attributes to allow in this namespace. e.g.: 'red'
        # Corresponds to the JSON property `allowList`
        # @return [Array<String>]
        attr_accessor :allow_list
      
        # The attributes to deny in this namespace. e.g.: 'blue'
        # Corresponds to the JSON property `denyList`
        # @return [Array<String>]
        attr_accessor :deny_list
      
        # The namespace of this restriction. e.g.: color.
        # Corresponds to the JSON property `namespace`
        # @return [String]
        attr_accessor :namespace
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @allow_list = args[:allow_list] if args.key?(:allow_list)
          @deny_list = args[:deny_list] if args.key?(:deny_list)
          @namespace = args[:namespace] if args.key?(:namespace)
        end
      end
      
      # Indexes are deployed into it. An IndexEndpoint can have multiple
      # DeployedIndexes.
      class GoogleCloudAiplatformV1beta1IndexEndpoint
        include Google::Apis::Core::Hashable
      
        # Output only. Timestamp when this IndexEndpoint was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Output only. The indexes deployed in this endpoint.
        # Corresponds to the JSON property `deployedIndexes`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DeployedIndex>]
        attr_accessor :deployed_indexes
      
        # The description of the IndexEndpoint.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor :description
      
        # Required. The display name of the IndexEndpoint. The name can be up to 128
        # characters long and can consist of any UTF-8 characters.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Optional. Deprecated: If true, expose the IndexEndpoint via private service
        # connect. Only one of the fields, network or enable_private_service_connect,
        # can be set.
        # Corresponds to the JSON property `enablePrivateServiceConnect`
        # @return [Boolean]
        attr_accessor :enable_private_service_connect
        alias_method :enable_private_service_connect?, :enable_private_service_connect
      
        # Represents a customer-managed encryption key spec that can be applied to a top-
        # level resource.
        # Corresponds to the JSON property `encryptionSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EncryptionSpec]
        attr_accessor :encryption_spec
      
        # Used to perform consistent read-modify-write updates. If not set, a blind "
        # overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # The labels with user-defined metadata to organize your IndexEndpoints. Label
        # keys and values can be no longer than 64 characters (Unicode codepoints), can
        # only contain lowercase letters, numeric characters, underscores and dashes.
        # International characters are allowed. See https://goo.gl/xmQnxf for more
        # information and examples of labels.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Output only. The resource name of the IndexEndpoint.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Optional. The full name of the Google Compute Engine [network](https://cloud.
        # google.com/compute/docs/networks-and-firewalls#networks) to which the
        # IndexEndpoint should be peered. Private services access must already be
        # configured for the network. If left unspecified, the Endpoint is not peered
        # with any network. network and private_service_connect_config are mutually
        # exclusive. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/
        # networks/insert): `projects/`project`/global/networks/`network``. Where `
        # project` is a project number, as in '12345', and `network` is network name.
        # Corresponds to the JSON property `network`
        # @return [String]
        attr_accessor :network
      
        # Represents configuration for private service connect.
        # Corresponds to the JSON property `privateServiceConnectConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PrivateServiceConnectConfig]
        attr_accessor :private_service_connect_config
      
        # Output only. If public_endpoint_enabled is true, this field will be populated
        # with the domain name to use for this index endpoint.
        # Corresponds to the JSON property `publicEndpointDomainName`
        # @return [String]
        attr_accessor :public_endpoint_domain_name
      
        # Optional. If true, the deployed index will be accessible through public
        # endpoint.
        # Corresponds to the JSON property `publicEndpointEnabled`
        # @return [Boolean]
        attr_accessor :public_endpoint_enabled
        alias_method :public_endpoint_enabled?, :public_endpoint_enabled
      
        # Output only. Timestamp when this IndexEndpoint was last updated. This
        # timestamp is not updated when the endpoint's DeployedIndexes are updated, e.g.
        # due to updates of the original Indexes they are the deployments of.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @deployed_indexes = args[:deployed_indexes] if args.key?(:deployed_indexes)
          @description = args[:description] if args.key?(:description)
          @display_name = args[:display_name] if args.key?(:display_name)
          @enable_private_service_connect = args[:enable_private_service_connect] if args.key?(:enable_private_service_connect)
          @encryption_spec = args[:encryption_spec] if args.key?(:encryption_spec)
          @etag = args[:etag] if args.key?(:etag)
          @labels = args[:labels] if args.key?(:labels)
          @name = args[:name] if args.key?(:name)
          @network = args[:network] if args.key?(:network)
          @private_service_connect_config = args[:private_service_connect_config] if args.key?(:private_service_connect_config)
          @public_endpoint_domain_name = args[:public_endpoint_domain_name] if args.key?(:public_endpoint_domain_name)
          @public_endpoint_enabled = args[:public_endpoint_enabled] if args.key?(:public_endpoint_enabled)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # IndexPrivateEndpoints proto is used to provide paths for users to send
      # requests via private endpoints (e.g. private service access, private service
      # connect). To send request via private service access, use match_grpc_address.
      # To send request via private service connect, use service_attachment.
      class GoogleCloudAiplatformV1beta1IndexPrivateEndpoints
        include Google::Apis::Core::Hashable
      
        # Output only. The ip address used to send match gRPC requests.
        # Corresponds to the JSON property `matchGrpcAddress`
        # @return [String]
        attr_accessor :match_grpc_address
      
        # Output only. The name of the service attachment resource. Populated if private
        # service connect is enabled.
        # Corresponds to the JSON property `serviceAttachment`
        # @return [String]
        attr_accessor :service_attachment
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @match_grpc_address = args[:match_grpc_address] if args.key?(:match_grpc_address)
          @service_attachment = args[:service_attachment] if args.key?(:service_attachment)
        end
      end
      
      # Stats of the Index.
      class GoogleCloudAiplatformV1beta1IndexStats
        include Google::Apis::Core::Hashable
      
        # Output only. The number of shards in the Index.
        # Corresponds to the JSON property `shardsCount`
        # @return [Fixnum]
        attr_accessor :shards_count
      
        # Output only. The number of vectors in the Index.
        # Corresponds to the JSON property `vectorsCount`
        # @return [Fixnum]
        attr_accessor :vectors_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @shards_count = args[:shards_count] if args.key?(:shards_count)
          @vectors_count = args[:vectors_count] if args.key?(:vectors_count)
        end
      end
      
      # Specifies Vertex AI owned input data to be used for training, and possibly
      # evaluating, the Model.
      class GoogleCloudAiplatformV1beta1InputDataConfig
        include Google::Apis::Core::Hashable
      
        # Applicable only to custom training with Datasets that have DataItems and
        # Annotations. Cloud Storage URI that points to a YAML file describing the
        # annotation schema. The schema is defined as an OpenAPI 3.0.2 [Schema Object](
        # https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#
        # schemaObject). The schema files that can be used here are found in gs://google-
        # cloud-aiplatform/schema/dataset/annotation/ , note that the chosen schema must
        # be consistent with metadata of the Dataset specified by dataset_id. Only
        # Annotations that both match this schema and belong to DataItems not ignored by
        # the split method are used in respectively training, validation or test role,
        # depending on the role of the DataItem they are on. When used in conjunction
        # with annotations_filter, the Annotations used for training are filtered by
        # both annotations_filter and annotation_schema_uri.
        # Corresponds to the JSON property `annotationSchemaUri`
        # @return [String]
        attr_accessor :annotation_schema_uri
      
        # Applicable only to Datasets that have DataItems and Annotations. A filter on
        # Annotations of the Dataset. Only Annotations that both match this filter and
        # belong to DataItems not ignored by the split method are used in respectively
        # training, validation or test role, depending on the role of the DataItem they
        # are on (for the auto-assigned that role is decided by Vertex AI). A filter
        # with same syntax as the one used in ListAnnotations may be used, but note here
        # it filters across all Annotations of the Dataset, and not just within a single
        # DataItem.
        # Corresponds to the JSON property `annotationsFilter`
        # @return [String]
        attr_accessor :annotations_filter
      
        # The BigQuery location for the output content.
        # Corresponds to the JSON property `bigqueryDestination`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BigQueryDestination]
        attr_accessor :bigquery_destination
      
        # Required. The ID of the Dataset in the same Project and Location which data
        # will be used to train the Model. The Dataset must use schema compatible with
        # Model being trained, and what is compatible should be described in the used
        # TrainingPipeline's training_task_definition. For tabular Datasets, all their
        # data is exported to training, to pick and choose from.
        # Corresponds to the JSON property `datasetId`
        # @return [String]
        attr_accessor :dataset_id
      
        # Assigns input data to training, validation, and test sets based on the given
        # filters, data pieces not matched by any filter are ignored. Currently only
        # supported for Datasets containing DataItems. If any of the filters in this
        # message are to match nothing, then they can be set as '-' (the minus sign).
        # Supported only for unstructured Datasets.
        # Corresponds to the JSON property `filterSplit`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FilterSplit]
        attr_accessor :filter_split
      
        # Assigns the input data to training, validation, and test sets as per the given
        # fractions. Any of `training_fraction`, `validation_fraction` and `
        # test_fraction` may optionally be provided, they must sum to up to 1. If the
        # provided ones sum to less than 1, the remainder is assigned to sets as decided
        # by Vertex AI. If none of the fractions are set, by default roughly 80% of data
        # is used for training, 10% for validation, and 10% for test.
        # Corresponds to the JSON property `fractionSplit`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FractionSplit]
        attr_accessor :fraction_split
      
        # The Google Cloud Storage location where the output is to be written to.
        # Corresponds to the JSON property `gcsDestination`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GcsDestination]
        attr_accessor :gcs_destination
      
        # Whether to persist the ML use assignment to data item system labels.
        # Corresponds to the JSON property `persistMlUseAssignment`
        # @return [Boolean]
        attr_accessor :persist_ml_use_assignment
        alias_method :persist_ml_use_assignment?, :persist_ml_use_assignment
      
        # Assigns input data to training, validation, and test sets based on the value
        # of a provided key. Supported only for tabular Datasets.
        # Corresponds to the JSON property `predefinedSplit`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PredefinedSplit]
        attr_accessor :predefined_split
      
        # Only applicable to Datasets that have SavedQueries. The ID of a SavedQuery (
        # annotation set) under the Dataset specified by dataset_id used for filtering
        # Annotations for training. Only Annotations that are associated with this
        # SavedQuery are used in respectively training. When used in conjunction with
        # annotations_filter, the Annotations used for training are filtered by both
        # saved_query_id and annotations_filter. Only one of saved_query_id and
        # annotation_schema_uri should be specified as both of them represent the same
        # thing: problem type.
        # Corresponds to the JSON property `savedQueryId`
        # @return [String]
        attr_accessor :saved_query_id
      
        # Assigns input data to the training, validation, and test sets so that the
        # distribution of values found in the categorical column (as specified by the `
        # key` field) is mirrored within each split. The fraction values determine the
        # relative sizes of the splits. For example, if the specified column has three
        # values, with 50% of the rows having value "A", 25% value "B", and 25% value "C"
        # , and the split fractions are specified as 80/10/10, then the training set
        # will constitute 80% of the training data, with about 50% of the training set
        # rows having the value "A" for the specified column, about 25% having the value
        # "B", and about 25% having the value "C". Only the top 500 occurring values are
        # used; any values not in the top 500 values are randomly assigned to a split.
        # If less than three rows contain a specific value, those rows are randomly
        # assigned. Supported only for tabular Datasets.
        # Corresponds to the JSON property `stratifiedSplit`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StratifiedSplit]
        attr_accessor :stratified_split
      
        # Assigns input data to training, validation, and test sets based on a provided
        # timestamps. The youngest data pieces are assigned to training set, next to
        # validation set, and the oldest to the test set. Supported only for tabular
        # Datasets.
        # Corresponds to the JSON property `timestampSplit`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TimestampSplit]
        attr_accessor :timestamp_split
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotation_schema_uri = args[:annotation_schema_uri] if args.key?(:annotation_schema_uri)
          @annotations_filter = args[:annotations_filter] if args.key?(:annotations_filter)
          @bigquery_destination = args[:bigquery_destination] if args.key?(:bigquery_destination)
          @dataset_id = args[:dataset_id] if args.key?(:dataset_id)
          @filter_split = args[:filter_split] if args.key?(:filter_split)
          @fraction_split = args[:fraction_split] if args.key?(:fraction_split)
          @gcs_destination = args[:gcs_destination] if args.key?(:gcs_destination)
          @persist_ml_use_assignment = args[:persist_ml_use_assignment] if args.key?(:persist_ml_use_assignment)
          @predefined_split = args[:predefined_split] if args.key?(:predefined_split)
          @saved_query_id = args[:saved_query_id] if args.key?(:saved_query_id)
          @stratified_split = args[:stratified_split] if args.key?(:stratified_split)
          @timestamp_split = args[:timestamp_split] if args.key?(:timestamp_split)
        end
      end
      
      # A list of int64 values.
      class GoogleCloudAiplatformV1beta1Int64Array
        include Google::Apis::Core::Hashable
      
        # A list of int64 values.
        # Corresponds to the JSON property `values`
        # @return [Array<Fixnum>]
        attr_accessor :values
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @values = args[:values] if args.key?(:values)
        end
      end
      
      # An attribution method that computes the Aumann-Shapley value taking advantage
      # of the model's fully differentiable structure. Refer to this paper for more
      # details: https://arxiv.org/abs/1703.01365
      class GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution
        include Google::Apis::Core::Hashable
      
        # Config for blur baseline. When enabled, a linear path from the maximally
        # blurred image to the input image is created. Using a blurred baseline instead
        # of zero (black image) is motivated by the BlurIG approach explained here:
        # https://arxiv.org/abs/2004.03383
        # Corresponds to the JSON property `blurBaselineConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BlurBaselineConfig]
        attr_accessor :blur_baseline_config
      
        # Config for SmoothGrad approximation of gradients. When enabled, the gradients
        # are approximated by averaging the gradients from noisy samples in the vicinity
        # of the inputs. Adding noise can help improve the computed gradients. Refer to
        # this paper for more details: https://arxiv.org/pdf/1706.03825.pdf
        # Corresponds to the JSON property `smoothGradConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SmoothGradConfig]
        attr_accessor :smooth_grad_config
      
        # Required. The number of steps for approximating the path integral. A good
        # value to start is 50 and gradually increase until the sum to diff property is
        # within the desired error range. Valid range of its value is [1, 100],
        # inclusively.
        # Corresponds to the JSON property `stepCount`
        # @return [Fixnum]
        attr_accessor :step_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @blur_baseline_config = args[:blur_baseline_config] if args.key?(:blur_baseline_config)
          @smooth_grad_config = args[:smooth_grad_config] if args.key?(:smooth_grad_config)
          @step_count = args[:step_count] if args.key?(:step_count)
        end
      end
      
      # Contains information about the Large Model.
      class GoogleCloudAiplatformV1beta1LargeModelReference
        include Google::Apis::Core::Hashable
      
        # Required. The unique name of the large Foundation or pre-built model. Like "
        # chat-bison", "text-bison". Or model name with version ID, like "chat-bison@001"
        # , "text-bison@005", etc.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @name = args[:name] if args.key?(:name)
        end
      end
      
      # A subgraph of the overall lineage graph. Event edges connect Artifact and
      # Execution nodes.
      class GoogleCloudAiplatformV1beta1LineageSubgraph
        include Google::Apis::Core::Hashable
      
        # The Artifact nodes in the subgraph.
        # Corresponds to the JSON property `artifacts`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Artifact>]
        attr_accessor :artifacts
      
        # The Event edges between Artifacts and Executions in the subgraph.
        # Corresponds to the JSON property `events`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Event>]
        attr_accessor :events
      
        # The Execution nodes in the subgraph.
        # Corresponds to the JSON property `executions`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Execution>]
        attr_accessor :executions
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @artifacts = args[:artifacts] if args.key?(:artifacts)
          @events = args[:events] if args.key?(:events)
          @executions = args[:executions] if args.key?(:executions)
        end
      end
      
      # Response message for DatasetService.ListAnnotations.
      class GoogleCloudAiplatformV1beta1ListAnnotationsResponse
        include Google::Apis::Core::Hashable
      
        # A list of Annotations that matches the specified filter in the request.
        # Corresponds to the JSON property `annotations`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Annotation>]
        attr_accessor :annotations
      
        # The standard List next-page token.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotations = args[:annotations] if args.key?(:annotations)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for MetadataService.ListArtifacts.
      class GoogleCloudAiplatformV1beta1ListArtifactsResponse
        include Google::Apis::Core::Hashable
      
        # The Artifacts retrieved from the MetadataStore.
        # Corresponds to the JSON property `artifacts`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Artifact>]
        attr_accessor :artifacts
      
        # A token, which can be sent as ListArtifactsRequest.page_token to retrieve the
        # next page. If this field is not populated, there are no subsequent pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @artifacts = args[:artifacts] if args.key?(:artifacts)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for JobService.ListBatchPredictionJobs
      class GoogleCloudAiplatformV1beta1ListBatchPredictionJobsResponse
        include Google::Apis::Core::Hashable
      
        # List of BatchPredictionJobs in the requested page.
        # Corresponds to the JSON property `batchPredictionJobs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BatchPredictionJob>]
        attr_accessor :batch_prediction_jobs
      
        # A token to retrieve the next page of results. Pass to
        # ListBatchPredictionJobsRequest.page_token to obtain that page.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @batch_prediction_jobs = args[:batch_prediction_jobs] if args.key?(:batch_prediction_jobs)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for MetadataService.ListContexts.
      class GoogleCloudAiplatformV1beta1ListContextsResponse
        include Google::Apis::Core::Hashable
      
        # The Contexts retrieved from the MetadataStore.
        # Corresponds to the JSON property `contexts`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Context>]
        attr_accessor :contexts
      
        # A token, which can be sent as ListContextsRequest.page_token to retrieve the
        # next page. If this field is not populated, there are no subsequent pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @contexts = args[:contexts] if args.key?(:contexts)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for JobService.ListCustomJobs
      class GoogleCloudAiplatformV1beta1ListCustomJobsResponse
        include Google::Apis::Core::Hashable
      
        # List of CustomJobs in the requested page.
        # Corresponds to the JSON property `customJobs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1CustomJob>]
        attr_accessor :custom_jobs
      
        # A token to retrieve the next page of results. Pass to ListCustomJobsRequest.
        # page_token to obtain that page.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @custom_jobs = args[:custom_jobs] if args.key?(:custom_jobs)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for DatasetService.ListDataItems.
      class GoogleCloudAiplatformV1beta1ListDataItemsResponse
        include Google::Apis::Core::Hashable
      
        # A list of DataItems that matches the specified filter in the request.
        # Corresponds to the JSON property `dataItems`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DataItem>]
        attr_accessor :data_items
      
        # The standard List next-page token.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @data_items = args[:data_items] if args.key?(:data_items)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for JobService.ListDataLabelingJobs.
      class GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse
        include Google::Apis::Core::Hashable
      
        # A list of DataLabelingJobs that matches the specified filter in the request.
        # Corresponds to the JSON property `dataLabelingJobs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DataLabelingJob>]
        attr_accessor :data_labeling_jobs
      
        # The standard List next-page token.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @data_labeling_jobs = args[:data_labeling_jobs] if args.key?(:data_labeling_jobs)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for DatasetService.ListDatasetVersions.
      class GoogleCloudAiplatformV1beta1ListDatasetVersionsResponse
        include Google::Apis::Core::Hashable
      
        # A list of DatasetVersions that matches the specified filter in the request.
        # Corresponds to the JSON property `datasetVersions`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DatasetVersion>]
        attr_accessor :dataset_versions
      
        # The standard List next-page token.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @dataset_versions = args[:dataset_versions] if args.key?(:dataset_versions)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for DatasetService.ListDatasets.
      class GoogleCloudAiplatformV1beta1ListDatasetsResponse
        include Google::Apis::Core::Hashable
      
        # A list of Datasets that matches the specified filter in the request.
        # Corresponds to the JSON property `datasets`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Dataset>]
        attr_accessor :datasets
      
        # The standard List next-page token.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @datasets = args[:datasets] if args.key?(:datasets)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for ListDeploymentResourcePools method.
      class GoogleCloudAiplatformV1beta1ListDeploymentResourcePoolsResponse
        include Google::Apis::Core::Hashable
      
        # The DeploymentResourcePools from the specified location.
        # Corresponds to the JSON property `deploymentResourcePools`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DeploymentResourcePool>]
        attr_accessor :deployment_resource_pools
      
        # A token, which can be sent as `page_token` to retrieve the next page. If this
        # field is omitted, there are no subsequent pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployment_resource_pools = args[:deployment_resource_pools] if args.key?(:deployment_resource_pools)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for EndpointService.ListEndpoints.
      class GoogleCloudAiplatformV1beta1ListEndpointsResponse
        include Google::Apis::Core::Hashable
      
        # List of Endpoints in the requested page.
        # Corresponds to the JSON property `endpoints`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Endpoint>]
        attr_accessor :endpoints
      
        # A token to retrieve the next page of results. Pass to ListEndpointsRequest.
        # page_token to obtain that page.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @endpoints = args[:endpoints] if args.key?(:endpoints)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for FeaturestoreService.ListEntityTypes.
      class GoogleCloudAiplatformV1beta1ListEntityTypesResponse
        include Google::Apis::Core::Hashable
      
        # The EntityTypes matching the request.
        # Corresponds to the JSON property `entityTypes`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EntityType>]
        attr_accessor :entity_types
      
        # A token, which can be sent as ListEntityTypesRequest.page_token to retrieve
        # the next page. If this field is omitted, there are no subsequent pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @entity_types = args[:entity_types] if args.key?(:entity_types)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for MetadataService.ListExecutions.
      class GoogleCloudAiplatformV1beta1ListExecutionsResponse
        include Google::Apis::Core::Hashable
      
        # The Executions retrieved from the MetadataStore.
        # Corresponds to the JSON property `executions`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Execution>]
        attr_accessor :executions
      
        # A token, which can be sent as ListExecutionsRequest.page_token to retrieve the
        # next page. If this field is not populated, there are no subsequent pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @executions = args[:executions] if args.key?(:executions)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for FeatureRegistryService.ListFeatureGroups.
      class GoogleCloudAiplatformV1beta1ListFeatureGroupsResponse
        include Google::Apis::Core::Hashable
      
        # The FeatureGroups matching the request.
        # Corresponds to the JSON property `featureGroups`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureGroup>]
        attr_accessor :feature_groups
      
        # A token, which can be sent as ListFeatureGroupsRequest.page_token to retrieve
        # the next page. If this field is omitted, there are no subsequent pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @feature_groups = args[:feature_groups] if args.key?(:feature_groups)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for FeatureOnlineStoreAdminService.ListFeatureOnlineStores.
      class GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse
        include Google::Apis::Core::Hashable
      
        # The FeatureOnlineStores matching the request.
        # Corresponds to the JSON property `featureOnlineStores`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureOnlineStore>]
        attr_accessor :feature_online_stores
      
        # A token, which can be sent as ListFeatureOnlineStoresRequest.page_token to
        # retrieve the next page. If this field is omitted, there are no subsequent
        # pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @feature_online_stores = args[:feature_online_stores] if args.key?(:feature_online_stores)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for FeatureOnlineStoreAdminService.ListFeatureViewSyncs.
      class GoogleCloudAiplatformV1beta1ListFeatureViewSyncsResponse
        include Google::Apis::Core::Hashable
      
        # The FeatureViewSyncs matching the request.
        # Corresponds to the JSON property `featureViewSyncs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureViewSync>]
        attr_accessor :feature_view_syncs
      
        # A token, which can be sent as ListFeatureViewSyncsRequest.page_token to
        # retrieve the next page. If this field is omitted, there are no subsequent
        # pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @feature_view_syncs = args[:feature_view_syncs] if args.key?(:feature_view_syncs)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for FeatureOnlineStoreAdminService.ListFeatureViews.
      class GoogleCloudAiplatformV1beta1ListFeatureViewsResponse
        include Google::Apis::Core::Hashable
      
        # The FeatureViews matching the request.
        # Corresponds to the JSON property `featureViews`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureView>]
        attr_accessor :feature_views
      
        # A token, which can be sent as ListFeatureViewsRequest.page_token to retrieve
        # the next page. If this field is omitted, there are no subsequent pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @feature_views = args[:feature_views] if args.key?(:feature_views)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for FeaturestoreService.ListFeatures. Response message for
      # FeatureRegistryService.ListFeatures.
      class GoogleCloudAiplatformV1beta1ListFeaturesResponse
        include Google::Apis::Core::Hashable
      
        # The Features matching the request.
        # Corresponds to the JSON property `features`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Feature>]
        attr_accessor :features
      
        # A token, which can be sent as ListFeaturesRequest.page_token to retrieve the
        # next page. If this field is omitted, there are no subsequent pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @features = args[:features] if args.key?(:features)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for FeaturestoreService.ListFeaturestores.
      class GoogleCloudAiplatformV1beta1ListFeaturestoresResponse
        include Google::Apis::Core::Hashable
      
        # The Featurestores matching the request.
        # Corresponds to the JSON property `featurestores`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Featurestore>]
        attr_accessor :featurestores
      
        # A token, which can be sent as ListFeaturestoresRequest.page_token to retrieve
        # the next page. If this field is omitted, there are no subsequent pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @featurestores = args[:featurestores] if args.key?(:featurestores)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for JobService.ListHyperparameterTuningJobs
      class GoogleCloudAiplatformV1beta1ListHyperparameterTuningJobsResponse
        include Google::Apis::Core::Hashable
      
        # List of HyperparameterTuningJobs in the requested page.
        # HyperparameterTuningJob.trials of the jobs will be not be returned.
        # Corresponds to the JSON property `hyperparameterTuningJobs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1HyperparameterTuningJob>]
        attr_accessor :hyperparameter_tuning_jobs
      
        # A token to retrieve the next page of results. Pass to
        # ListHyperparameterTuningJobsRequest.page_token to obtain that page.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @hyperparameter_tuning_jobs = args[:hyperparameter_tuning_jobs] if args.key?(:hyperparameter_tuning_jobs)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for IndexEndpointService.ListIndexEndpoints.
      class GoogleCloudAiplatformV1beta1ListIndexEndpointsResponse
        include Google::Apis::Core::Hashable
      
        # List of IndexEndpoints in the requested page.
        # Corresponds to the JSON property `indexEndpoints`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1IndexEndpoint>]
        attr_accessor :index_endpoints
      
        # A token to retrieve next page of results. Pass to ListIndexEndpointsRequest.
        # page_token to obtain that page.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @index_endpoints = args[:index_endpoints] if args.key?(:index_endpoints)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for IndexService.ListIndexes.
      class GoogleCloudAiplatformV1beta1ListIndexesResponse
        include Google::Apis::Core::Hashable
      
        # List of indexes in the requested page.
        # Corresponds to the JSON property `indexes`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Index>]
        attr_accessor :indexes
      
        # A token to retrieve next page of results. Pass to ListIndexesRequest.
        # page_token to obtain that page.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @indexes = args[:indexes] if args.key?(:indexes)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for MetadataService.ListMetadataSchemas.
      class GoogleCloudAiplatformV1beta1ListMetadataSchemasResponse
        include Google::Apis::Core::Hashable
      
        # The MetadataSchemas found for the MetadataStore.
        # Corresponds to the JSON property `metadataSchemas`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MetadataSchema>]
        attr_accessor :metadata_schemas
      
        # A token, which can be sent as ListMetadataSchemasRequest.page_token to
        # retrieve the next page. If this field is not populated, there are no
        # subsequent pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @metadata_schemas = args[:metadata_schemas] if args.key?(:metadata_schemas)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for MetadataService.ListMetadataStores.
      class GoogleCloudAiplatformV1beta1ListMetadataStoresResponse
        include Google::Apis::Core::Hashable
      
        # The MetadataStores found for the Location.
        # Corresponds to the JSON property `metadataStores`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MetadataStore>]
        attr_accessor :metadata_stores
      
        # A token, which can be sent as ListMetadataStoresRequest.page_token to retrieve
        # the next page. If this field is not populated, there are no subsequent pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @metadata_stores = args[:metadata_stores] if args.key?(:metadata_stores)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for JobService.ListModelDeploymentMonitoringJobs.
      class GoogleCloudAiplatformV1beta1ListModelDeploymentMonitoringJobsResponse
        include Google::Apis::Core::Hashable
      
        # A list of ModelDeploymentMonitoringJobs that matches the specified filter in
        # the request.
        # Corresponds to the JSON property `modelDeploymentMonitoringJobs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob>]
        attr_accessor :model_deployment_monitoring_jobs
      
        # The standard List next-page token.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @model_deployment_monitoring_jobs = args[:model_deployment_monitoring_jobs] if args.key?(:model_deployment_monitoring_jobs)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for ModelService.ListModelEvaluationSlices.
      class GoogleCloudAiplatformV1beta1ListModelEvaluationSlicesResponse
        include Google::Apis::Core::Hashable
      
        # List of ModelEvaluations in the requested page.
        # Corresponds to the JSON property `modelEvaluationSlices`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelEvaluationSlice>]
        attr_accessor :model_evaluation_slices
      
        # A token to retrieve next page of results. Pass to
        # ListModelEvaluationSlicesRequest.page_token to obtain that page.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @model_evaluation_slices = args[:model_evaluation_slices] if args.key?(:model_evaluation_slices)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for ModelService.ListModelEvaluations.
      class GoogleCloudAiplatformV1beta1ListModelEvaluationsResponse
        include Google::Apis::Core::Hashable
      
        # List of ModelEvaluations in the requested page.
        # Corresponds to the JSON property `modelEvaluations`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelEvaluation>]
        attr_accessor :model_evaluations
      
        # A token to retrieve next page of results. Pass to ListModelEvaluationsRequest.
        # page_token to obtain that page.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @model_evaluations = args[:model_evaluations] if args.key?(:model_evaluations)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for ModelService.ListModelVersions
      class GoogleCloudAiplatformV1beta1ListModelVersionsResponse
        include Google::Apis::Core::Hashable
      
        # List of Model versions in the requested page. In the returned Model name field,
        # version ID instead of regvision tag will be included.
        # Corresponds to the JSON property `models`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Model>]
        attr_accessor :models
      
        # A token to retrieve the next page of results. Pass to ListModelVersionsRequest.
        # page_token to obtain that page.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @models = args[:models] if args.key?(:models)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for ModelService.ListModels
      class GoogleCloudAiplatformV1beta1ListModelsResponse
        include Google::Apis::Core::Hashable
      
        # List of Models in the requested page.
        # Corresponds to the JSON property `models`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Model>]
        attr_accessor :models
      
        # A token to retrieve next page of results. Pass to ListModelsRequest.page_token
        # to obtain that page.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @models = args[:models] if args.key?(:models)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for JobService.ListNasJobs
      class GoogleCloudAiplatformV1beta1ListNasJobsResponse
        include Google::Apis::Core::Hashable
      
        # List of NasJobs in the requested page. NasJob.nas_job_output of the jobs will
        # not be returned.
        # Corresponds to the JSON property `nasJobs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NasJob>]
        attr_accessor :nas_jobs
      
        # A token to retrieve the next page of results. Pass to ListNasJobsRequest.
        # page_token to obtain that page.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @nas_jobs = args[:nas_jobs] if args.key?(:nas_jobs)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for JobService.ListNasTrialDetails
      class GoogleCloudAiplatformV1beta1ListNasTrialDetailsResponse
        include Google::Apis::Core::Hashable
      
        # List of top NasTrials in the requested page.
        # Corresponds to the JSON property `nasTrialDetails`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NasTrialDetail>]
        attr_accessor :nas_trial_details
      
        # A token to retrieve the next page of results. Pass to
        # ListNasTrialDetailsRequest.page_token to obtain that page.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @nas_trial_details = args[:nas_trial_details] if args.key?(:nas_trial_details)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for NotebookService.ListNotebookRuntimeTemplates.
      class GoogleCloudAiplatformV1beta1ListNotebookRuntimeTemplatesResponse
        include Google::Apis::Core::Hashable
      
        # A token to retrieve next page of results. Pass to
        # ListNotebookRuntimeTemplatesRequest.page_token to obtain that page.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        # List of NotebookRuntimeTemplates in the requested page.
        # Corresponds to the JSON property `notebookRuntimeTemplates`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NotebookRuntimeTemplate>]
        attr_accessor :notebook_runtime_templates
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
          @notebook_runtime_templates = args[:notebook_runtime_templates] if args.key?(:notebook_runtime_templates)
        end
      end
      
      # Response message for NotebookService.ListNotebookRuntimes.
      class GoogleCloudAiplatformV1beta1ListNotebookRuntimesResponse
        include Google::Apis::Core::Hashable
      
        # A token to retrieve next page of results. Pass to ListNotebookRuntimesRequest.
        # page_token to obtain that page.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        # List of NotebookRuntimes in the requested page.
        # Corresponds to the JSON property `notebookRuntimes`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NotebookRuntime>]
        attr_accessor :notebook_runtimes
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
          @notebook_runtimes = args[:notebook_runtimes] if args.key?(:notebook_runtimes)
        end
      end
      
      # Request message for VizierService.ListOptimalTrials.
      class GoogleCloudAiplatformV1beta1ListOptimalTrialsRequest
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Response message for VizierService.ListOptimalTrials.
      class GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse
        include Google::Apis::Core::Hashable
      
        # The pareto-optimal Trials for multiple objective Study or the optimal trial
        # for single objective Study. The definition of pareto-optimal can be checked in
        # wiki page. https://en.wikipedia.org/wiki/Pareto_efficiency
        # Corresponds to the JSON property `optimalTrials`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Trial>]
        attr_accessor :optimal_trials
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @optimal_trials = args[:optimal_trials] if args.key?(:optimal_trials)
        end
      end
      
      # Response message for PersistentResourceService.ListPersistentResources
      class GoogleCloudAiplatformV1beta1ListPersistentResourcesResponse
        include Google::Apis::Core::Hashable
      
        # A token to retrieve next page of results. Pass to
        # ListPersistentResourcesRequest.page_token to obtain that page.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        # 
        # Corresponds to the JSON property `persistentResources`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PersistentResource>]
        attr_accessor :persistent_resources
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
          @persistent_resources = args[:persistent_resources] if args.key?(:persistent_resources)
        end
      end
      
      # Response message for PipelineService.ListPipelineJobs
      class GoogleCloudAiplatformV1beta1ListPipelineJobsResponse
        include Google::Apis::Core::Hashable
      
        # A token to retrieve the next page of results. Pass to ListPipelineJobsRequest.
        # page_token to obtain that page.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        # List of PipelineJobs in the requested page.
        # Corresponds to the JSON property `pipelineJobs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PipelineJob>]
        attr_accessor :pipeline_jobs
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
          @pipeline_jobs = args[:pipeline_jobs] if args.key?(:pipeline_jobs)
        end
      end
      
      # Response message for ModelGardenService.ListPublisherModels.
      class GoogleCloudAiplatformV1beta1ListPublisherModelsResponse
        include Google::Apis::Core::Hashable
      
        # A token to retrieve next page of results. Pass to ListPublisherModels.
        # page_token to obtain that page.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        # List of PublisherModels in the requested page.
        # Corresponds to the JSON property `publisherModels`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PublisherModel>]
        attr_accessor :publisher_models
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
          @publisher_models = args[:publisher_models] if args.key?(:publisher_models)
        end
      end
      
      # Response message for DatasetService.ListSavedQueries.
      class GoogleCloudAiplatformV1beta1ListSavedQueriesResponse
        include Google::Apis::Core::Hashable
      
        # The standard List next-page token.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        # A list of SavedQueries that match the specified filter in the request.
        # Corresponds to the JSON property `savedQueries`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SavedQuery>]
        attr_accessor :saved_queries
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
          @saved_queries = args[:saved_queries] if args.key?(:saved_queries)
        end
      end
      
      # Response message for ScheduleService.ListSchedules
      class GoogleCloudAiplatformV1beta1ListSchedulesResponse
        include Google::Apis::Core::Hashable
      
        # A token to retrieve the next page of results. Pass to ListSchedulesRequest.
        # page_token to obtain that page.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        # List of Schedules in the requested page.
        # Corresponds to the JSON property `schedules`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Schedule>]
        attr_accessor :schedules
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
          @schedules = args[:schedules] if args.key?(:schedules)
        end
      end
      
      # Response message for SpecialistPoolService.ListSpecialistPools.
      class GoogleCloudAiplatformV1beta1ListSpecialistPoolsResponse
        include Google::Apis::Core::Hashable
      
        # The standard List next-page token.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        # A list of SpecialistPools that matches the specified filter in the request.
        # Corresponds to the JSON property `specialistPools`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SpecialistPool>]
        attr_accessor :specialist_pools
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
          @specialist_pools = args[:specialist_pools] if args.key?(:specialist_pools)
        end
      end
      
      # Response message for VizierService.ListStudies.
      class GoogleCloudAiplatformV1beta1ListStudiesResponse
        include Google::Apis::Core::Hashable
      
        # Passes this token as the `page_token` field of the request for a subsequent
        # call. If this field is omitted, there are no subsequent pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        # The studies associated with the project.
        # Corresponds to the JSON property `studies`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Study>]
        attr_accessor :studies
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
          @studies = args[:studies] if args.key?(:studies)
        end
      end
      
      # Response message for TensorboardService.ListTensorboardExperiments.
      class GoogleCloudAiplatformV1beta1ListTensorboardExperimentsResponse
        include Google::Apis::Core::Hashable
      
        # A token, which can be sent as ListTensorboardExperimentsRequest.page_token to
        # retrieve the next page. If this field is omitted, there are no subsequent
        # pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        # The TensorboardExperiments mathching the request.
        # Corresponds to the JSON property `tensorboardExperiments`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TensorboardExperiment>]
        attr_accessor :tensorboard_experiments
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
          @tensorboard_experiments = args[:tensorboard_experiments] if args.key?(:tensorboard_experiments)
        end
      end
      
      # Response message for TensorboardService.ListTensorboardRuns.
      class GoogleCloudAiplatformV1beta1ListTensorboardRunsResponse
        include Google::Apis::Core::Hashable
      
        # A token, which can be sent as ListTensorboardRunsRequest.page_token to
        # retrieve the next page. If this field is omitted, there are no subsequent
        # pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        # The TensorboardRuns mathching the request.
        # Corresponds to the JSON property `tensorboardRuns`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TensorboardRun>]
        attr_accessor :tensorboard_runs
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
          @tensorboard_runs = args[:tensorboard_runs] if args.key?(:tensorboard_runs)
        end
      end
      
      # Response message for TensorboardService.ListTensorboardTimeSeries.
      class GoogleCloudAiplatformV1beta1ListTensorboardTimeSeriesResponse
        include Google::Apis::Core::Hashable
      
        # A token, which can be sent as ListTensorboardTimeSeriesRequest.page_token to
        # retrieve the next page. If this field is omitted, there are no subsequent
        # pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        # The TensorboardTimeSeries mathching the request.
        # Corresponds to the JSON property `tensorboardTimeSeries`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TensorboardTimeSeries>]
        attr_accessor :tensorboard_time_series
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
          @tensorboard_time_series = args[:tensorboard_time_series] if args.key?(:tensorboard_time_series)
        end
      end
      
      # Response message for TensorboardService.ListTensorboards.
      class GoogleCloudAiplatformV1beta1ListTensorboardsResponse
        include Google::Apis::Core::Hashable
      
        # A token, which can be sent as ListTensorboardsRequest.page_token to retrieve
        # the next page. If this field is omitted, there are no subsequent pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        # The Tensorboards mathching the request.
        # Corresponds to the JSON property `tensorboards`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Tensorboard>]
        attr_accessor :tensorboards
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
          @tensorboards = args[:tensorboards] if args.key?(:tensorboards)
        end
      end
      
      # Response message for PipelineService.ListTrainingPipelines
      class GoogleCloudAiplatformV1beta1ListTrainingPipelinesResponse
        include Google::Apis::Core::Hashable
      
        # A token to retrieve the next page of results. Pass to
        # ListTrainingPipelinesRequest.page_token to obtain that page.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        # List of TrainingPipelines in the requested page.
        # Corresponds to the JSON property `trainingPipelines`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TrainingPipeline>]
        attr_accessor :training_pipelines
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
          @training_pipelines = args[:training_pipelines] if args.key?(:training_pipelines)
        end
      end
      
      # Response message for VizierService.ListTrials.
      class GoogleCloudAiplatformV1beta1ListTrialsResponse
        include Google::Apis::Core::Hashable
      
        # Pass this token as the `page_token` field of the request for a subsequent call.
        # If this field is omitted, there are no subsequent pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        # The Trials associated with the Study.
        # Corresponds to the JSON property `trials`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Trial>]
        attr_accessor :trials
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
          @trials = args[:trials] if args.key?(:trials)
        end
      end
      
      # Request message for VizierService.LookupStudy.
      class GoogleCloudAiplatformV1beta1LookupStudyRequest
        include Google::Apis::Core::Hashable
      
        # Required. The user-defined display name of the Study
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @display_name = args[:display_name] if args.key?(:display_name)
        end
      end
      
      # Specification of a single machine.
      class GoogleCloudAiplatformV1beta1MachineSpec
        include Google::Apis::Core::Hashable
      
        # The number of accelerators to attach to the machine.
        # Corresponds to the JSON property `acceleratorCount`
        # @return [Fixnum]
        attr_accessor :accelerator_count
      
        # Immutable. The type of accelerator(s) that may be attached to the machine as
        # per accelerator_count.
        # Corresponds to the JSON property `acceleratorType`
        # @return [String]
        attr_accessor :accelerator_type
      
        # Immutable. The type of the machine. See the [list of machine types supported
        # for prediction](https://cloud.google.com/vertex-ai/docs/predictions/configure-
        # compute#machine-types) See the [list of machine types supported for custom
        # training](https://cloud.google.com/vertex-ai/docs/training/configure-compute#
        # machine-types). For DeployedModel this field is optional, and the default
        # value is `n1-standard-2`. For BatchPredictionJob or as part of WorkerPoolSpec
        # this field is required.
        # Corresponds to the JSON property `machineType`
        # @return [String]
        attr_accessor :machine_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @accelerator_count = args[:accelerator_count] if args.key?(:accelerator_count)
          @accelerator_type = args[:accelerator_type] if args.key?(:accelerator_type)
          @machine_type = args[:machine_type] if args.key?(:machine_type)
        end
      end
      
      # Manual batch tuning parameters.
      class GoogleCloudAiplatformV1beta1ManualBatchTuningParameters
        include Google::Apis::Core::Hashable
      
        # Immutable. The number of the records (e.g. instances) of the operation given
        # in each batch to a machine replica. Machine type, and size of a single record
        # should be considered when setting this parameter, higher value speeds up the
        # batch operation's execution, but too high value will result in a whole batch
        # not fitting in a machine's memory, and the whole operation will fail. The
        # default value is 64.
        # Corresponds to the JSON property `batchSize`
        # @return [Fixnum]
        attr_accessor :batch_size
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @batch_size = args[:batch_size] if args.key?(:batch_size)
        end
      end
      
      # A message representing a Measurement of a Trial. A Measurement contains the
      # Metrics got by executing a Trial using suggested hyperparameter values.
      class GoogleCloudAiplatformV1beta1Measurement
        include Google::Apis::Core::Hashable
      
        # Output only. Time that the Trial has been running at the point of this
        # Measurement.
        # Corresponds to the JSON property `elapsedDuration`
        # @return [String]
        attr_accessor :elapsed_duration
      
        # Output only. A list of metrics got by evaluating the objective functions using
        # suggested Parameter values.
        # Corresponds to the JSON property `metrics`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MeasurementMetric>]
        attr_accessor :metrics
      
        # Output only. The number of steps the machine learning model has been trained
        # for. Must be non-negative.
        # Corresponds to the JSON property `stepCount`
        # @return [Fixnum]
        attr_accessor :step_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @elapsed_duration = args[:elapsed_duration] if args.key?(:elapsed_duration)
          @metrics = args[:metrics] if args.key?(:metrics)
          @step_count = args[:step_count] if args.key?(:step_count)
        end
      end
      
      # A message representing a metric in the measurement.
      class GoogleCloudAiplatformV1beta1MeasurementMetric
        include Google::Apis::Core::Hashable
      
        # Output only. The ID of the Metric. The Metric should be defined in StudySpec's
        # Metrics.
        # Corresponds to the JSON property `metricId`
        # @return [String]
        attr_accessor :metric_id
      
        # Output only. The value for this metric.
        # Corresponds to the JSON property `value`
        # @return [Float]
        attr_accessor :value
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @metric_id = args[:metric_id] if args.key?(:metric_id)
          @value = args[:value] if args.key?(:value)
        end
      end
      
      # Request message for ModelService.MergeVersionAliases.
      class GoogleCloudAiplatformV1beta1MergeVersionAliasesRequest
        include Google::Apis::Core::Hashable
      
        # Required. The set of version aliases to merge. The alias should be at most 128
        # characters, and match `a-z`0,126`[a-z-0-9]`. Add the `-` prefix to an alias
        # means removing that alias from the version. `-` is NOT counted in the 128
        # characters. Example: `-golden` means removing the `golden` alias from the
        # version. There is NO ordering in aliases, which means 1) The aliases returned
        # from GetModel API might not have the exactly same order from this
        # MergeVersionAliases API. 2) Adding and deleting the same alias in the request
        # is not recommended, and the 2 operations will be cancelled out.
        # Corresponds to the JSON property `versionAliases`
        # @return [Array<String>]
        attr_accessor :version_aliases
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @version_aliases = args[:version_aliases] if args.key?(:version_aliases)
        end
      end
      
      # Instance of a general MetadataSchema.
      class GoogleCloudAiplatformV1beta1MetadataSchema
        include Google::Apis::Core::Hashable
      
        # Output only. Timestamp when this MetadataSchema was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Description of the Metadata Schema
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor :description
      
        # Output only. The resource name of the MetadataSchema.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Required. The raw YAML string representation of the MetadataSchema. The
        # combination of [MetadataSchema.version] and the schema name given by `title`
        # in [MetadataSchema.schema] must be unique within a MetadataStore. The schema
        # is defined as an OpenAPI 3.0.2 [MetadataSchema Object](https://github.com/OAI/
        # OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject)
        # Corresponds to the JSON property `schema`
        # @return [String]
        attr_accessor :schema
      
        # The type of the MetadataSchema. This is a property that identifies which
        # metadata types will use the MetadataSchema.
        # Corresponds to the JSON property `schemaType`
        # @return [String]
        attr_accessor :schema_type
      
        # The version of the MetadataSchema. The version's format must match the
        # following regular expression: `^[0-9]+.+.+$`, which would allow to order/
        # compare different versions. Example: 1.0.0, 1.0.1, etc.
        # Corresponds to the JSON property `schemaVersion`
        # @return [String]
        attr_accessor :schema_version
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @description = args[:description] if args.key?(:description)
          @name = args[:name] if args.key?(:name)
          @schema = args[:schema] if args.key?(:schema)
          @schema_type = args[:schema_type] if args.key?(:schema_type)
          @schema_version = args[:schema_version] if args.key?(:schema_version)
        end
      end
      
      # Instance of a metadata store. Contains a set of metadata that can be queried.
      class GoogleCloudAiplatformV1beta1MetadataStore
        include Google::Apis::Core::Hashable
      
        # Output only. Timestamp when this MetadataStore was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Description of the MetadataStore.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor :description
      
        # Represents a customer-managed encryption key spec that can be applied to a top-
        # level resource.
        # Corresponds to the JSON property `encryptionSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EncryptionSpec]
        attr_accessor :encryption_spec
      
        # Output only. The resource name of the MetadataStore instance.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Represents state information for a MetadataStore.
        # Corresponds to the JSON property `state`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MetadataStoreMetadataStoreState]
        attr_accessor :state
      
        # Output only. Timestamp when this MetadataStore was last updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @description = args[:description] if args.key?(:description)
          @encryption_spec = args[:encryption_spec] if args.key?(:encryption_spec)
          @name = args[:name] if args.key?(:name)
          @state = args[:state] if args.key?(:state)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # Represents state information for a MetadataStore.
      class GoogleCloudAiplatformV1beta1MetadataStoreMetadataStoreState
        include Google::Apis::Core::Hashable
      
        # The disk utilization of the MetadataStore in bytes.
        # Corresponds to the JSON property `diskUtilizationBytes`
        # @return [Fixnum]
        attr_accessor :disk_utilization_bytes
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @disk_utilization_bytes = args[:disk_utilization_bytes] if args.key?(:disk_utilization_bytes)
        end
      end
      
      # Represents one resource that exists in automl.googleapis.com, datalabeling.
      # googleapis.com or ml.googleapis.com.
      class GoogleCloudAiplatformV1beta1MigratableResource
        include Google::Apis::Core::Hashable
      
        # Represents one Dataset in automl.googleapis.com.
        # Corresponds to the JSON property `automlDataset`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MigratableResourceAutomlDataset]
        attr_accessor :automl_dataset
      
        # Represents one Model in automl.googleapis.com.
        # Corresponds to the JSON property `automlModel`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MigratableResourceAutomlModel]
        attr_accessor :automl_model
      
        # Represents one Dataset in datalabeling.googleapis.com.
        # Corresponds to the JSON property `dataLabelingDataset`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDataset]
        attr_accessor :data_labeling_dataset
      
        # Output only. Timestamp when the last migration attempt on this
        # MigratableResource started. Will not be set if there's no migration attempt on
        # this MigratableResource.
        # Corresponds to the JSON property `lastMigrateTime`
        # @return [String]
        attr_accessor :last_migrate_time
      
        # Output only. Timestamp when this MigratableResource was last updated.
        # Corresponds to the JSON property `lastUpdateTime`
        # @return [String]
        attr_accessor :last_update_time
      
        # Represents one model Version in ml.googleapis.com.
        # Corresponds to the JSON property `mlEngineModelVersion`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MigratableResourceMlEngineModelVersion]
        attr_accessor :ml_engine_model_version
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @automl_dataset = args[:automl_dataset] if args.key?(:automl_dataset)
          @automl_model = args[:automl_model] if args.key?(:automl_model)
          @data_labeling_dataset = args[:data_labeling_dataset] if args.key?(:data_labeling_dataset)
          @last_migrate_time = args[:last_migrate_time] if args.key?(:last_migrate_time)
          @last_update_time = args[:last_update_time] if args.key?(:last_update_time)
          @ml_engine_model_version = args[:ml_engine_model_version] if args.key?(:ml_engine_model_version)
        end
      end
      
      # Represents one Dataset in automl.googleapis.com.
      class GoogleCloudAiplatformV1beta1MigratableResourceAutomlDataset
        include Google::Apis::Core::Hashable
      
        # Full resource name of automl Dataset. Format: `projects/`project`/locations/`
        # location`/datasets/`dataset``.
        # Corresponds to the JSON property `dataset`
        # @return [String]
        attr_accessor :dataset
      
        # The Dataset's display name in automl.googleapis.com.
        # Corresponds to the JSON property `datasetDisplayName`
        # @return [String]
        attr_accessor :dataset_display_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @dataset = args[:dataset] if args.key?(:dataset)
          @dataset_display_name = args[:dataset_display_name] if args.key?(:dataset_display_name)
        end
      end
      
      # Represents one Model in automl.googleapis.com.
      class GoogleCloudAiplatformV1beta1MigratableResourceAutomlModel
        include Google::Apis::Core::Hashable
      
        # Full resource name of automl Model. Format: `projects/`project`/locations/`
        # location`/models/`model``.
        # Corresponds to the JSON property `model`
        # @return [String]
        attr_accessor :model
      
        # The Model's display name in automl.googleapis.com.
        # Corresponds to the JSON property `modelDisplayName`
        # @return [String]
        attr_accessor :model_display_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @model = args[:model] if args.key?(:model)
          @model_display_name = args[:model_display_name] if args.key?(:model_display_name)
        end
      end
      
      # Represents one Dataset in datalabeling.googleapis.com.
      class GoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDataset
        include Google::Apis::Core::Hashable
      
        # The migratable AnnotatedDataset in datalabeling.googleapis.com belongs to the
        # data labeling Dataset.
        # Corresponds to the JSON property `dataLabelingAnnotatedDatasets`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset>]
        attr_accessor :data_labeling_annotated_datasets
      
        # Full resource name of data labeling Dataset. Format: `projects/`project`/
        # datasets/`dataset``.
        # Corresponds to the JSON property `dataset`
        # @return [String]
        attr_accessor :dataset
      
        # The Dataset's display name in datalabeling.googleapis.com.
        # Corresponds to the JSON property `datasetDisplayName`
        # @return [String]
        attr_accessor :dataset_display_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @data_labeling_annotated_datasets = args[:data_labeling_annotated_datasets] if args.key?(:data_labeling_annotated_datasets)
          @dataset = args[:dataset] if args.key?(:dataset)
          @dataset_display_name = args[:dataset_display_name] if args.key?(:dataset_display_name)
        end
      end
      
      # Represents one AnnotatedDataset in datalabeling.googleapis.com.
      class GoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDatasetDataLabelingAnnotatedDataset
        include Google::Apis::Core::Hashable
      
        # Full resource name of data labeling AnnotatedDataset. Format: `projects/`
        # project`/datasets/`dataset`/annotatedDatasets/`annotated_dataset``.
        # Corresponds to the JSON property `annotatedDataset`
        # @return [String]
        attr_accessor :annotated_dataset
      
        # The AnnotatedDataset's display name in datalabeling.googleapis.com.
        # Corresponds to the JSON property `annotatedDatasetDisplayName`
        # @return [String]
        attr_accessor :annotated_dataset_display_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotated_dataset = args[:annotated_dataset] if args.key?(:annotated_dataset)
          @annotated_dataset_display_name = args[:annotated_dataset_display_name] if args.key?(:annotated_dataset_display_name)
        end
      end
      
      # Represents one model Version in ml.googleapis.com.
      class GoogleCloudAiplatformV1beta1MigratableResourceMlEngineModelVersion
        include Google::Apis::Core::Hashable
      
        # The ml.googleapis.com endpoint that this model Version currently lives in.
        # Example values: * ml.googleapis.com * us-centrall-ml.googleapis.com * europe-
        # west4-ml.googleapis.com * asia-east1-ml.googleapis.com
        # Corresponds to the JSON property `endpoint`
        # @return [String]
        attr_accessor :endpoint
      
        # Full resource name of ml engine model Version. Format: `projects/`project`/
        # models/`model`/versions/`version``.
        # Corresponds to the JSON property `version`
        # @return [String]
        attr_accessor :version
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @endpoint = args[:endpoint] if args.key?(:endpoint)
          @version = args[:version] if args.key?(:version)
        end
      end
      
      # Config of migrating one resource from automl.googleapis.com, datalabeling.
      # googleapis.com and ml.googleapis.com to Vertex AI.
      class GoogleCloudAiplatformV1beta1MigrateResourceRequest
        include Google::Apis::Core::Hashable
      
        # Config for migrating Dataset in automl.googleapis.com to Vertex AI's Dataset.
        # Corresponds to the JSON property `migrateAutomlDatasetConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlDatasetConfig]
        attr_accessor :migrate_automl_dataset_config
      
        # Config for migrating Model in automl.googleapis.com to Vertex AI's Model.
        # Corresponds to the JSON property `migrateAutomlModelConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlModelConfig]
        attr_accessor :migrate_automl_model_config
      
        # Config for migrating Dataset in datalabeling.googleapis.com to Vertex AI's
        # Dataset.
        # Corresponds to the JSON property `migrateDataLabelingDatasetConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfig]
        attr_accessor :migrate_data_labeling_dataset_config
      
        # Config for migrating version in ml.googleapis.com to Vertex AI's Model.
        # Corresponds to the JSON property `migrateMlEngineModelVersionConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateMlEngineModelVersionConfig]
        attr_accessor :migrate_ml_engine_model_version_config
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @migrate_automl_dataset_config = args[:migrate_automl_dataset_config] if args.key?(:migrate_automl_dataset_config)
          @migrate_automl_model_config = args[:migrate_automl_model_config] if args.key?(:migrate_automl_model_config)
          @migrate_data_labeling_dataset_config = args[:migrate_data_labeling_dataset_config] if args.key?(:migrate_data_labeling_dataset_config)
          @migrate_ml_engine_model_version_config = args[:migrate_ml_engine_model_version_config] if args.key?(:migrate_ml_engine_model_version_config)
        end
      end
      
      # Config for migrating Dataset in automl.googleapis.com to Vertex AI's Dataset.
      class GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlDatasetConfig
        include Google::Apis::Core::Hashable
      
        # Required. Full resource name of automl Dataset. Format: `projects/`project`/
        # locations/`location`/datasets/`dataset``.
        # Corresponds to the JSON property `dataset`
        # @return [String]
        attr_accessor :dataset
      
        # Required. Display name of the Dataset in Vertex AI. System will pick a display
        # name if unspecified.
        # Corresponds to the JSON property `datasetDisplayName`
        # @return [String]
        attr_accessor :dataset_display_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @dataset = args[:dataset] if args.key?(:dataset)
          @dataset_display_name = args[:dataset_display_name] if args.key?(:dataset_display_name)
        end
      end
      
      # Config for migrating Model in automl.googleapis.com to Vertex AI's Model.
      class GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlModelConfig
        include Google::Apis::Core::Hashable
      
        # Required. Full resource name of automl Model. Format: `projects/`project`/
        # locations/`location`/models/`model``.
        # Corresponds to the JSON property `model`
        # @return [String]
        attr_accessor :model
      
        # Optional. Display name of the model in Vertex AI. System will pick a display
        # name if unspecified.
        # Corresponds to the JSON property `modelDisplayName`
        # @return [String]
        attr_accessor :model_display_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @model = args[:model] if args.key?(:model)
          @model_display_name = args[:model_display_name] if args.key?(:model_display_name)
        end
      end
      
      # Config for migrating Dataset in datalabeling.googleapis.com to Vertex AI's
      # Dataset.
      class GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfig
        include Google::Apis::Core::Hashable
      
        # Required. Full resource name of data labeling Dataset. Format: `projects/`
        # project`/datasets/`dataset``.
        # Corresponds to the JSON property `dataset`
        # @return [String]
        attr_accessor :dataset
      
        # Optional. Display name of the Dataset in Vertex AI. System will pick a display
        # name if unspecified.
        # Corresponds to the JSON property `datasetDisplayName`
        # @return [String]
        attr_accessor :dataset_display_name
      
        # Optional. Configs for migrating AnnotatedDataset in datalabeling.googleapis.
        # com to Vertex AI's SavedQuery. The specified AnnotatedDatasets have to belong
        # to the datalabeling Dataset.
        # Corresponds to the JSON property `migrateDataLabelingAnnotatedDatasetConfigs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig>]
        attr_accessor :migrate_data_labeling_annotated_dataset_configs
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @dataset = args[:dataset] if args.key?(:dataset)
          @dataset_display_name = args[:dataset_display_name] if args.key?(:dataset_display_name)
          @migrate_data_labeling_annotated_dataset_configs = args[:migrate_data_labeling_annotated_dataset_configs] if args.key?(:migrate_data_labeling_annotated_dataset_configs)
        end
      end
      
      # Config for migrating AnnotatedDataset in datalabeling.googleapis.com to Vertex
      # AI's SavedQuery.
      class GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfigMigrateDataLabelingAnnotatedDatasetConfig
        include Google::Apis::Core::Hashable
      
        # Required. Full resource name of data labeling AnnotatedDataset. Format: `
        # projects/`project`/datasets/`dataset`/annotatedDatasets/`annotated_dataset``.
        # Corresponds to the JSON property `annotatedDataset`
        # @return [String]
        attr_accessor :annotated_dataset
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotated_dataset = args[:annotated_dataset] if args.key?(:annotated_dataset)
        end
      end
      
      # Config for migrating version in ml.googleapis.com to Vertex AI's Model.
      class GoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateMlEngineModelVersionConfig
        include Google::Apis::Core::Hashable
      
        # Required. The ml.googleapis.com endpoint that this model version should be
        # migrated from. Example values: * ml.googleapis.com * us-centrall-ml.googleapis.
        # com * europe-west4-ml.googleapis.com * asia-east1-ml.googleapis.com
        # Corresponds to the JSON property `endpoint`
        # @return [String]
        attr_accessor :endpoint
      
        # Required. Display name of the model in Vertex AI. System will pick a display
        # name if unspecified.
        # Corresponds to the JSON property `modelDisplayName`
        # @return [String]
        attr_accessor :model_display_name
      
        # Required. Full resource name of ml engine model version. Format: `projects/`
        # project`/models/`model`/versions/`version``.
        # Corresponds to the JSON property `modelVersion`
        # @return [String]
        attr_accessor :model_version
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @endpoint = args[:endpoint] if args.key?(:endpoint)
          @model_display_name = args[:model_display_name] if args.key?(:model_display_name)
          @model_version = args[:model_version] if args.key?(:model_version)
        end
      end
      
      # Describes a successfully migrated resource.
      class GoogleCloudAiplatformV1beta1MigrateResourceResponse
        include Google::Apis::Core::Hashable
      
        # Migrated Dataset's resource name.
        # Corresponds to the JSON property `dataset`
        # @return [String]
        attr_accessor :dataset
      
        # Represents one resource that exists in automl.googleapis.com, datalabeling.
        # googleapis.com or ml.googleapis.com.
        # Corresponds to the JSON property `migratableResource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MigratableResource]
        attr_accessor :migratable_resource
      
        # Migrated Model's resource name.
        # Corresponds to the JSON property `model`
        # @return [String]
        attr_accessor :model
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @dataset = args[:dataset] if args.key?(:dataset)
          @migratable_resource = args[:migratable_resource] if args.key?(:migratable_resource)
          @model = args[:model] if args.key?(:model)
        end
      end
      
      # A trained machine learning Model.
      class GoogleCloudAiplatformV1beta1Model
        include Google::Apis::Core::Hashable
      
        # Immutable. The path to the directory containing the Model artifact and any of
        # its supporting files. Not present for AutoML Models or Large Models.
        # Corresponds to the JSON property `artifactUri`
        # @return [String]
        attr_accessor :artifact_uri
      
        # Specification of a container for serving predictions. Some fields in this
        # message correspond to fields in the [Kubernetes Container v1 core
        # specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/
        # v1.23/#container-v1-core).
        # Corresponds to the JSON property `containerSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelContainerSpec]
        attr_accessor :container_spec
      
        # Output only. Timestamp when this Model was uploaded into Vertex AI.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Output only. The pointers to DeployedModels created from this Model. Note that
        # Model could have been deployed to Endpoints in different Locations.
        # Corresponds to the JSON property `deployedModels`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DeployedModelRef>]
        attr_accessor :deployed_models
      
        # The description of the Model.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor :description
      
        # Required. The display name of the Model. The name can be up to 128 characters
        # long and can consist of any UTF-8 characters.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Represents a customer-managed encryption key spec that can be applied to a top-
        # level resource.
        # Corresponds to the JSON property `encryptionSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EncryptionSpec]
        attr_accessor :encryption_spec
      
        # Used to perform consistent read-modify-write updates. If not set, a blind "
        # overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # Specification of Model explanation.
        # Corresponds to the JSON property `explanationSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExplanationSpec]
        attr_accessor :explanation_spec
      
        # Used to specify the source of the Model Garden model or Genie models. Only
        # present for models created or tuned from Model Garden and Genie.
        # Corresponds to the JSON property `generatedModelSource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelGeneratedModelSource]
        attr_accessor :generated_model_source
      
        # The labels with user-defined metadata to organize your Models. Label keys and
        # values can be no longer than 64 characters (Unicode codepoints), can only
        # contain lowercase letters, numeric characters, underscores and dashes.
        # International characters are allowed. See https://goo.gl/xmQnxf for more
        # information and examples of labels.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Immutable. An additional information about the Model; the schema of the
        # metadata can be found in metadata_schema. Unset if the Model does not have any
        # additional information.
        # Corresponds to the JSON property `metadata`
        # @return [Object]
        attr_accessor :metadata
      
        # Output only. The resource name of the Artifact that was created in
        # MetadataStore when creating the Model. The Artifact resource name pattern is `
        # projects/`project`/locations/`location`/metadataStores/`metadata_store`/
        # artifacts/`artifact``.
        # Corresponds to the JSON property `metadataArtifact`
        # @return [String]
        attr_accessor :metadata_artifact
      
        # Immutable. Points to a YAML file stored on Google Cloud Storage describing
        # additional information about the Model, that is specific to it. Unset if the
        # Model does not have any additional information. The schema is defined as an
        # OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/
        # blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this
        # field populated by Vertex AI, if no additional metadata is needed, this field
        # is set to an empty string. Note: The URI given on output will be immutable and
        # probably different, including the URI scheme, than the one given on input. The
        # output URI will point to a location where the user only has a read access.
        # Corresponds to the JSON property `metadataSchemaUri`
        # @return [String]
        attr_accessor :metadata_schema_uri
      
        # Detail description of the source information of the model.
        # Corresponds to the JSON property `modelSourceInfo`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelSourceInfo]
        attr_accessor :model_source_info
      
        # The resource name of the Model.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Contains information about the original Model if this Model is a copy.
        # Corresponds to the JSON property `originalModelInfo`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelOriginalModelInfo]
        attr_accessor :original_model_info
      
        # Contains the schemata used in Model's predictions and explanations via
        # PredictionService.Predict, PredictionService.Explain and BatchPredictionJob.
        # Corresponds to the JSON property `predictSchemata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PredictSchemata]
        attr_accessor :predict_schemata
      
        # Output only. When this Model is deployed, its prediction resources are
        # described by the `prediction_resources` field of the Endpoint.deployed_models
        # object. Because not all Models support all resource configuration types, the
        # configuration types this Model supports are listed here. If no configuration
        # types are listed, the Model cannot be deployed to an Endpoint and does not
        # support online predictions (PredictionService.Predict or PredictionService.
        # Explain). Such a Model can serve predictions by using a BatchPredictionJob, if
        # it has at least one entry each in supported_input_storage_formats and
        # supported_output_storage_formats.
        # Corresponds to the JSON property `supportedDeploymentResourcesTypes`
        # @return [Array<String>]
        attr_accessor :supported_deployment_resources_types
      
        # Output only. The formats in which this Model may be exported. If empty, this
        # Model is not available for export.
        # Corresponds to the JSON property `supportedExportFormats`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelExportFormat>]
        attr_accessor :supported_export_formats
      
        # Output only. The formats this Model supports in BatchPredictionJob.
        # input_config. If PredictSchemata.instance_schema_uri exists, the instances
        # should be given as per that schema. The possible formats are: * `jsonl` The
        # JSON Lines format, where each instance is a single line. Uses GcsSource. * `
        # csv` The CSV format, where each instance is a single comma-separated line. The
        # first line in the file is the header, containing comma-separated field names.
        # Uses GcsSource. * `tf-record` The TFRecord format, where each instance is a
        # single record in tfrecord syntax. Uses GcsSource. * `tf-record-gzip` Similar
        # to `tf-record`, but the file is gzipped. Uses GcsSource. * `bigquery` Each
        # instance is a single row in BigQuery. Uses BigQuerySource. * `file-list` Each
        # line of the file is the location of an instance to process, uses `gcs_source`
        # field of the InputConfig object. If this Model doesn't support any of these
        # formats it means it cannot be used with a BatchPredictionJob. However, if it
        # has supported_deployment_resources_types, it could serve online predictions by
        # using PredictionService.Predict or PredictionService.Explain.
        # Corresponds to the JSON property `supportedInputStorageFormats`
        # @return [Array<String>]
        attr_accessor :supported_input_storage_formats
      
        # Output only. The formats this Model supports in BatchPredictionJob.
        # output_config. If both PredictSchemata.instance_schema_uri and PredictSchemata.
        # prediction_schema_uri exist, the predictions are returned together with their
        # instances. In other words, the prediction has the original instance data first,
        # followed by the actual prediction content (as per the schema). The possible
        # formats are: * `jsonl` The JSON Lines format, where each prediction is a
        # single line. Uses GcsDestination. * `csv` The CSV format, where each
        # prediction is a single comma-separated line. The first line in the file is the
        # header, containing comma-separated field names. Uses GcsDestination. * `
        # bigquery` Each prediction is a single row in a BigQuery table, uses
        # BigQueryDestination . If this Model doesn't support any of these formats it
        # means it cannot be used with a BatchPredictionJob. However, if it has
        # supported_deployment_resources_types, it could serve online predictions by
        # using PredictionService.Predict or PredictionService.Explain.
        # Corresponds to the JSON property `supportedOutputStorageFormats`
        # @return [Array<String>]
        attr_accessor :supported_output_storage_formats
      
        # Output only. The resource name of the TrainingPipeline that uploaded this
        # Model, if any.
        # Corresponds to the JSON property `trainingPipeline`
        # @return [String]
        attr_accessor :training_pipeline
      
        # Output only. Timestamp when this Model was most recently updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        # User provided version aliases so that a model version can be referenced via
        # alias (i.e. `projects/`project`/locations/`location`/models/`model_id`@`
        # version_alias`` instead of auto-generated version id (i.e. `projects/`project`/
        # locations/`location`/models/`model_id`@`version_id`)`. The format is a-z`0,126`
        # [a-z0-9] to distinguish from version_id. A default version alias will be
        # created for the first version of the model, and there must be exactly one
        # default version alias for a model.
        # Corresponds to the JSON property `versionAliases`
        # @return [Array<String>]
        attr_accessor :version_aliases
      
        # Output only. Timestamp when this version was created.
        # Corresponds to the JSON property `versionCreateTime`
        # @return [String]
        attr_accessor :version_create_time
      
        # The description of this version.
        # Corresponds to the JSON property `versionDescription`
        # @return [String]
        attr_accessor :version_description
      
        # Output only. Immutable. The version ID of the model. A new version is
        # committed when a new model version is uploaded or trained under an existing
        # model id. It is an auto-incrementing decimal number in string representation.
        # Corresponds to the JSON property `versionId`
        # @return [String]
        attr_accessor :version_id
      
        # Output only. Timestamp when this version was most recently updated.
        # Corresponds to the JSON property `versionUpdateTime`
        # @return [String]
        attr_accessor :version_update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @artifact_uri = args[:artifact_uri] if args.key?(:artifact_uri)
          @container_spec = args[:container_spec] if args.key?(:container_spec)
          @create_time = args[:create_time] if args.key?(:create_time)
          @deployed_models = args[:deployed_models] if args.key?(:deployed_models)
          @description = args[:description] if args.key?(:description)
          @display_name = args[:display_name] if args.key?(:display_name)
          @encryption_spec = args[:encryption_spec] if args.key?(:encryption_spec)
          @etag = args[:etag] if args.key?(:etag)
          @explanation_spec = args[:explanation_spec] if args.key?(:explanation_spec)
          @generated_model_source = args[:generated_model_source] if args.key?(:generated_model_source)
          @labels = args[:labels] if args.key?(:labels)
          @metadata = args[:metadata] if args.key?(:metadata)
          @metadata_artifact = args[:metadata_artifact] if args.key?(:metadata_artifact)
          @metadata_schema_uri = args[:metadata_schema_uri] if args.key?(:metadata_schema_uri)
          @model_source_info = args[:model_source_info] if args.key?(:model_source_info)
          @name = args[:name] if args.key?(:name)
          @original_model_info = args[:original_model_info] if args.key?(:original_model_info)
          @predict_schemata = args[:predict_schemata] if args.key?(:predict_schemata)
          @supported_deployment_resources_types = args[:supported_deployment_resources_types] if args.key?(:supported_deployment_resources_types)
          @supported_export_formats = args[:supported_export_formats] if args.key?(:supported_export_formats)
          @supported_input_storage_formats = args[:supported_input_storage_formats] if args.key?(:supported_input_storage_formats)
          @supported_output_storage_formats = args[:supported_output_storage_formats] if args.key?(:supported_output_storage_formats)
          @training_pipeline = args[:training_pipeline] if args.key?(:training_pipeline)
          @update_time = args[:update_time] if args.key?(:update_time)
          @version_aliases = args[:version_aliases] if args.key?(:version_aliases)
          @version_create_time = args[:version_create_time] if args.key?(:version_create_time)
          @version_description = args[:version_description] if args.key?(:version_description)
          @version_id = args[:version_id] if args.key?(:version_id)
          @version_update_time = args[:version_update_time] if args.key?(:version_update_time)
        end
      end
      
      # Specification of a container for serving predictions. Some fields in this
      # message correspond to fields in the [Kubernetes Container v1 core
      # specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/
      # v1.23/#container-v1-core).
      class GoogleCloudAiplatformV1beta1ModelContainerSpec
        include Google::Apis::Core::Hashable
      
        # Immutable. Specifies arguments for the command that runs when the container
        # starts. This overrides the container's [`CMD`](https://docs.docker.com/engine/
        # reference/builder/#cmd). Specify this field as an array of executable and
        # arguments, similar to a Docker `CMD`'s "default parameters" form. If you don't
        # specify this field but do specify the command field, then the command from the
        # `command` field runs without any additional arguments. See the [Kubernetes
        # documentation about how the `command` and `args` fields interact with a
        # container's `ENTRYPOINT` and `CMD`](https://kubernetes.io/docs/tasks/inject-
        # data-application/define-command-argument-container/#notes). If you don't
        # specify this field and don't specify the `command` field, then the container's
        # [`ENTRYPOINT`](https://docs.docker.com/engine/reference/builder/#cmd) and `CMD`
        # determine what runs based on their default behavior. See the Docker
        # documentation about [how `CMD` and `ENTRYPOINT` interact](https://docs.docker.
        # com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact). In
        # this field, you can reference [environment variables set by Vertex AI](https://
        # cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-
        # variables) and environment variables set in the env field. You cannot
        # reference environment variables set in the Docker image. In order for
        # environment variables to be expanded, reference them by using the following
        # syntax: $( VARIABLE_NAME) Note that this differs from Bash variable expansion,
        # which does not use parentheses. If a variable cannot be resolved, the
        # reference in the input string is used unchanged. To avoid variable expansion,
        # you can escape this syntax with `$$`; for example: $$(VARIABLE_NAME) This
        # field corresponds to the `args` field of the Kubernetes Containers [v1 core
        # API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#
        # container-v1-core).
        # Corresponds to the JSON property `args`
        # @return [Array<String>]
        attr_accessor :args
      
        # Immutable. Specifies the command that runs when the container starts. This
        # overrides the container's [ENTRYPOINT](https://docs.docker.com/engine/
        # reference/builder/#entrypoint). Specify this field as an array of executable
        # and arguments, similar to a Docker `ENTRYPOINT`'s "exec" form, not its "shell"
        # form. If you do not specify this field, then the container's `ENTRYPOINT` runs,
        # in conjunction with the args field or the container's [`CMD`](https://docs.
        # docker.com/engine/reference/builder/#cmd), if either exists. If this field is
        # not specified and the container does not have an `ENTRYPOINT`, then refer to
        # the Docker documentation about [how `CMD` and `ENTRYPOINT` interact](https://
        # docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-
        # interact). If you specify this field, then you can also specify the `args`
        # field to provide additional arguments for this command. However, if you
        # specify this field, then the container's `CMD` is ignored. See the [Kubernetes
        # documentation about how the `command` and `args` fields interact with a
        # container's `ENTRYPOINT` and `CMD`](https://kubernetes.io/docs/tasks/inject-
        # data-application/define-command-argument-container/#notes). In this field, you
        # can reference [environment variables set by Vertex AI](https://cloud.google.
        # com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables)
        # and environment variables set in the env field. You cannot reference
        # environment variables set in the Docker image. In order for environment
        # variables to be expanded, reference them by using the following syntax: $(
        # VARIABLE_NAME) Note that this differs from Bash variable expansion, which does
        # not use parentheses. If a variable cannot be resolved, the reference in the
        # input string is used unchanged. To avoid variable expansion, you can escape
        # this syntax with `$$`; for example: $$(VARIABLE_NAME) This field corresponds
        # to the `command` field of the Kubernetes Containers [v1 core API](https://
        # kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core)
        # .
        # Corresponds to the JSON property `command`
        # @return [Array<String>]
        attr_accessor :command
      
        # Immutable. List of environment variables to set in the container. After the
        # container starts running, code running in the container can read these
        # environment variables. Additionally, the command and args fields can reference
        # these variables. Later entries in this list can also reference earlier entries.
        # For example, the following example sets the variable `VAR_2` to have the
        # value `foo bar`: ```json [ ` "name": "VAR_1", "value": "foo" `, ` "name": "
        # VAR_2", "value": "$(VAR_1) bar" ` ] ``` If you switch the order of the
        # variables in the example, then the expansion does not occur. This field
        # corresponds to the `env` field of the Kubernetes Containers [v1 core API](
        # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-
        # v1-core).
        # Corresponds to the JSON property `env`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EnvVar>]
        attr_accessor :env
      
        # Immutable. HTTP path on the container to send health checks to. Vertex AI
        # intermittently sends GET requests to this path on the container's IP address
        # and port to check that the container is healthy. Read more about [health
        # checks](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-
        # requirements#health). For example, if you set this field to `/bar`, then
        # Vertex AI intermittently sends a GET request to the `/bar` path on the port of
        # your container specified by the first value of this `ModelContainerSpec`'s
        # ports field. If you don't specify this field, it defaults to the following
        # value when you deploy this Model to an Endpoint: /v1/endpoints/ENDPOINT/
        # deployedModels/ DEPLOYED_MODEL:predict The placeholders in this value are
        # replaced as follows: * ENDPOINT: The last segment (following `endpoints/`)of
        # the Endpoint.name][] field of the Endpoint where this Model has been deployed.
        # (Vertex AI makes this value available to your container code as the [`
        # AIP_ENDPOINT_ID` environment variable](https://cloud.google.com/vertex-ai/docs/
        # predictions/custom-container-requirements#aip-variables).) * DEPLOYED_MODEL:
        # DeployedModel.id of the `DeployedModel`. (Vertex AI makes this value available
        # to your container code as the [`AIP_DEPLOYED_MODEL_ID` environment variable](
        # https://cloud.google.com/vertex-ai/docs/predictions/custom-container-
        # requirements#aip-variables).)
        # Corresponds to the JSON property `healthRoute`
        # @return [String]
        attr_accessor :health_route
      
        # Required. Immutable. URI of the Docker image to be used as the custom
        # container for serving predictions. This URI must identify an image in Artifact
        # Registry or Container Registry. Learn more about the [container publishing
        # requirements](https://cloud.google.com/vertex-ai/docs/predictions/custom-
        # container-requirements#publishing), including permissions requirements for the
        # Vertex AI Service Agent. The container image is ingested upon ModelService.
        # UploadModel, stored internally, and this original path is afterwards not used.
        # To learn about the requirements for the Docker image itself, see [Custom
        # container requirements](https://cloud.google.com/vertex-ai/docs/predictions/
        # custom-container-requirements#). You can use the URI to one of Vertex AI's [
        # pre-built container images for prediction](https://cloud.google.com/vertex-ai/
        # docs/predictions/pre-built-containers) in this field.
        # Corresponds to the JSON property `imageUri`
        # @return [String]
        attr_accessor :image_uri
      
        # Immutable. List of ports to expose from the container. Vertex AI sends any
        # prediction requests that it receives to the first port on this list. Vertex AI
        # also sends [liveness and health checks](https://cloud.google.com/vertex-ai/
        # docs/predictions/custom-container-requirements#liveness) to this port. If you
        # do not specify this field, it defaults to following value: ```json [ ` "
        # containerPort": 8080 ` ] ``` Vertex AI does not use ports other than the first
        # one listed. This field corresponds to the `ports` field of the Kubernetes
        # Containers [v1 core API](https://kubernetes.io/docs/reference/generated/
        # kubernetes-api/v1.23/#container-v1-core).
        # Corresponds to the JSON property `ports`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Port>]
        attr_accessor :ports
      
        # Immutable. HTTP path on the container to send prediction requests to. Vertex
        # AI forwards requests sent using projects.locations.endpoints.predict to this
        # path on the container's IP address and port. Vertex AI then returns the
        # container's response in the API response. For example, if you set this field
        # to `/foo`, then when Vertex AI receives a prediction request, it forwards the
        # request body in a POST request to the `/foo` path on the port of your
        # container specified by the first value of this `ModelContainerSpec`'s ports
        # field. If you don't specify this field, it defaults to the following value
        # when you deploy this Model to an Endpoint: /v1/endpoints/ENDPOINT/
        # deployedModels/DEPLOYED_MODEL:predict The placeholders in this value are
        # replaced as follows: * ENDPOINT: The last segment (following `endpoints/`)of
        # the Endpoint.name][] field of the Endpoint where this Model has been deployed.
        # (Vertex AI makes this value available to your container code as the [`
        # AIP_ENDPOINT_ID` environment variable](https://cloud.google.com/vertex-ai/docs/
        # predictions/custom-container-requirements#aip-variables).) * DEPLOYED_MODEL:
        # DeployedModel.id of the `DeployedModel`. (Vertex AI makes this value available
        # to your container code as the [`AIP_DEPLOYED_MODEL_ID` environment variable](
        # https://cloud.google.com/vertex-ai/docs/predictions/custom-container-
        # requirements#aip-variables).)
        # Corresponds to the JSON property `predictRoute`
        # @return [String]
        attr_accessor :predict_route
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @args = args[:args] if args.key?(:args)
          @command = args[:command] if args.key?(:command)
          @env = args[:env] if args.key?(:env)
          @health_route = args[:health_route] if args.key?(:health_route)
          @image_uri = args[:image_uri] if args.key?(:image_uri)
          @ports = args[:ports] if args.key?(:ports)
          @predict_route = args[:predict_route] if args.key?(:predict_route)
        end
      end
      
      # ModelDeploymentMonitoringBigQueryTable specifies the BigQuery table name as
      # well as some information of the logs stored in this table.
      class GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable
        include Google::Apis::Core::Hashable
      
        # The created BigQuery table to store logs. Customer could do their own query &
        # analysis. Format: `bq://.model_deployment_monitoring_._`
        # Corresponds to the JSON property `bigqueryTablePath`
        # @return [String]
        attr_accessor :bigquery_table_path
      
        # The source of log.
        # Corresponds to the JSON property `logSource`
        # @return [String]
        attr_accessor :log_source
      
        # The type of log.
        # Corresponds to the JSON property `logType`
        # @return [String]
        attr_accessor :log_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bigquery_table_path = args[:bigquery_table_path] if args.key?(:bigquery_table_path)
          @log_source = args[:log_source] if args.key?(:log_source)
          @log_type = args[:log_type] if args.key?(:log_type)
        end
      end
      
      # Represents a job that runs periodically to monitor the deployed models in an
      # endpoint. It will analyze the logged training & prediction data to detect any
      # abnormal behaviors.
      class GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob
        include Google::Apis::Core::Hashable
      
        # YAML schema file uri describing the format of a single instance that you want
        # Tensorflow Data Validation (TFDV) to analyze. If this field is empty, all the
        # feature data types are inferred from predict_instance_schema_uri, meaning that
        # TFDV will use the data in the exact format(data type) as prediction request/
        # response. If there are any data type differences between predict instance and
        # TFDV instance, this field can be used to override the schema. For models
        # trained with Vertex AI, this field must be set as all the fields in predict
        # instance formatted as string.
        # Corresponds to the JSON property `analysisInstanceSchemaUri`
        # @return [String]
        attr_accessor :analysis_instance_schema_uri
      
        # Output only. The created bigquery tables for the job under customer project.
        # Customer could do their own query & analysis. There could be 4 log tables in
        # maximum: 1. Training data logging predict request/response 2. Serving data
        # logging predict request/response
        # Corresponds to the JSON property `bigqueryTables`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable>]
        attr_accessor :bigquery_tables
      
        # Output only. Timestamp when this ModelDeploymentMonitoringJob was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Required. The user-defined name of the ModelDeploymentMonitoringJob. The name
        # can be up to 128 characters long and can consist of any UTF-8 characters.
        # Display name of a ModelDeploymentMonitoringJob.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # If true, the scheduled monitoring pipeline logs are sent to Google Cloud
        # Logging, including pipeline status and anomalies detected. Please note the
        # logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.
        # google.com/logging#pricing).
        # Corresponds to the JSON property `enableMonitoringPipelineLogs`
        # @return [Boolean]
        attr_accessor :enable_monitoring_pipeline_logs
        alias_method :enable_monitoring_pipeline_logs?, :enable_monitoring_pipeline_logs
      
        # Represents a customer-managed encryption key spec that can be applied to a top-
        # level resource.
        # Corresponds to the JSON property `encryptionSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EncryptionSpec]
        attr_accessor :encryption_spec
      
        # Required. Endpoint resource name. Format: `projects/`project`/locations/`
        # location`/endpoints/`endpoint``
        # Corresponds to the JSON property `endpoint`
        # @return [String]
        attr_accessor :endpoint
      
        # The `Status` type defines a logical error model that is suitable for different
        # programming environments, including REST APIs and RPC APIs. It is used by [
        # gRPC](https://github.com/grpc). Each `Status` message contains three pieces of
        # data: error code, error message, and error details. You can find out more
        # about this error model and how to work with it in the [API Design Guide](https:
        # //cloud.google.com/apis/design/errors).
        # Corresponds to the JSON property `error`
        # @return [Google::Apis::AiplatformV1beta1::GoogleRpcStatus]
        attr_accessor :error
      
        # The labels with user-defined metadata to organize your
        # ModelDeploymentMonitoringJob. Label keys and values can be no longer than 64
        # characters (Unicode codepoints), can only contain lowercase letters, numeric
        # characters, underscores and dashes. International characters are allowed. See
        # https://goo.gl/xmQnxf for more information and examples of labels.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # All metadata of most recent monitoring pipelines.
        # Corresponds to the JSON property `latestMonitoringPipelineMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata]
        attr_accessor :latest_monitoring_pipeline_metadata
      
        # The TTL of BigQuery tables in user projects which stores logs. A day is the
        # basic unit of the TTL and we take the ceil of TTL/86400(a day). e.g. ` second:
        # 3600` indicates ttl = 1 day.
        # Corresponds to the JSON property `logTtl`
        # @return [String]
        attr_accessor :log_ttl
      
        # Sampling Strategy for logging, can be for both training and prediction dataset.
        # Corresponds to the JSON property `loggingSamplingStrategy`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SamplingStrategy]
        attr_accessor :logging_sampling_strategy
      
        # Required. The config for monitoring objectives. This is a per DeployedModel
        # config. Each DeployedModel needs to be configured separately.
        # Corresponds to the JSON property `modelDeploymentMonitoringObjectiveConfigs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfig>]
        attr_accessor :model_deployment_monitoring_objective_configs
      
        # The config for scheduling monitoring job.
        # Corresponds to the JSON property `modelDeploymentMonitoringScheduleConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig]
        attr_accessor :model_deployment_monitoring_schedule_config
      
        # Alert config for model monitoring.
        # Corresponds to the JSON property `modelMonitoringAlertConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig]
        attr_accessor :model_monitoring_alert_config
      
        # Output only. Resource name of a ModelDeploymentMonitoringJob.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Output only. Timestamp when this monitoring pipeline will be scheduled to run
        # for the next round.
        # Corresponds to the JSON property `nextScheduleTime`
        # @return [String]
        attr_accessor :next_schedule_time
      
        # YAML schema file uri describing the format of a single instance, which are
        # given to format this Endpoint's prediction (and explanation). If not set, we
        # will generate predict schema from collected predict requests.
        # Corresponds to the JSON property `predictInstanceSchemaUri`
        # @return [String]
        attr_accessor :predict_instance_schema_uri
      
        # Sample Predict instance, same format as PredictRequest.instances, this can be
        # set as a replacement of ModelDeploymentMonitoringJob.
        # predict_instance_schema_uri. If not set, we will generate predict schema from
        # collected predict requests.
        # Corresponds to the JSON property `samplePredictInstance`
        # @return [Object]
        attr_accessor :sample_predict_instance
      
        # Output only. Schedule state when the monitoring job is in Running state.
        # Corresponds to the JSON property `scheduleState`
        # @return [String]
        attr_accessor :schedule_state
      
        # Output only. The detailed state of the monitoring job. When the job is still
        # creating, the state will be 'PENDING'. Once the job is successfully created,
        # the state will be 'RUNNING'. Pause the job, the state will be 'PAUSED'. Resume
        # the job, the state will return to 'RUNNING'.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor :state
      
        # The Google Cloud Storage location where the output is to be written to.
        # Corresponds to the JSON property `statsAnomaliesBaseDirectory`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GcsDestination]
        attr_accessor :stats_anomalies_base_directory
      
        # Output only. Timestamp when this ModelDeploymentMonitoringJob was updated most
        # recently.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @analysis_instance_schema_uri = args[:analysis_instance_schema_uri] if args.key?(:analysis_instance_schema_uri)
          @bigquery_tables = args[:bigquery_tables] if args.key?(:bigquery_tables)
          @create_time = args[:create_time] if args.key?(:create_time)
          @display_name = args[:display_name] if args.key?(:display_name)
          @enable_monitoring_pipeline_logs = args[:enable_monitoring_pipeline_logs] if args.key?(:enable_monitoring_pipeline_logs)
          @encryption_spec = args[:encryption_spec] if args.key?(:encryption_spec)
          @endpoint = args[:endpoint] if args.key?(:endpoint)
          @error = args[:error] if args.key?(:error)
          @labels = args[:labels] if args.key?(:labels)
          @latest_monitoring_pipeline_metadata = args[:latest_monitoring_pipeline_metadata] if args.key?(:latest_monitoring_pipeline_metadata)
          @log_ttl = args[:log_ttl] if args.key?(:log_ttl)
          @logging_sampling_strategy = args[:logging_sampling_strategy] if args.key?(:logging_sampling_strategy)
          @model_deployment_monitoring_objective_configs = args[:model_deployment_monitoring_objective_configs] if args.key?(:model_deployment_monitoring_objective_configs)
          @model_deployment_monitoring_schedule_config = args[:model_deployment_monitoring_schedule_config] if args.key?(:model_deployment_monitoring_schedule_config)
          @model_monitoring_alert_config = args[:model_monitoring_alert_config] if args.key?(:model_monitoring_alert_config)
          @name = args[:name] if args.key?(:name)
          @next_schedule_time = args[:next_schedule_time] if args.key?(:next_schedule_time)
          @predict_instance_schema_uri = args[:predict_instance_schema_uri] if args.key?(:predict_instance_schema_uri)
          @sample_predict_instance = args[:sample_predict_instance] if args.key?(:sample_predict_instance)
          @schedule_state = args[:schedule_state] if args.key?(:schedule_state)
          @state = args[:state] if args.key?(:state)
          @stats_anomalies_base_directory = args[:stats_anomalies_base_directory] if args.key?(:stats_anomalies_base_directory)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # All metadata of most recent monitoring pipelines.
      class GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata
        include Google::Apis::Core::Hashable
      
        # The time that most recent monitoring pipelines that is related to this run.
        # Corresponds to the JSON property `runTime`
        # @return [String]
        attr_accessor :run_time
      
        # The `Status` type defines a logical error model that is suitable for different
        # programming environments, including REST APIs and RPC APIs. It is used by [
        # gRPC](https://github.com/grpc). Each `Status` message contains three pieces of
        # data: error code, error message, and error details. You can find out more
        # about this error model and how to work with it in the [API Design Guide](https:
        # //cloud.google.com/apis/design/errors).
        # Corresponds to the JSON property `status`
        # @return [Google::Apis::AiplatformV1beta1::GoogleRpcStatus]
        attr_accessor :status
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @run_time = args[:run_time] if args.key?(:run_time)
          @status = args[:status] if args.key?(:status)
        end
      end
      
      # ModelDeploymentMonitoringObjectiveConfig contains the pair of
      # deployed_model_id to ModelMonitoringObjectiveConfig.
      class GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfig
        include Google::Apis::Core::Hashable
      
        # The DeployedModel ID of the objective config.
        # Corresponds to the JSON property `deployedModelId`
        # @return [String]
        attr_accessor :deployed_model_id
      
        # The objective configuration for model monitoring, including the information
        # needed to detect anomalies for one particular model.
        # Corresponds to the JSON property `objectiveConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfig]
        attr_accessor :objective_config
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployed_model_id = args[:deployed_model_id] if args.key?(:deployed_model_id)
          @objective_config = args[:objective_config] if args.key?(:objective_config)
        end
      end
      
      # The config for scheduling monitoring job.
      class GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig
        include Google::Apis::Core::Hashable
      
        # Required. The model monitoring job scheduling interval. It will be rounded up
        # to next full hour. This defines how often the monitoring jobs are triggered.
        # Corresponds to the JSON property `monitorInterval`
        # @return [String]
        attr_accessor :monitor_interval
      
        # The time window of the prediction data being included in each prediction
        # dataset. This window specifies how long the data should be collected from
        # historical model results for each run. If not set,
        # ModelDeploymentMonitoringScheduleConfig.monitor_interval will be used. e.g. If
        # currently the cutoff time is 2022-01-08 14:30:00 and the monitor_window is set
        # to be 3600, then data from 2022-01-08 13:30:00 to 2022-01-08 14:30:00 will be
        # retrieved and aggregated to calculate the monitoring statistics.
        # Corresponds to the JSON property `monitorWindow`
        # @return [String]
        attr_accessor :monitor_window
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @monitor_interval = args[:monitor_interval] if args.key?(:monitor_interval)
          @monitor_window = args[:monitor_window] if args.key?(:monitor_window)
        end
      end
      
      # A collection of metrics calculated by comparing Model's predictions on all of
      # the test data against annotations from the test data.
      class GoogleCloudAiplatformV1beta1ModelEvaluation
        include Google::Apis::Core::Hashable
      
        # Configuration for bias detection.
        # Corresponds to the JSON property `biasConfigs`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelEvaluationBiasConfig]
        attr_accessor :bias_configs
      
        # Output only. Timestamp when this ModelEvaluation was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # The display name of the ModelEvaluation.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Describes the values of ExplanationSpec that are used for explaining the
        # predicted values on the evaluated data.
        # Corresponds to the JSON property `explanationSpecs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelEvaluationModelEvaluationExplanationSpec>]
        attr_accessor :explanation_specs
      
        # The metadata of the ModelEvaluation. For the ModelEvaluation uploaded from
        # Managed Pipeline, metadata contains a structured value with keys of "
        # pipeline_job_id", "evaluation_dataset_type", "evaluation_dataset_path".
        # Corresponds to the JSON property `metadata`
        # @return [Object]
        attr_accessor :metadata
      
        # Evaluation metrics of the Model. The schema of the metrics is stored in
        # metrics_schema_uri
        # Corresponds to the JSON property `metrics`
        # @return [Object]
        attr_accessor :metrics
      
        # Points to a YAML file stored on Google Cloud Storage describing the metrics of
        # this ModelEvaluation. The schema is defined as an OpenAPI 3.0.2 [Schema Object]
        # (https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#
        # schemaObject).
        # Corresponds to the JSON property `metricsSchemaUri`
        # @return [String]
        attr_accessor :metrics_schema_uri
      
        # Aggregated explanation metrics for a Model over a set of instances.
        # Corresponds to the JSON property `modelExplanation`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelExplanation]
        attr_accessor :model_explanation
      
        # Output only. The resource name of the ModelEvaluation.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # All possible dimensions of ModelEvaluationSlices. The dimensions can be used
        # as the filter of the ModelService.ListModelEvaluationSlices request, in the
        # form of `slice.dimension = `.
        # Corresponds to the JSON property `sliceDimensions`
        # @return [Array<String>]
        attr_accessor :slice_dimensions
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bias_configs = args[:bias_configs] if args.key?(:bias_configs)
          @create_time = args[:create_time] if args.key?(:create_time)
          @display_name = args[:display_name] if args.key?(:display_name)
          @explanation_specs = args[:explanation_specs] if args.key?(:explanation_specs)
          @metadata = args[:metadata] if args.key?(:metadata)
          @metrics = args[:metrics] if args.key?(:metrics)
          @metrics_schema_uri = args[:metrics_schema_uri] if args.key?(:metrics_schema_uri)
          @model_explanation = args[:model_explanation] if args.key?(:model_explanation)
          @name = args[:name] if args.key?(:name)
          @slice_dimensions = args[:slice_dimensions] if args.key?(:slice_dimensions)
        end
      end
      
      # Configuration for bias detection.
      class GoogleCloudAiplatformV1beta1ModelEvaluationBiasConfig
        include Google::Apis::Core::Hashable
      
        # Specification for how the data should be sliced.
        # Corresponds to the JSON property `biasSlices`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec]
        attr_accessor :bias_slices
      
        # Positive labels selection on the target field.
        # Corresponds to the JSON property `labels`
        # @return [Array<String>]
        attr_accessor :labels
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bias_slices = args[:bias_slices] if args.key?(:bias_slices)
          @labels = args[:labels] if args.key?(:labels)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1ModelEvaluationModelEvaluationExplanationSpec
        include Google::Apis::Core::Hashable
      
        # Specification of Model explanation.
        # Corresponds to the JSON property `explanationSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ExplanationSpec]
        attr_accessor :explanation_spec
      
        # Explanation type. For AutoML Image Classification models, possible values are:
        # * `image-integrated-gradients` * `image-xrai`
        # Corresponds to the JSON property `explanationType`
        # @return [String]
        attr_accessor :explanation_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @explanation_spec = args[:explanation_spec] if args.key?(:explanation_spec)
          @explanation_type = args[:explanation_type] if args.key?(:explanation_type)
        end
      end
      
      # A collection of metrics calculated by comparing Model's predictions on a slice
      # of the test data against ground truth annotations.
      class GoogleCloudAiplatformV1beta1ModelEvaluationSlice
        include Google::Apis::Core::Hashable
      
        # Output only. Timestamp when this ModelEvaluationSlice was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Output only. Sliced evaluation metrics of the Model. The schema of the metrics
        # is stored in metrics_schema_uri
        # Corresponds to the JSON property `metrics`
        # @return [Object]
        attr_accessor :metrics
      
        # Output only. Points to a YAML file stored on Google Cloud Storage describing
        # the metrics of this ModelEvaluationSlice. The schema is defined as an OpenAPI
        # 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/
        # versions/3.0.2.md#schemaObject).
        # Corresponds to the JSON property `metricsSchemaUri`
        # @return [String]
        attr_accessor :metrics_schema_uri
      
        # Aggregated explanation metrics for a Model over a set of instances.
        # Corresponds to the JSON property `modelExplanation`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelExplanation]
        attr_accessor :model_explanation
      
        # Output only. The resource name of the ModelEvaluationSlice.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Definition of a slice.
        # Corresponds to the JSON property `slice`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelEvaluationSliceSlice]
        attr_accessor :slice
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @metrics = args[:metrics] if args.key?(:metrics)
          @metrics_schema_uri = args[:metrics_schema_uri] if args.key?(:metrics_schema_uri)
          @model_explanation = args[:model_explanation] if args.key?(:model_explanation)
          @name = args[:name] if args.key?(:name)
          @slice = args[:slice] if args.key?(:slice)
        end
      end
      
      # Definition of a slice.
      class GoogleCloudAiplatformV1beta1ModelEvaluationSliceSlice
        include Google::Apis::Core::Hashable
      
        # Output only. The dimension of the slice. Well-known dimensions are: * `
        # annotationSpec`: This slice is on the test data that has either ground truth
        # or prediction with AnnotationSpec.display_name equals to value. * `slice`:
        # This slice is a user customized slice defined by its SliceSpec.
        # Corresponds to the JSON property `dimension`
        # @return [String]
        attr_accessor :dimension
      
        # Specification for how the data should be sliced.
        # Corresponds to the JSON property `sliceSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec]
        attr_accessor :slice_spec
      
        # Output only. The value of the dimension in this slice.
        # Corresponds to the JSON property `value`
        # @return [String]
        attr_accessor :value
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @dimension = args[:dimension] if args.key?(:dimension)
          @slice_spec = args[:slice_spec] if args.key?(:slice_spec)
          @value = args[:value] if args.key?(:value)
        end
      end
      
      # Specification for how the data should be sliced.
      class GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec
        include Google::Apis::Core::Hashable
      
        # Mapping configuration for this SliceSpec. The key is the name of the feature.
        # By default, the key will be prefixed by "instance" as a dictionary prefix for
        # Vertex Batch Predictions output format.
        # Corresponds to the JSON property `configs`
        # @return [Hash<String,Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecSliceConfig>]
        attr_accessor :configs
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @configs = args[:configs] if args.key?(:configs)
        end
      end
      
      # A range of values for slice(s). `low` is inclusive, `high` is exclusive.
      class GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecRange
        include Google::Apis::Core::Hashable
      
        # Exclusive high value for the range.
        # Corresponds to the JSON property `high`
        # @return [Float]
        attr_accessor :high
      
        # Inclusive low value for the range.
        # Corresponds to the JSON property `low`
        # @return [Float]
        attr_accessor :low
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @high = args[:high] if args.key?(:high)
          @low = args[:low] if args.key?(:low)
        end
      end
      
      # Specification message containing the config for this SliceSpec. When `kind` is
      # selected as `value` and/or `range`, only a single slice will be computed. When
      # `all_values` is present, a separate slice will be computed for each possible
      # label/value for the corresponding key in `config`. Examples, with feature
      # zip_code with values 12345, 23334, 88888 and feature country with values "US",
      # "Canada", "Mexico" in the dataset: Example 1: ` "zip_code": ` "value": ` "
      # float_value": 12345.0 ` ` ` A single slice for any data with zip_code 12345 in
      # the dataset. Example 2: ` "zip_code": ` "range": ` "low": 12345, "high": 20000
      # ` ` ` A single slice containing data where the zip_codes between 12345 and
      # 20000 For this example, data with the zip_code of 12345 will be in this slice.
      # Example 3: ` "zip_code": ` "range": ` "low": 10000, "high": 20000 ` `, "
      # country": ` "value": ` "string_value": "US" ` ` ` A single slice containing
      # data where the zip_codes between 10000 and 20000 has the country "US". For
      # this example, data with the zip_code of 12345 and country "US" will be in this
      # slice. Example 4: ` "country": `"all_values": ` "value": true ` ` ` Three
      # slices are computed, one for each unique country in the dataset. Example 5: ` "
      # country": ` "all_values": ` "value": true ` `, "zip_code": ` "value": ` "
      # float_value": 12345.0 ` ` ` Three slices are computed, one for each unique
      # country in the dataset where the zip_code is also 12345. For this example,
      # data with zip_code 12345 and country "US" will be in one slice, zip_code 12345
      # and country "Canada" in another slice, and zip_code 12345 and country "Mexico"
      # in another slice, totaling 3 slices.
      class GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecSliceConfig
        include Google::Apis::Core::Hashable
      
        # If all_values is set to true, then all possible labels of the keyed feature
        # will have another slice computed. Example: ``"all_values":`"value":true```
        # Corresponds to the JSON property `allValues`
        # @return [Boolean]
        attr_accessor :all_values
        alias_method :all_values?, :all_values
      
        # A range of values for slice(s). `low` is inclusive, `high` is exclusive.
        # Corresponds to the JSON property `range`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecRange]
        attr_accessor :range
      
        # Single value that supports strings and floats.
        # Corresponds to the JSON property `value`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecValue]
        attr_accessor :value
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @all_values = args[:all_values] if args.key?(:all_values)
          @range = args[:range] if args.key?(:range)
          @value = args[:value] if args.key?(:value)
        end
      end
      
      # Single value that supports strings and floats.
      class GoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecValue
        include Google::Apis::Core::Hashable
      
        # Float type.
        # Corresponds to the JSON property `floatValue`
        # @return [Float]
        attr_accessor :float_value
      
        # String type.
        # Corresponds to the JSON property `stringValue`
        # @return [String]
        attr_accessor :string_value
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @float_value = args[:float_value] if args.key?(:float_value)
          @string_value = args[:string_value] if args.key?(:string_value)
        end
      end
      
      # Aggregated explanation metrics for a Model over a set of instances.
      class GoogleCloudAiplatformV1beta1ModelExplanation
        include Google::Apis::Core::Hashable
      
        # Output only. Aggregated attributions explaining the Model's prediction outputs
        # over the set of instances. The attributions are grouped by outputs. For Models
        # that predict only one output, such as regression Models that predict only one
        # score, there is only one attibution that explains the predicted output. For
        # Models that predict multiple outputs, such as multiclass Models that predict
        # multiple classes, each element explains one specific item. Attribution.
        # output_index can be used to identify which output this attribution is
        # explaining. The baselineOutputValue, instanceOutputValue and
        # featureAttributions fields are averaged over the test data. NOTE: Currently
        # AutoML tabular classification Models produce only one attribution, which
        # averages attributions over all the classes it predicts. Attribution.
        # approximation_error is not populated.
        # Corresponds to the JSON property `meanAttributions`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Attribution>]
        attr_accessor :mean_attributions
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @mean_attributions = args[:mean_attributions] if args.key?(:mean_attributions)
        end
      end
      
      # Represents export format supported by the Model. All formats export to Google
      # Cloud Storage.
      class GoogleCloudAiplatformV1beta1ModelExportFormat
        include Google::Apis::Core::Hashable
      
        # Output only. The content of this Model that may be exported.
        # Corresponds to the JSON property `exportableContents`
        # @return [Array<String>]
        attr_accessor :exportable_contents
      
        # Output only. The ID of the export format. The possible format IDs are: * `
        # tflite` Used for Android mobile devices. * `edgetpu-tflite` Used for [Edge TPU]
        # (https://cloud.google.com/edge-tpu/) devices. * `tf-saved-model` A tensorflow
        # model in SavedModel format. * `tf-js` A [TensorFlow.js](https://www.tensorflow.
        # org/js) model that can be used in the browser and in Node.js using JavaScript.
        # * `core-ml` Used for iOS mobile devices. * `custom-trained` A Model that was
        # uploaded or trained by custom code.
        # Corresponds to the JSON property `id`
        # @return [String]
        attr_accessor :id
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @exportable_contents = args[:exportable_contents] if args.key?(:exportable_contents)
          @id = args[:id] if args.key?(:id)
        end
      end
      
      # Contains information about the source of the models generated from Model
      # Garden.
      class GoogleCloudAiplatformV1beta1ModelGardenSource
        include Google::Apis::Core::Hashable
      
        # Required. The model garden source model resource name.
        # Corresponds to the JSON property `publicModelName`
        # @return [String]
        attr_accessor :public_model_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @public_model_name = args[:public_model_name] if args.key?(:public_model_name)
        end
      end
      
      # Used to specify the source of the Model Garden model or Genie models. Only
      # present for models created or tuned from Model Garden and Genie.
      class GoogleCloudAiplatformV1beta1ModelGeneratedModelSource
        include Google::Apis::Core::Hashable
      
        # Contains information about the source of the models generated from Generative
        # AI Studio.
        # Corresponds to the JSON property `genieSource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenieSource]
        attr_accessor :genie_source
      
        # Contains information about the source of the models generated from Model
        # Garden.
        # Corresponds to the JSON property `modelGardenSource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelGardenSource]
        attr_accessor :model_garden_source
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @genie_source = args[:genie_source] if args.key?(:genie_source)
          @model_garden_source = args[:model_garden_source] if args.key?(:model_garden_source)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig
        include Google::Apis::Core::Hashable
      
        # The config for email alert.
        # Corresponds to the JSON property `emailAlertConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfigEmailAlertConfig]
        attr_accessor :email_alert_config
      
        # Dump the anomalies to Cloud Logging. The anomalies will be put to json payload
        # encoded from proto google.cloud.aiplatform.logging.
        # ModelMonitoringAnomaliesLogEntry. This can be further sinked to Pub/Sub or any
        # other services supported by Cloud Logging.
        # Corresponds to the JSON property `enableLogging`
        # @return [Boolean]
        attr_accessor :enable_logging
        alias_method :enable_logging?, :enable_logging
      
        # Resource names of the NotificationChannels to send alert. Must be of the
        # format `projects//notificationChannels/`
        # Corresponds to the JSON property `notificationChannels`
        # @return [Array<String>]
        attr_accessor :notification_channels
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @email_alert_config = args[:email_alert_config] if args.key?(:email_alert_config)
          @enable_logging = args[:enable_logging] if args.key?(:enable_logging)
          @notification_channels = args[:notification_channels] if args.key?(:notification_channels)
        end
      end
      
      # The config for email alert.
      class GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfigEmailAlertConfig
        include Google::Apis::Core::Hashable
      
        # The email addresses to send the alert.
        # Corresponds to the JSON property `userEmails`
        # @return [Array<String>]
        attr_accessor :user_emails
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @user_emails = args[:user_emails] if args.key?(:user_emails)
        end
      end
      
      # The model monitoring configuration used for Batch Prediction Job.
      class GoogleCloudAiplatformV1beta1ModelMonitoringConfig
        include Google::Apis::Core::Hashable
      
        # Model monitoring alert config.
        # Corresponds to the JSON property `alertConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig]
        attr_accessor :alert_config
      
        # YAML schema file uri in Cloud Storage describing the format of a single
        # instance that you want Tensorflow Data Validation (TFDV) to analyze. If there
        # are any data type differences between predict instance and TFDV instance, this
        # field can be used to override the schema. For models trained with Vertex AI,
        # this field must be set as all the fields in predict instance formatted as
        # string.
        # Corresponds to the JSON property `analysisInstanceSchemaUri`
        # @return [String]
        attr_accessor :analysis_instance_schema_uri
      
        # Model monitoring objective config.
        # Corresponds to the JSON property `objectiveConfigs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfig>]
        attr_accessor :objective_configs
      
        # The Google Cloud Storage location where the output is to be written to.
        # Corresponds to the JSON property `statsAnomaliesBaseDirectory`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GcsDestination]
        attr_accessor :stats_anomalies_base_directory
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @alert_config = args[:alert_config] if args.key?(:alert_config)
          @analysis_instance_schema_uri = args[:analysis_instance_schema_uri] if args.key?(:analysis_instance_schema_uri)
          @objective_configs = args[:objective_configs] if args.key?(:objective_configs)
          @stats_anomalies_base_directory = args[:stats_anomalies_base_directory] if args.key?(:stats_anomalies_base_directory)
        end
      end
      
      # The objective configuration for model monitoring, including the information
      # needed to detect anomalies for one particular model.
      class GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfig
        include Google::Apis::Core::Hashable
      
        # The config for integrating with Vertex Explainable AI. Only applicable if the
        # Model has explanation_spec populated.
        # Corresponds to the JSON property `explanationConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig]
        attr_accessor :explanation_config
      
        # The config for Prediction data drift detection.
        # Corresponds to the JSON property `predictionDriftDetectionConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig]
        attr_accessor :prediction_drift_detection_config
      
        # Training Dataset information.
        # Corresponds to the JSON property `trainingDataset`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset]
        attr_accessor :training_dataset
      
        # The config for Training & Prediction data skew detection. It specifies the
        # training dataset sources and the skew detection parameters.
        # Corresponds to the JSON property `trainingPredictionSkewDetectionConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig]
        attr_accessor :training_prediction_skew_detection_config
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @explanation_config = args[:explanation_config] if args.key?(:explanation_config)
          @prediction_drift_detection_config = args[:prediction_drift_detection_config] if args.key?(:prediction_drift_detection_config)
          @training_dataset = args[:training_dataset] if args.key?(:training_dataset)
          @training_prediction_skew_detection_config = args[:training_prediction_skew_detection_config] if args.key?(:training_prediction_skew_detection_config)
        end
      end
      
      # The config for integrating with Vertex Explainable AI. Only applicable if the
      # Model has explanation_spec populated.
      class GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig
        include Google::Apis::Core::Hashable
      
        # If want to analyze the Vertex Explainable AI feature attribute scores or not.
        # If set to true, Vertex AI will log the feature attributions from explain
        # response and do the skew/drift detection for them.
        # Corresponds to the JSON property `enableFeatureAttributes`
        # @return [Boolean]
        attr_accessor :enable_feature_attributes
        alias_method :enable_feature_attributes?, :enable_feature_attributes
      
        # Output from BatchPredictionJob for Model Monitoring baseline dataset, which
        # can be used to generate baseline attribution scores.
        # Corresponds to the JSON property `explanationBaseline`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline]
        attr_accessor :explanation_baseline
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @enable_feature_attributes = args[:enable_feature_attributes] if args.key?(:enable_feature_attributes)
          @explanation_baseline = args[:explanation_baseline] if args.key?(:explanation_baseline)
        end
      end
      
      # Output from BatchPredictionJob for Model Monitoring baseline dataset, which
      # can be used to generate baseline attribution scores.
      class GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline
        include Google::Apis::Core::Hashable
      
        # The BigQuery location for the output content.
        # Corresponds to the JSON property `bigquery`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BigQueryDestination]
        attr_accessor :bigquery
      
        # The Google Cloud Storage location where the output is to be written to.
        # Corresponds to the JSON property `gcs`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GcsDestination]
        attr_accessor :gcs
      
        # The storage format of the predictions generated BatchPrediction job.
        # Corresponds to the JSON property `predictionFormat`
        # @return [String]
        attr_accessor :prediction_format
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bigquery = args[:bigquery] if args.key?(:bigquery)
          @gcs = args[:gcs] if args.key?(:gcs)
          @prediction_format = args[:prediction_format] if args.key?(:prediction_format)
        end
      end
      
      # The config for Prediction data drift detection.
      class GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig
        include Google::Apis::Core::Hashable
      
        # Key is the feature name and value is the threshold. The threshold here is
        # against attribution score distance between different time windows.
        # Corresponds to the JSON property `attributionScoreDriftThresholds`
        # @return [Hash<String,Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ThresholdConfig>]
        attr_accessor :attribution_score_drift_thresholds
      
        # The config for feature monitoring threshold.
        # Corresponds to the JSON property `defaultDriftThreshold`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ThresholdConfig]
        attr_accessor :default_drift_threshold
      
        # Key is the feature name and value is the threshold. If a feature needs to be
        # monitored for drift, a value threshold must be configured for that feature.
        # The threshold here is against feature distribution distance between different
        # time windws.
        # Corresponds to the JSON property `driftThresholds`
        # @return [Hash<String,Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ThresholdConfig>]
        attr_accessor :drift_thresholds
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @attribution_score_drift_thresholds = args[:attribution_score_drift_thresholds] if args.key?(:attribution_score_drift_thresholds)
          @default_drift_threshold = args[:default_drift_threshold] if args.key?(:default_drift_threshold)
          @drift_thresholds = args[:drift_thresholds] if args.key?(:drift_thresholds)
        end
      end
      
      # Training Dataset information.
      class GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset
        include Google::Apis::Core::Hashable
      
        # The BigQuery location for the input content.
        # Corresponds to the JSON property `bigquerySource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BigQuerySource]
        attr_accessor :bigquery_source
      
        # Data format of the dataset, only applicable if the input is from Google Cloud
        # Storage. The possible formats are: "tf-record" The source file is a TFRecord
        # file. "csv" The source file is a CSV file. "jsonl" The source file is a JSONL
        # file.
        # Corresponds to the JSON property `dataFormat`
        # @return [String]
        attr_accessor :data_format
      
        # The resource name of the Dataset used to train this Model.
        # Corresponds to the JSON property `dataset`
        # @return [String]
        attr_accessor :dataset
      
        # The Google Cloud Storage location for the input content.
        # Corresponds to the JSON property `gcsSource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GcsSource]
        attr_accessor :gcs_source
      
        # Sampling Strategy for logging, can be for both training and prediction dataset.
        # Corresponds to the JSON property `loggingSamplingStrategy`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SamplingStrategy]
        attr_accessor :logging_sampling_strategy
      
        # The target field name the model is to predict. This field will be excluded
        # when doing Predict and (or) Explain for the training data.
        # Corresponds to the JSON property `targetField`
        # @return [String]
        attr_accessor :target_field
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bigquery_source = args[:bigquery_source] if args.key?(:bigquery_source)
          @data_format = args[:data_format] if args.key?(:data_format)
          @dataset = args[:dataset] if args.key?(:dataset)
          @gcs_source = args[:gcs_source] if args.key?(:gcs_source)
          @logging_sampling_strategy = args[:logging_sampling_strategy] if args.key?(:logging_sampling_strategy)
          @target_field = args[:target_field] if args.key?(:target_field)
        end
      end
      
      # The config for Training & Prediction data skew detection. It specifies the
      # training dataset sources and the skew detection parameters.
      class GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingPredictionSkewDetectionConfig
        include Google::Apis::Core::Hashable
      
        # Key is the feature name and value is the threshold. The threshold here is
        # against attribution score distance between the training and prediction feature.
        # Corresponds to the JSON property `attributionScoreSkewThresholds`
        # @return [Hash<String,Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ThresholdConfig>]
        attr_accessor :attribution_score_skew_thresholds
      
        # The config for feature monitoring threshold.
        # Corresponds to the JSON property `defaultSkewThreshold`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ThresholdConfig]
        attr_accessor :default_skew_threshold
      
        # Key is the feature name and value is the threshold. If a feature needs to be
        # monitored for skew, a value threshold must be configured for that feature. The
        # threshold here is against feature distribution distance between the training
        # and prediction feature.
        # Corresponds to the JSON property `skewThresholds`
        # @return [Hash<String,Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ThresholdConfig>]
        attr_accessor :skew_thresholds
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @attribution_score_skew_thresholds = args[:attribution_score_skew_thresholds] if args.key?(:attribution_score_skew_thresholds)
          @default_skew_threshold = args[:default_skew_threshold] if args.key?(:default_skew_threshold)
          @skew_thresholds = args[:skew_thresholds] if args.key?(:skew_thresholds)
        end
      end
      
      # Statistics and anomalies generated by Model Monitoring.
      class GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomalies
        include Google::Apis::Core::Hashable
      
        # Number of anomalies within all stats.
        # Corresponds to the JSON property `anomalyCount`
        # @return [Fixnum]
        attr_accessor :anomaly_count
      
        # Deployed Model ID.
        # Corresponds to the JSON property `deployedModelId`
        # @return [String]
        attr_accessor :deployed_model_id
      
        # A list of historical Stats and Anomalies generated for all Features.
        # Corresponds to the JSON property `featureStats`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomalies>]
        attr_accessor :feature_stats
      
        # Model Monitoring Objective those stats and anomalies belonging to.
        # Corresponds to the JSON property `objective`
        # @return [String]
        attr_accessor :objective
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @anomaly_count = args[:anomaly_count] if args.key?(:anomaly_count)
          @deployed_model_id = args[:deployed_model_id] if args.key?(:deployed_model_id)
          @feature_stats = args[:feature_stats] if args.key?(:feature_stats)
          @objective = args[:objective] if args.key?(:objective)
        end
      end
      
      # Historical Stats (and Anomalies) for a specific Feature.
      class GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomaliesFeatureHistoricStatsAnomalies
        include Google::Apis::Core::Hashable
      
        # Display Name of the Feature.
        # Corresponds to the JSON property `featureDisplayName`
        # @return [String]
        attr_accessor :feature_display_name
      
        # A list of historical stats generated by different time window's Prediction
        # Dataset.
        # Corresponds to the JSON property `predictionStats`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureStatsAnomaly>]
        attr_accessor :prediction_stats
      
        # The config for feature monitoring threshold.
        # Corresponds to the JSON property `threshold`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ThresholdConfig]
        attr_accessor :threshold
      
        # Stats and Anomaly generated at specific timestamp for specific Feature. The
        # start_time and end_time are used to define the time range of the dataset that
        # current stats belongs to, e.g. prediction traffic is bucketed into prediction
        # datasets by time window. If the Dataset is not defined by time window,
        # start_time = end_time. Timestamp of the stats and anomalies always refers to
        # end_time. Raw stats and anomalies are stored in stats_uri or anomaly_uri in
        # the tensorflow defined protos. Field data_stats contains almost identical
        # information with the raw stats in Vertex AI defined proto, for UI to display.
        # Corresponds to the JSON property `trainingStats`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureStatsAnomaly]
        attr_accessor :training_stats
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @feature_display_name = args[:feature_display_name] if args.key?(:feature_display_name)
          @prediction_stats = args[:prediction_stats] if args.key?(:prediction_stats)
          @threshold = args[:threshold] if args.key?(:threshold)
          @training_stats = args[:training_stats] if args.key?(:training_stats)
        end
      end
      
      # Contains information about the original Model if this Model is a copy.
      class GoogleCloudAiplatformV1beta1ModelOriginalModelInfo
        include Google::Apis::Core::Hashable
      
        # Output only. The resource name of the Model this Model is a copy of, including
        # the revision. Format: `projects/`project`/locations/`location`/models/`
        # model_id`@`version_id``
        # Corresponds to the JSON property `model`
        # @return [String]
        attr_accessor :model
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @model = args[:model] if args.key?(:model)
        end
      end
      
      # Detail description of the source information of the model.
      class GoogleCloudAiplatformV1beta1ModelSourceInfo
        include Google::Apis::Core::Hashable
      
        # If this Model is copy of another Model. If true then source_type pertains to
        # the original.
        # Corresponds to the JSON property `copy`
        # @return [Boolean]
        attr_accessor :copy
        alias_method :copy?, :copy
      
        # Type of the model source.
        # Corresponds to the JSON property `sourceType`
        # @return [String]
        attr_accessor :source_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @copy = args[:copy] if args.key?(:copy)
          @source_type = args[:source_type] if args.key?(:source_type)
        end
      end
      
      # Runtime operation information for IndexEndpointService.MutateDeployedIndex.
      class GoogleCloudAiplatformV1beta1MutateDeployedIndexOperationMetadata
        include Google::Apis::Core::Hashable
      
        # The unique index id specified by user
        # Corresponds to the JSON property `deployedIndexId`
        # @return [String]
        attr_accessor :deployed_index_id
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployed_index_id = args[:deployed_index_id] if args.key?(:deployed_index_id)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Response message for IndexEndpointService.MutateDeployedIndex.
      class GoogleCloudAiplatformV1beta1MutateDeployedIndexResponse
        include Google::Apis::Core::Hashable
      
        # A deployment of an Index. IndexEndpoints contain one or more DeployedIndexes.
        # Corresponds to the JSON property `deployedIndex`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DeployedIndex]
        attr_accessor :deployed_index
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployed_index = args[:deployed_index] if args.key?(:deployed_index)
        end
      end
      
      # Runtime operation information for EndpointService.MutateDeployedModel.
      class GoogleCloudAiplatformV1beta1MutateDeployedModelOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for EndpointService.MutateDeployedModel.
      class GoogleCloudAiplatformV1beta1MutateDeployedModelRequest
        include Google::Apis::Core::Hashable
      
        # A deployment of a Model. Endpoints contain one or more DeployedModels.
        # Corresponds to the JSON property `deployedModel`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DeployedModel]
        attr_accessor :deployed_model
      
        # Required. The update mask applies to the resource. See google.protobuf.
        # FieldMask.
        # Corresponds to the JSON property `updateMask`
        # @return [String]
        attr_accessor :update_mask
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployed_model = args[:deployed_model] if args.key?(:deployed_model)
          @update_mask = args[:update_mask] if args.key?(:update_mask)
        end
      end
      
      # Response message for EndpointService.MutateDeployedModel.
      class GoogleCloudAiplatformV1beta1MutateDeployedModelResponse
        include Google::Apis::Core::Hashable
      
        # A deployment of a Model. Endpoints contain one or more DeployedModels.
        # Corresponds to the JSON property `deployedModel`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DeployedModel]
        attr_accessor :deployed_model
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployed_model = args[:deployed_model] if args.key?(:deployed_model)
        end
      end
      
      # Represents a Neural Architecture Search (NAS) job.
      class GoogleCloudAiplatformV1beta1NasJob
        include Google::Apis::Core::Hashable
      
        # Output only. Time when the NasJob was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Required. The display name of the NasJob. The name can be up to 128 characters
        # long and can consist of any UTF-8 characters.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Optional. Enable a separation of Custom model training and restricted image
        # training for tenant project.
        # Corresponds to the JSON property `enableRestrictedImageTraining`
        # @return [Boolean]
        attr_accessor :enable_restricted_image_training
        alias_method :enable_restricted_image_training?, :enable_restricted_image_training
      
        # Represents a customer-managed encryption key spec that can be applied to a top-
        # level resource.
        # Corresponds to the JSON property `encryptionSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EncryptionSpec]
        attr_accessor :encryption_spec
      
        # Output only. Time when the NasJob entered any of the following states: `
        # JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.
        # Corresponds to the JSON property `endTime`
        # @return [String]
        attr_accessor :end_time
      
        # The `Status` type defines a logical error model that is suitable for different
        # programming environments, including REST APIs and RPC APIs. It is used by [
        # gRPC](https://github.com/grpc). Each `Status` message contains three pieces of
        # data: error code, error message, and error details. You can find out more
        # about this error model and how to work with it in the [API Design Guide](https:
        # //cloud.google.com/apis/design/errors).
        # Corresponds to the JSON property `error`
        # @return [Google::Apis::AiplatformV1beta1::GoogleRpcStatus]
        attr_accessor :error
      
        # The labels with user-defined metadata to organize NasJobs. Label keys and
        # values can be no longer than 64 characters (Unicode codepoints), can only
        # contain lowercase letters, numeric characters, underscores and dashes.
        # International characters are allowed. See https://goo.gl/xmQnxf for more
        # information and examples of labels.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Output only. Resource name of the NasJob.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Represents a uCAIP NasJob output.
        # Corresponds to the JSON property `nasJobOutput`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NasJobOutput]
        attr_accessor :nas_job_output
      
        # Represents the spec of a NasJob.
        # Corresponds to the JSON property `nasJobSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NasJobSpec]
        attr_accessor :nas_job_spec
      
        # Output only. Time when the NasJob for the first time entered the `
        # JOB_STATE_RUNNING` state.
        # Corresponds to the JSON property `startTime`
        # @return [String]
        attr_accessor :start_time
      
        # Output only. The detailed state of the job.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor :state
      
        # Output only. Time when the NasJob was most recently updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @display_name = args[:display_name] if args.key?(:display_name)
          @enable_restricted_image_training = args[:enable_restricted_image_training] if args.key?(:enable_restricted_image_training)
          @encryption_spec = args[:encryption_spec] if args.key?(:encryption_spec)
          @end_time = args[:end_time] if args.key?(:end_time)
          @error = args[:error] if args.key?(:error)
          @labels = args[:labels] if args.key?(:labels)
          @name = args[:name] if args.key?(:name)
          @nas_job_output = args[:nas_job_output] if args.key?(:nas_job_output)
          @nas_job_spec = args[:nas_job_spec] if args.key?(:nas_job_spec)
          @start_time = args[:start_time] if args.key?(:start_time)
          @state = args[:state] if args.key?(:state)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # Represents a uCAIP NasJob output.
      class GoogleCloudAiplatformV1beta1NasJobOutput
        include Google::Apis::Core::Hashable
      
        # The output of a multi-trial Neural Architecture Search (NAS) jobs.
        # Corresponds to the JSON property `multiTrialJobOutput`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput]
        attr_accessor :multi_trial_job_output
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @multi_trial_job_output = args[:multi_trial_job_output] if args.key?(:multi_trial_job_output)
        end
      end
      
      # The output of a multi-trial Neural Architecture Search (NAS) jobs.
      class GoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput
        include Google::Apis::Core::Hashable
      
        # Output only. List of NasTrials that were started as part of search stage.
        # Corresponds to the JSON property `searchTrials`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NasTrial>]
        attr_accessor :search_trials
      
        # Output only. List of NasTrials that were started as part of train stage.
        # Corresponds to the JSON property `trainTrials`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NasTrial>]
        attr_accessor :train_trials
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @search_trials = args[:search_trials] if args.key?(:search_trials)
          @train_trials = args[:train_trials] if args.key?(:train_trials)
        end
      end
      
      # Represents the spec of a NasJob.
      class GoogleCloudAiplatformV1beta1NasJobSpec
        include Google::Apis::Core::Hashable
      
        # The spec of multi-trial Neural Architecture Search (NAS).
        # Corresponds to the JSON property `multiTrialAlgorithmSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec]
        attr_accessor :multi_trial_algorithm_spec
      
        # The ID of the existing NasJob in the same Project and Location which will be
        # used to resume search. search_space_spec and nas_algorithm_spec are obtained
        # from previous NasJob hence should not provide them again for this NasJob.
        # Corresponds to the JSON property `resumeNasJobId`
        # @return [String]
        attr_accessor :resume_nas_job_id
      
        # It defines the search space for Neural Architecture Search (NAS).
        # Corresponds to the JSON property `searchSpaceSpec`
        # @return [String]
        attr_accessor :search_space_spec
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @multi_trial_algorithm_spec = args[:multi_trial_algorithm_spec] if args.key?(:multi_trial_algorithm_spec)
          @resume_nas_job_id = args[:resume_nas_job_id] if args.key?(:resume_nas_job_id)
          @search_space_spec = args[:search_space_spec] if args.key?(:search_space_spec)
        end
      end
      
      # The spec of multi-trial Neural Architecture Search (NAS).
      class GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec
        include Google::Apis::Core::Hashable
      
        # Represents a metric to optimize.
        # Corresponds to the JSON property `metric`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpec]
        attr_accessor :metric
      
        # The multi-trial Neural Architecture Search (NAS) algorithm type. Defaults to `
        # REINFORCEMENT_LEARNING`.
        # Corresponds to the JSON property `multiTrialAlgorithm`
        # @return [String]
        attr_accessor :multi_trial_algorithm
      
        # Represent spec for search trials.
        # Corresponds to the JSON property `searchTrialSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec]
        attr_accessor :search_trial_spec
      
        # Represent spec for train trials.
        # Corresponds to the JSON property `trainTrialSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec]
        attr_accessor :train_trial_spec
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @metric = args[:metric] if args.key?(:metric)
          @multi_trial_algorithm = args[:multi_trial_algorithm] if args.key?(:multi_trial_algorithm)
          @search_trial_spec = args[:search_trial_spec] if args.key?(:search_trial_spec)
          @train_trial_spec = args[:train_trial_spec] if args.key?(:train_trial_spec)
        end
      end
      
      # Represents a metric to optimize.
      class GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpec
        include Google::Apis::Core::Hashable
      
        # Required. The optimization goal of the metric.
        # Corresponds to the JSON property `goal`
        # @return [String]
        attr_accessor :goal
      
        # Required. The ID of the metric. Must not contain whitespaces.
        # Corresponds to the JSON property `metricId`
        # @return [String]
        attr_accessor :metric_id
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @goal = args[:goal] if args.key?(:goal)
          @metric_id = args[:metric_id] if args.key?(:metric_id)
        end
      end
      
      # Represent spec for search trials.
      class GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec
        include Google::Apis::Core::Hashable
      
        # The number of failed trials that need to be seen before failing the NasJob. If
        # set to 0, Vertex AI decides how many trials must fail before the whole job
        # fails.
        # Corresponds to the JSON property `maxFailedTrialCount`
        # @return [Fixnum]
        attr_accessor :max_failed_trial_count
      
        # Required. The maximum number of trials to run in parallel.
        # Corresponds to the JSON property `maxParallelTrialCount`
        # @return [Fixnum]
        attr_accessor :max_parallel_trial_count
      
        # Required. The maximum number of Neural Architecture Search (NAS) trials to run.
        # Corresponds to the JSON property `maxTrialCount`
        # @return [Fixnum]
        attr_accessor :max_trial_count
      
        # Represents the spec of a CustomJob.
        # Corresponds to the JSON property `searchTrialJobSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1CustomJobSpec]
        attr_accessor :search_trial_job_spec
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @max_failed_trial_count = args[:max_failed_trial_count] if args.key?(:max_failed_trial_count)
          @max_parallel_trial_count = args[:max_parallel_trial_count] if args.key?(:max_parallel_trial_count)
          @max_trial_count = args[:max_trial_count] if args.key?(:max_trial_count)
          @search_trial_job_spec = args[:search_trial_job_spec] if args.key?(:search_trial_job_spec)
        end
      end
      
      # Represent spec for train trials.
      class GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec
        include Google::Apis::Core::Hashable
      
        # Required. Frequency of search trials to start train stage. Top N [
        # TrainTrialSpec.max_parallel_trial_count] search trials will be trained for
        # every M [TrainTrialSpec.frequency] trials searched.
        # Corresponds to the JSON property `frequency`
        # @return [Fixnum]
        attr_accessor :frequency
      
        # Required. The maximum number of trials to run in parallel.
        # Corresponds to the JSON property `maxParallelTrialCount`
        # @return [Fixnum]
        attr_accessor :max_parallel_trial_count
      
        # Represents the spec of a CustomJob.
        # Corresponds to the JSON property `trainTrialJobSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1CustomJobSpec]
        attr_accessor :train_trial_job_spec
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @frequency = args[:frequency] if args.key?(:frequency)
          @max_parallel_trial_count = args[:max_parallel_trial_count] if args.key?(:max_parallel_trial_count)
          @train_trial_job_spec = args[:train_trial_job_spec] if args.key?(:train_trial_job_spec)
        end
      end
      
      # Represents a uCAIP NasJob trial.
      class GoogleCloudAiplatformV1beta1NasTrial
        include Google::Apis::Core::Hashable
      
        # Output only. Time when the NasTrial's status changed to `SUCCEEDED` or `
        # INFEASIBLE`.
        # Corresponds to the JSON property `endTime`
        # @return [String]
        attr_accessor :end_time
      
        # A message representing a Measurement of a Trial. A Measurement contains the
        # Metrics got by executing a Trial using suggested hyperparameter values.
        # Corresponds to the JSON property `finalMeasurement`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Measurement]
        attr_accessor :final_measurement
      
        # Output only. The identifier of the NasTrial assigned by the service.
        # Corresponds to the JSON property `id`
        # @return [String]
        attr_accessor :id
      
        # Output only. Time when the NasTrial was started.
        # Corresponds to the JSON property `startTime`
        # @return [String]
        attr_accessor :start_time
      
        # Output only. The detailed state of the NasTrial.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor :state
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @end_time = args[:end_time] if args.key?(:end_time)
          @final_measurement = args[:final_measurement] if args.key?(:final_measurement)
          @id = args[:id] if args.key?(:id)
          @start_time = args[:start_time] if args.key?(:start_time)
          @state = args[:state] if args.key?(:state)
        end
      end
      
      # Represents a NasTrial details along with its parameters. If there is a
      # corresponding train NasTrial, the train NasTrial is also returned.
      class GoogleCloudAiplatformV1beta1NasTrialDetail
        include Google::Apis::Core::Hashable
      
        # Output only. Resource name of the NasTrialDetail.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # The parameters for the NasJob NasTrial.
        # Corresponds to the JSON property `parameters`
        # @return [String]
        attr_accessor :parameters
      
        # Represents a uCAIP NasJob trial.
        # Corresponds to the JSON property `searchTrial`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NasTrial]
        attr_accessor :search_trial
      
        # Represents a uCAIP NasJob trial.
        # Corresponds to the JSON property `trainTrial`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NasTrial]
        attr_accessor :train_trial
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @name = args[:name] if args.key?(:name)
          @parameters = args[:parameters] if args.key?(:parameters)
          @search_trial = args[:search_trial] if args.key?(:search_trial)
          @train_trial = args[:train_trial] if args.key?(:train_trial)
        end
      end
      
      # A query to find a number of similar entities.
      class GoogleCloudAiplatformV1beta1NearestNeighborQuery
        include Google::Apis::Core::Hashable
      
        # The embedding vector.
        # Corresponds to the JSON property `embedding`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NearestNeighborQueryEmbedding]
        attr_accessor :embedding
      
        # Optional. The entity id whose similar entities should be searched for. If
        # embedding is set, search will use embedding instead of entity_id.
        # Corresponds to the JSON property `entityId`
        # @return [String]
        attr_accessor :entity_id
      
        # Optional. The number of similar entities to be retrieved from feature view for
        # each query.
        # Corresponds to the JSON property `neighborCount`
        # @return [Fixnum]
        attr_accessor :neighbor_count
      
        # Parameters that can be overrided in each query to tune query latency and
        # recall.
        # Corresponds to the JSON property `parameters`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NearestNeighborQueryParameters]
        attr_accessor :parameters
      
        # Optional. Crowding is a constraint on a neighbor list produced by nearest
        # neighbor search requiring that no more than
        # sper_crowding_attribute_neighbor_count of the k neighbors returned have the
        # same value of crowding_attribute. It's used for improving result diversity.
        # Corresponds to the JSON property `perCrowdingAttributeNeighborCount`
        # @return [Fixnum]
        attr_accessor :per_crowding_attribute_neighbor_count
      
        # Optional. The list of string filters.
        # Corresponds to the JSON property `stringFilters`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NearestNeighborQueryStringFilter>]
        attr_accessor :string_filters
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @embedding = args[:embedding] if args.key?(:embedding)
          @entity_id = args[:entity_id] if args.key?(:entity_id)
          @neighbor_count = args[:neighbor_count] if args.key?(:neighbor_count)
          @parameters = args[:parameters] if args.key?(:parameters)
          @per_crowding_attribute_neighbor_count = args[:per_crowding_attribute_neighbor_count] if args.key?(:per_crowding_attribute_neighbor_count)
          @string_filters = args[:string_filters] if args.key?(:string_filters)
        end
      end
      
      # The embedding vector.
      class GoogleCloudAiplatformV1beta1NearestNeighborQueryEmbedding
        include Google::Apis::Core::Hashable
      
        # Optional. Individual value in the embedding.
        # Corresponds to the JSON property `value`
        # @return [Array<Float>]
        attr_accessor :value
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @value = args[:value] if args.key?(:value)
        end
      end
      
      # Parameters that can be overrided in each query to tune query latency and
      # recall.
      class GoogleCloudAiplatformV1beta1NearestNeighborQueryParameters
        include Google::Apis::Core::Hashable
      
        # Optional. The number of neighbors to find via approximate search before exact
        # reordering is performed; if set, this value must be > neighbor_count.
        # Corresponds to the JSON property `approximateNeighborCandidates`
        # @return [Fixnum]
        attr_accessor :approximate_neighbor_candidates
      
        # Optional. The fraction of the number of leaves to search, set at query time
        # allows user to tune search performance. This value increase result in both
        # search accuracy and latency increase. The value should be between 0.0 and 1.0.
        # Corresponds to the JSON property `leafNodesSearchFraction`
        # @return [Float]
        attr_accessor :leaf_nodes_search_fraction
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @approximate_neighbor_candidates = args[:approximate_neighbor_candidates] if args.key?(:approximate_neighbor_candidates)
          @leaf_nodes_search_fraction = args[:leaf_nodes_search_fraction] if args.key?(:leaf_nodes_search_fraction)
        end
      end
      
      # String filter is used to search a subset of the entities by using boolean
      # rules. For example: if a query specifies string filter with 'name = color,
      # allow_tokens = `red, blue`, deny_tokens = `purple`',' then that query will
      # match entities that are red or blue, but if those points are also purple, then
      # they will be excluded even if they are red/blue. Only string filter is
      # supported for now, numeric filter will be supported in the near future.
      class GoogleCloudAiplatformV1beta1NearestNeighborQueryStringFilter
        include Google::Apis::Core::Hashable
      
        # Optional. The allowed tokens.
        # Corresponds to the JSON property `allowTokens`
        # @return [Array<String>]
        attr_accessor :allow_tokens
      
        # Optional. The denied tokens.
        # Corresponds to the JSON property `denyTokens`
        # @return [Array<String>]
        attr_accessor :deny_tokens
      
        # Required. Column names in BigQuery that used as filters.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @allow_tokens = args[:allow_tokens] if args.key?(:allow_tokens)
          @deny_tokens = args[:deny_tokens] if args.key?(:deny_tokens)
          @name = args[:name] if args.key?(:name)
        end
      end
      
      # Runtime operation metadata with regard to Matching Engine Index.
      class GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadata
        include Google::Apis::Core::Hashable
      
        # The validation stats of the content (per file) to be inserted or updated on
        # the Matching Engine Index resource. Populated if contentsDeltaUri is provided
        # as part of Index.metadata. Please note that, currently for those files that
        # are broken or has unsupported file format, we will not have the stats for
        # those files.
        # Corresponds to the JSON property `contentValidationStats`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataContentValidationStats>]
        attr_accessor :content_validation_stats
      
        # The ingested data size in bytes.
        # Corresponds to the JSON property `dataBytesCount`
        # @return [Fixnum]
        attr_accessor :data_bytes_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @content_validation_stats = args[:content_validation_stats] if args.key?(:content_validation_stats)
          @data_bytes_count = args[:data_bytes_count] if args.key?(:data_bytes_count)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataContentValidationStats
        include Google::Apis::Core::Hashable
      
        # Number of records in this file we skipped due to validate errors.
        # Corresponds to the JSON property `invalidRecordCount`
        # @return [Fixnum]
        attr_accessor :invalid_record_count
      
        # The detail information of the partial failures encountered for those invalid
        # records that couldn't be parsed. Up to 50 partial errors will be reported.
        # Corresponds to the JSON property `partialErrors`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError>]
        attr_accessor :partial_errors
      
        # Cloud Storage URI pointing to the original file in user's bucket.
        # Corresponds to the JSON property `sourceGcsUri`
        # @return [String]
        attr_accessor :source_gcs_uri
      
        # Number of records in this file that were successfully processed.
        # Corresponds to the JSON property `validRecordCount`
        # @return [Fixnum]
        attr_accessor :valid_record_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @invalid_record_count = args[:invalid_record_count] if args.key?(:invalid_record_count)
          @partial_errors = args[:partial_errors] if args.key?(:partial_errors)
          @source_gcs_uri = args[:source_gcs_uri] if args.key?(:source_gcs_uri)
          @valid_record_count = args[:valid_record_count] if args.key?(:valid_record_count)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError
        include Google::Apis::Core::Hashable
      
        # Empty if the embedding id is failed to parse.
        # Corresponds to the JSON property `embeddingId`
        # @return [String]
        attr_accessor :embedding_id
      
        # A human-readable message that is shown to the user to help them fix the error.
        # Note that this message may change from time to time, your code should check
        # against error_type as the source of truth.
        # Corresponds to the JSON property `errorMessage`
        # @return [String]
        attr_accessor :error_message
      
        # The error type of this record.
        # Corresponds to the JSON property `errorType`
        # @return [String]
        attr_accessor :error_type
      
        # The original content of this record.
        # Corresponds to the JSON property `rawRecord`
        # @return [String]
        attr_accessor :raw_record
      
        # Cloud Storage URI pointing to the original file in user's bucket.
        # Corresponds to the JSON property `sourceGcsUri`
        # @return [String]
        attr_accessor :source_gcs_uri
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @embedding_id = args[:embedding_id] if args.key?(:embedding_id)
          @error_message = args[:error_message] if args.key?(:error_message)
          @error_type = args[:error_type] if args.key?(:error_type)
          @raw_record = args[:raw_record] if args.key?(:raw_record)
          @source_gcs_uri = args[:source_gcs_uri] if args.key?(:source_gcs_uri)
        end
      end
      
      # Nearest neighbors for one query.
      class GoogleCloudAiplatformV1beta1NearestNeighbors
        include Google::Apis::Core::Hashable
      
        # All its neighbors.
        # Corresponds to the JSON property `neighbors`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NearestNeighborsNeighbor>]
        attr_accessor :neighbors
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @neighbors = args[:neighbors] if args.key?(:neighbors)
        end
      end
      
      # A neighbor of the query vector.
      class GoogleCloudAiplatformV1beta1NearestNeighborsNeighbor
        include Google::Apis::Core::Hashable
      
        # The distance between the neighbor and the query vector.
        # Corresponds to the JSON property `distance`
        # @return [Float]
        attr_accessor :distance
      
        # The id of the similar entity.
        # Corresponds to the JSON property `entityId`
        # @return [String]
        attr_accessor :entity_id
      
        # Response message for FeatureOnlineStoreService.FetchFeatureValues
        # Corresponds to the JSON property `entityKeyValues`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FetchFeatureValuesResponse]
        attr_accessor :entity_key_values
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @distance = args[:distance] if args.key?(:distance)
          @entity_id = args[:entity_id] if args.key?(:entity_id)
          @entity_key_values = args[:entity_key_values] if args.key?(:entity_key_values)
        end
      end
      
      # Neighbors for example-based explanations.
      class GoogleCloudAiplatformV1beta1Neighbor
        include Google::Apis::Core::Hashable
      
        # Output only. The neighbor distance.
        # Corresponds to the JSON property `neighborDistance`
        # @return [Float]
        attr_accessor :neighbor_distance
      
        # Output only. The neighbor id.
        # Corresponds to the JSON property `neighborId`
        # @return [String]
        attr_accessor :neighbor_id
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @neighbor_distance = args[:neighbor_distance] if args.key?(:neighbor_distance)
          @neighbor_id = args[:neighbor_id] if args.key?(:neighbor_id)
        end
      end
      
      # Network spec.
      class GoogleCloudAiplatformV1beta1NetworkSpec
        include Google::Apis::Core::Hashable
      
        # Whether to enable public internet access. Default false.
        # Corresponds to the JSON property `enableInternetAccess`
        # @return [Boolean]
        attr_accessor :enable_internet_access
        alias_method :enable_internet_access?, :enable_internet_access
      
        # The full name of the Google Compute Engine [network](https://cloud.google.com//
        # compute/docs/networks-and-firewalls#networks)
        # Corresponds to the JSON property `network`
        # @return [String]
        attr_accessor :network
      
        # The name of the subnet that this instance is in. Format: `projects/`
        # project_id_or_number`/regions/`region`/subnetworks/`subnetwork_id``
        # Corresponds to the JSON property `subnetwork`
        # @return [String]
        attr_accessor :subnetwork
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @enable_internet_access = args[:enable_internet_access] if args.key?(:enable_internet_access)
          @network = args[:network] if args.key?(:network)
          @subnetwork = args[:subnetwork] if args.key?(:subnetwork)
        end
      end
      
      # Represents a mount configuration for Network File System (NFS) to mount.
      class GoogleCloudAiplatformV1beta1NfsMount
        include Google::Apis::Core::Hashable
      
        # Required. Destination mount path. The NFS will be mounted for the user under /
        # mnt/nfs/
        # Corresponds to the JSON property `mountPoint`
        # @return [String]
        attr_accessor :mount_point
      
        # Required. Source path exported from NFS server. Has to start with '/', and
        # combined with the ip address, it indicates the source mount path in the form
        # of `server:path`
        # Corresponds to the JSON property `path`
        # @return [String]
        attr_accessor :path
      
        # Required. IP address of the NFS server.
        # Corresponds to the JSON property `server`
        # @return [String]
        attr_accessor :server
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @mount_point = args[:mount_point] if args.key?(:mount_point)
          @path = args[:path] if args.key?(:path)
          @server = args[:server] if args.key?(:server)
        end
      end
      
      # The euc configuration of NotebookRuntimeTemplate.
      class GoogleCloudAiplatformV1beta1NotebookEucConfig
        include Google::Apis::Core::Hashable
      
        # Output only. Whether ActAs check is bypassed for service account attached to
        # the VM. If false, we need ActAs check for the default Compute Engine Service
        # account. When a Runtime is created, a VM is allocated using Default Compute
        # Engine Service Account. Any user requesting to use this Runtime requires
        # Service Account User (ActAs) permission over this SA. If true, Runtime owner
        # is using EUC and does not require the above permission as VM no longer use
        # default Compute Engine SA, but a P4SA.
        # Corresponds to the JSON property `bypassActasCheck`
        # @return [Boolean]
        attr_accessor :bypass_actas_check
        alias_method :bypass_actas_check?, :bypass_actas_check
      
        # Input only. Whether EUC is disabled in this NotebookRuntimeTemplate. In proto3,
        # the default value of a boolean is false. In this way, by default EUC will be
        # enabled for NotebookRuntimeTemplate.
        # Corresponds to the JSON property `eucDisabled`
        # @return [Boolean]
        attr_accessor :euc_disabled
        alias_method :euc_disabled?, :euc_disabled
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bypass_actas_check = args[:bypass_actas_check] if args.key?(:bypass_actas_check)
          @euc_disabled = args[:euc_disabled] if args.key?(:euc_disabled)
        end
      end
      
      # The idle shutdown configuration of NotebookRuntimeTemplate, which contains the
      # idle_timeout as required field.
      class GoogleCloudAiplatformV1beta1NotebookIdleShutdownConfig
        include Google::Apis::Core::Hashable
      
        # Whether Idle Shutdown is disabled in this NotebookRuntimeTemplate.
        # Corresponds to the JSON property `idleShutdownDisabled`
        # @return [Boolean]
        attr_accessor :idle_shutdown_disabled
        alias_method :idle_shutdown_disabled?, :idle_shutdown_disabled
      
        # Required. Duration is accurate to the second. In Notebook, Idle Timeout is
        # accurate to minute so the range of idle_timeout (second) is: 10 * 60 ~ 1440 *
        # 60.
        # Corresponds to the JSON property `idleTimeout`
        # @return [String]
        attr_accessor :idle_timeout
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @idle_shutdown_disabled = args[:idle_shutdown_disabled] if args.key?(:idle_shutdown_disabled)
          @idle_timeout = args[:idle_timeout] if args.key?(:idle_timeout)
        end
      end
      
      # A runtime is a virtual machine allocated to a particular user for a particular
      # Notebook file on temporary basis with lifetime limited to 24 hours.
      class GoogleCloudAiplatformV1beta1NotebookRuntime
        include Google::Apis::Core::Hashable
      
        # Output only. Timestamp when this NotebookRuntime was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # The description of the NotebookRuntime.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor :description
      
        # Required. The display name of the NotebookRuntime. The name can be up to 128
        # characters long and can consist of any UTF-8 characters.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Output only. Timestamp when this NotebookRuntime will be expired: 1. System
        # Predefined NotebookRuntime: 24 hours after creation. After expiration, system
        # predifined runtime will be deleted. 2. User created NotebookRuntime: 6 months
        # after last upgrade. After expiration, user created runtime will be stopped and
        # allowed for upgrade.
        # Corresponds to the JSON property `expirationTime`
        # @return [String]
        attr_accessor :expiration_time
      
        # Output only. The health state of the NotebookRuntime.
        # Corresponds to the JSON property `healthState`
        # @return [String]
        attr_accessor :health_state
      
        # The labels with user-defined metadata to organize your NotebookRuntime. Label
        # keys and values can be no longer than 64 characters (Unicode codepoints), can
        # only contain lowercase letters, numeric characters, underscores and dashes.
        # International characters are allowed. No more than 64 user labels can be
        # associated with one NotebookRuntime (System labels are excluded). See https://
        # goo.gl/xmQnxf for more information and examples of labels. System reserved
        # label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
        # Following system labels exist for NotebookRuntime: * "aiplatform.googleapis.
        # com/notebook_runtime_gce_instance_id": output only, its value is the Compute
        # Engine instance id. * "aiplatform.googleapis.com/
        # colab_enterprise_entry_service": its value is either "bigquery" or "vertex";
        # if absent, it should be "vertex". This is to describe the entry service,
        # either BigQuery or Vertex.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Output only. The resource name of the NotebookRuntime.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Points to a NotebookRuntimeTemplateRef.
        # Corresponds to the JSON property `notebookRuntimeTemplateRef`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NotebookRuntimeTemplateRef]
        attr_accessor :notebook_runtime_template_ref
      
        # Output only. The type of the notebook runtime.
        # Corresponds to the JSON property `notebookRuntimeType`
        # @return [String]
        attr_accessor :notebook_runtime_type
      
        # Output only. The proxy endpoint used to access the NotebookRuntime.
        # Corresponds to the JSON property `proxyUri`
        # @return [String]
        attr_accessor :proxy_uri
      
        # Output only. The runtime (instance) state of the NotebookRuntime.
        # Corresponds to the JSON property `runtimeState`
        # @return [String]
        attr_accessor :runtime_state
      
        # Required. The user email of the NotebookRuntime.
        # Corresponds to the JSON property `runtimeUser`
        # @return [String]
        attr_accessor :runtime_user
      
        # Output only. The service account that the NotebookRuntime workload runs as.
        # Corresponds to the JSON property `serviceAccount`
        # @return [String]
        attr_accessor :service_account
      
        # Output only. Timestamp when this NotebookRuntime was most recently updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        # Output only. The VM os image version of NotebookRuntime.
        # Corresponds to the JSON property `version`
        # @return [String]
        attr_accessor :version
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @description = args[:description] if args.key?(:description)
          @display_name = args[:display_name] if args.key?(:display_name)
          @expiration_time = args[:expiration_time] if args.key?(:expiration_time)
          @health_state = args[:health_state] if args.key?(:health_state)
          @labels = args[:labels] if args.key?(:labels)
          @name = args[:name] if args.key?(:name)
          @notebook_runtime_template_ref = args[:notebook_runtime_template_ref] if args.key?(:notebook_runtime_template_ref)
          @notebook_runtime_type = args[:notebook_runtime_type] if args.key?(:notebook_runtime_type)
          @proxy_uri = args[:proxy_uri] if args.key?(:proxy_uri)
          @runtime_state = args[:runtime_state] if args.key?(:runtime_state)
          @runtime_user = args[:runtime_user] if args.key?(:runtime_user)
          @service_account = args[:service_account] if args.key?(:service_account)
          @update_time = args[:update_time] if args.key?(:update_time)
          @version = args[:version] if args.key?(:version)
        end
      end
      
      # A template that specifies runtime configurations such as machine type, runtime
      # version, network configurations, etc. Multiple runtimes can be created from a
      # runtime template.
      class GoogleCloudAiplatformV1beta1NotebookRuntimeTemplate
        include Google::Apis::Core::Hashable
      
        # Output only. Timestamp when this NotebookRuntimeTemplate was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Represents the spec of persistent disk options.
        # Corresponds to the JSON property `dataPersistentDiskSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PersistentDiskSpec]
        attr_accessor :data_persistent_disk_spec
      
        # The description of the NotebookRuntimeTemplate.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor :description
      
        # Required. The display name of the NotebookRuntimeTemplate. The name can be up
        # to 128 characters long and can consist of any UTF-8 characters.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Used to perform consistent read-modify-write updates. If not set, a blind "
        # overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # The euc configuration of NotebookRuntimeTemplate.
        # Corresponds to the JSON property `eucConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NotebookEucConfig]
        attr_accessor :euc_config
      
        # The idle shutdown configuration of NotebookRuntimeTemplate, which contains the
        # idle_timeout as required field.
        # Corresponds to the JSON property `idleShutdownConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NotebookIdleShutdownConfig]
        attr_accessor :idle_shutdown_config
      
        # Output only. The default template to use if not specified.
        # Corresponds to the JSON property `isDefault`
        # @return [Boolean]
        attr_accessor :is_default
        alias_method :is_default?, :is_default
      
        # The labels with user-defined metadata to organize the NotebookRuntimeTemplates.
        # Label keys and values can be no longer than 64 characters (Unicode codepoints)
        # , can only contain lowercase letters, numeric characters, underscores and
        # dashes. International characters are allowed. See https://goo.gl/xmQnxf for
        # more information and examples of labels.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Specification of a single machine.
        # Corresponds to the JSON property `machineSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MachineSpec]
        attr_accessor :machine_spec
      
        # Output only. The resource name of the NotebookRuntimeTemplate.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Network spec.
        # Corresponds to the JSON property `networkSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NetworkSpec]
        attr_accessor :network_spec
      
        # Optional. Immutable. The type of the notebook runtime template.
        # Corresponds to the JSON property `notebookRuntimeType`
        # @return [String]
        attr_accessor :notebook_runtime_type
      
        # The service account that the runtime workload runs as. You can use any service
        # account within the same project, but you must have the service account user
        # permission to use the instance. If not specified, the [Compute Engine default
        # service account](https://cloud.google.com/compute/docs/access/service-accounts#
        # default_service_account) is used.
        # Corresponds to the JSON property `serviceAccount`
        # @return [String]
        attr_accessor :service_account
      
        # Output only. Timestamp when this NotebookRuntimeTemplate was most recently
        # updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @data_persistent_disk_spec = args[:data_persistent_disk_spec] if args.key?(:data_persistent_disk_spec)
          @description = args[:description] if args.key?(:description)
          @display_name = args[:display_name] if args.key?(:display_name)
          @etag = args[:etag] if args.key?(:etag)
          @euc_config = args[:euc_config] if args.key?(:euc_config)
          @idle_shutdown_config = args[:idle_shutdown_config] if args.key?(:idle_shutdown_config)
          @is_default = args[:is_default] if args.key?(:is_default)
          @labels = args[:labels] if args.key?(:labels)
          @machine_spec = args[:machine_spec] if args.key?(:machine_spec)
          @name = args[:name] if args.key?(:name)
          @network_spec = args[:network_spec] if args.key?(:network_spec)
          @notebook_runtime_type = args[:notebook_runtime_type] if args.key?(:notebook_runtime_type)
          @service_account = args[:service_account] if args.key?(:service_account)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # Points to a NotebookRuntimeTemplateRef.
      class GoogleCloudAiplatformV1beta1NotebookRuntimeTemplateRef
        include Google::Apis::Core::Hashable
      
        # Immutable. A resource name of the NotebookRuntimeTemplate.
        # Corresponds to the JSON property `notebookRuntimeTemplate`
        # @return [String]
        attr_accessor :notebook_runtime_template
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @notebook_runtime_template = args[:notebook_runtime_template] if args.key?(:notebook_runtime_template)
        end
      end
      
      # Request message for JobService.PauseModelDeploymentMonitoringJob.
      class GoogleCloudAiplatformV1beta1PauseModelDeploymentMonitoringJobRequest
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Request message for ScheduleService.PauseSchedule.
      class GoogleCloudAiplatformV1beta1PauseScheduleRequest
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Represents the spec of persistent disk options.
      class GoogleCloudAiplatformV1beta1PersistentDiskSpec
        include Google::Apis::Core::Hashable
      
        # Size in GB of the disk (default is 100GB).
        # Corresponds to the JSON property `diskSizeGb`
        # @return [Fixnum]
        attr_accessor :disk_size_gb
      
        # Type of the disk (default is "pd-standard"). Valid values: "pd-ssd" (
        # Persistent Disk Solid State Drive) "pd-standard" (Persistent Disk Hard Disk
        # Drive) "pd-balanced" (Balanced Persistent Disk) "pd-extreme" (Extreme
        # Persistent Disk)
        # Corresponds to the JSON property `diskType`
        # @return [String]
        attr_accessor :disk_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @disk_size_gb = args[:disk_size_gb] if args.key?(:disk_size_gb)
          @disk_type = args[:disk_type] if args.key?(:disk_type)
        end
      end
      
      # Represents long-lasting resources that are dedicated to users to runs custom
      # workloads. A PersistentResource can have multiple node pools and each node
      # pool can have its own machine spec.
      class GoogleCloudAiplatformV1beta1PersistentResource
        include Google::Apis::Core::Hashable
      
        # Output only. Time when the PersistentResource was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Optional. The display name of the PersistentResource. The name can be up to
        # 128 characters long and can consist of any UTF-8 characters.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Represents a customer-managed encryption key spec that can be applied to a top-
        # level resource.
        # Corresponds to the JSON property `encryptionSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EncryptionSpec]
        attr_accessor :encryption_spec
      
        # The `Status` type defines a logical error model that is suitable for different
        # programming environments, including REST APIs and RPC APIs. It is used by [
        # gRPC](https://github.com/grpc). Each `Status` message contains three pieces of
        # data: error code, error message, and error details. You can find out more
        # about this error model and how to work with it in the [API Design Guide](https:
        # //cloud.google.com/apis/design/errors).
        # Corresponds to the JSON property `error`
        # @return [Google::Apis::AiplatformV1beta1::GoogleRpcStatus]
        attr_accessor :error
      
        # Optional. The labels with user-defined metadata to organize PersistentResource.
        # Label keys and values can be no longer than 64 characters (Unicode codepoints)
        # , can only contain lowercase letters, numeric characters, underscores and
        # dashes. International characters are allowed. See https://goo.gl/xmQnxf for
        # more information and examples of labels.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Immutable. Resource name of a PersistentResource.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Optional. The full name of the Compute Engine [network](/compute/docs/networks-
        # and-firewalls#networks) to peered with Vertex AI to host the persistent
        # resources. For example, `projects/12345/global/networks/myVPC`. [Format](/
        # compute/docs/reference/rest/v1/networks/insert) is of the form `projects/`
        # project`/global/networks/`network``. Where `project` is a project number, as
        # in `12345`, and `network` is a network name. To specify this field, you must
        # have already [configured VPC Network Peering for Vertex AI](https://cloud.
        # google.com/vertex-ai/docs/general/vpc-peering). If this field is left
        # unspecified, the resources aren't peered with any network.
        # Corresponds to the JSON property `network`
        # @return [String]
        attr_accessor :network
      
        # Optional. A list of names for the reserved IP ranges under the VPC network
        # that can be used for this persistent resource. If set, we will deploy the
        # persistent resource within the provided IP ranges. Otherwise, the persistent
        # resource is deployed to any IP ranges under the provided VPC network. Example:
        # ['vertex-ai-ip-range'].
        # Corresponds to the JSON property `reservedIpRanges`
        # @return [Array<String>]
        attr_accessor :reserved_ip_ranges
      
        # Required. The spec of the pools of different resources.
        # Corresponds to the JSON property `resourcePools`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ResourcePool>]
        attr_accessor :resource_pools
      
        # Persistent Cluster runtime information as output
        # Corresponds to the JSON property `resourceRuntime`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ResourceRuntime]
        attr_accessor :resource_runtime
      
        # Configuration for the runtime on a PersistentResource instance, including but
        # not limited to: * Service accounts used to run the workloads. * Whether to
        # make it a dedicated Ray Cluster.
        # Corresponds to the JSON property `resourceRuntimeSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ResourceRuntimeSpec]
        attr_accessor :resource_runtime_spec
      
        # Output only. Time when the PersistentResource for the first time entered the `
        # RUNNING` state.
        # Corresponds to the JSON property `startTime`
        # @return [String]
        attr_accessor :start_time
      
        # Output only. The detailed state of a Study.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor :state
      
        # Output only. Time when the PersistentResource was most recently updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @display_name = args[:display_name] if args.key?(:display_name)
          @encryption_spec = args[:encryption_spec] if args.key?(:encryption_spec)
          @error = args[:error] if args.key?(:error)
          @labels = args[:labels] if args.key?(:labels)
          @name = args[:name] if args.key?(:name)
          @network = args[:network] if args.key?(:network)
          @reserved_ip_ranges = args[:reserved_ip_ranges] if args.key?(:reserved_ip_ranges)
          @resource_pools = args[:resource_pools] if args.key?(:resource_pools)
          @resource_runtime = args[:resource_runtime] if args.key?(:resource_runtime)
          @resource_runtime_spec = args[:resource_runtime_spec] if args.key?(:resource_runtime_spec)
          @start_time = args[:start_time] if args.key?(:start_time)
          @state = args[:state] if args.key?(:state)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # An instance of a machine learning PipelineJob.
      class GoogleCloudAiplatformV1beta1PipelineJob
        include Google::Apis::Core::Hashable
      
        # Output only. Pipeline creation time.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # The display name of the Pipeline. The name can be up to 128 characters long
        # and can consist of any UTF-8 characters.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Represents a customer-managed encryption key spec that can be applied to a top-
        # level resource.
        # Corresponds to the JSON property `encryptionSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EncryptionSpec]
        attr_accessor :encryption_spec
      
        # Output only. Pipeline end time.
        # Corresponds to the JSON property `endTime`
        # @return [String]
        attr_accessor :end_time
      
        # The `Status` type defines a logical error model that is suitable for different
        # programming environments, including REST APIs and RPC APIs. It is used by [
        # gRPC](https://github.com/grpc). Each `Status` message contains three pieces of
        # data: error code, error message, and error details. You can find out more
        # about this error model and how to work with it in the [API Design Guide](https:
        # //cloud.google.com/apis/design/errors).
        # Corresponds to the JSON property `error`
        # @return [Google::Apis::AiplatformV1beta1::GoogleRpcStatus]
        attr_accessor :error
      
        # The runtime detail of PipelineJob.
        # Corresponds to the JSON property `jobDetail`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PipelineJobDetail]
        attr_accessor :job_detail
      
        # The labels with user-defined metadata to organize PipelineJob. Label keys and
        # values can be no longer than 64 characters (Unicode codepoints), can only
        # contain lowercase letters, numeric characters, underscores and dashes.
        # International characters are allowed. See https://goo.gl/xmQnxf for more
        # information and examples of labels. Note there is some reserved label key for
        # Vertex AI Pipelines. - `vertex-ai-pipelines-run-billing-id`, user set value
        # will get overrided.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Output only. The resource name of the PipelineJob.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # The full name of the Compute Engine [network](/compute/docs/networks-and-
        # firewalls#networks) to which the Pipeline Job's workload should be peered. For
        # example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/
        # reference/rest/v1/networks/insert) is of the form `projects/`project`/global/
        # networks/`network``. Where `project` is a project number, as in `12345`, and `
        # network` is a network name. Private services access must already be configured
        # for the network. Pipeline job will apply the network configuration to the
        # Google Cloud resources being launched, if applied, such as Vertex AI Training
        # or Dataflow job. If left unspecified, the workload is not peered with any
        # network.
        # Corresponds to the JSON property `network`
        # @return [String]
        attr_accessor :network
      
        # The spec of the pipeline.
        # Corresponds to the JSON property `pipelineSpec`
        # @return [Hash<String,Object>]
        attr_accessor :pipeline_spec
      
        # A list of names for the reserved ip ranges under the VPC network that can be
        # used for this Pipeline Job's workload. If set, we will deploy the Pipeline Job'
        # s workload within the provided ip ranges. Otherwise, the job will be deployed
        # to any ip ranges under the provided VPC network. Example: ['vertex-ai-ip-range'
        # ].
        # Corresponds to the JSON property `reservedIpRanges`
        # @return [Array<String>]
        attr_accessor :reserved_ip_ranges
      
        # The runtime config of a PipelineJob.
        # Corresponds to the JSON property `runtimeConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig]
        attr_accessor :runtime_config
      
        # Output only. The schedule resource name. Only returned if the Pipeline is
        # created by Schedule API.
        # Corresponds to the JSON property `scheduleName`
        # @return [String]
        attr_accessor :schedule_name
      
        # The service account that the pipeline workload runs as. If not specified, the
        # Compute Engine default service account in the project will be used. See https:/
        # /cloud.google.com/compute/docs/access/service-accounts#default_service_account
        # Users starting the pipeline must have the `iam.serviceAccounts.actAs`
        # permission on this service account.
        # Corresponds to the JSON property `serviceAccount`
        # @return [String]
        attr_accessor :service_account
      
        # Output only. Pipeline start time.
        # Corresponds to the JSON property `startTime`
        # @return [String]
        attr_accessor :start_time
      
        # Output only. The detailed state of the job.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor :state
      
        # Pipeline template metadata if PipelineJob.template_uri is from supported
        # template registry. Currently, the only supported registry is Artifact Registry.
        # Corresponds to the JSON property `templateMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PipelineTemplateMetadata]
        attr_accessor :template_metadata
      
        # A template uri from where the PipelineJob.pipeline_spec, if empty, will be
        # downloaded. Currently, only uri from Vertex Template Registry & Gallery is
        # supported. Reference to https://cloud.google.com/vertex-ai/docs/pipelines/
        # create-pipeline-template.
        # Corresponds to the JSON property `templateUri`
        # @return [String]
        attr_accessor :template_uri
      
        # Output only. Timestamp when this PipelineJob was most recently updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @display_name = args[:display_name] if args.key?(:display_name)
          @encryption_spec = args[:encryption_spec] if args.key?(:encryption_spec)
          @end_time = args[:end_time] if args.key?(:end_time)
          @error = args[:error] if args.key?(:error)
          @job_detail = args[:job_detail] if args.key?(:job_detail)
          @labels = args[:labels] if args.key?(:labels)
          @name = args[:name] if args.key?(:name)
          @network = args[:network] if args.key?(:network)
          @pipeline_spec = args[:pipeline_spec] if args.key?(:pipeline_spec)
          @reserved_ip_ranges = args[:reserved_ip_ranges] if args.key?(:reserved_ip_ranges)
          @runtime_config = args[:runtime_config] if args.key?(:runtime_config)
          @schedule_name = args[:schedule_name] if args.key?(:schedule_name)
          @service_account = args[:service_account] if args.key?(:service_account)
          @start_time = args[:start_time] if args.key?(:start_time)
          @state = args[:state] if args.key?(:state)
          @template_metadata = args[:template_metadata] if args.key?(:template_metadata)
          @template_uri = args[:template_uri] if args.key?(:template_uri)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # The runtime detail of PipelineJob.
      class GoogleCloudAiplatformV1beta1PipelineJobDetail
        include Google::Apis::Core::Hashable
      
        # Instance of a general context.
        # Corresponds to the JSON property `pipelineContext`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Context]
        attr_accessor :pipeline_context
      
        # Instance of a general context.
        # Corresponds to the JSON property `pipelineRunContext`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Context]
        attr_accessor :pipeline_run_context
      
        # Output only. The runtime details of the tasks under the pipeline.
        # Corresponds to the JSON property `taskDetails`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PipelineTaskDetail>]
        attr_accessor :task_details
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @pipeline_context = args[:pipeline_context] if args.key?(:pipeline_context)
          @pipeline_run_context = args[:pipeline_run_context] if args.key?(:pipeline_run_context)
          @task_details = args[:task_details] if args.key?(:task_details)
        end
      end
      
      # The runtime config of a PipelineJob.
      class GoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig
        include Google::Apis::Core::Hashable
      
        # Represents the failure policy of a pipeline. Currently, the default of a
        # pipeline is that the pipeline will continue to run until no more tasks can be
        # executed, also known as PIPELINE_FAILURE_POLICY_FAIL_SLOW. However, if a
        # pipeline is set to PIPELINE_FAILURE_POLICY_FAIL_FAST, it will stop scheduling
        # any new tasks when a task has failed. Any scheduled tasks will continue to
        # completion.
        # Corresponds to the JSON property `failurePolicy`
        # @return [String]
        attr_accessor :failure_policy
      
        # Required. A path in a Cloud Storage bucket, which will be treated as the root
        # output directory of the pipeline. It is used by the system to generate the
        # paths of output artifacts. The artifact paths are generated with a sub-path
        # pattern ``job_id`/`task_id`/`output_key`` under the specified output directory.
        # The service account specified in this pipeline must have the `storage.objects.
        # get` and `storage.objects.create` permissions for this bucket.
        # Corresponds to the JSON property `gcsOutputDirectory`
        # @return [String]
        attr_accessor :gcs_output_directory
      
        # The runtime artifacts of the PipelineJob. The key will be the input artifact
        # name and the value would be one of the InputArtifact.
        # Corresponds to the JSON property `inputArtifacts`
        # @return [Hash<String,Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PipelineJobRuntimeConfigInputArtifact>]
        attr_accessor :input_artifacts
      
        # The runtime parameters of the PipelineJob. The parameters will be passed into
        # PipelineJob.pipeline_spec to replace the placeholders at runtime. This field
        # is used by pipelines built using `PipelineJob.pipeline_spec.schema_version` 2.
        # 1.0, such as pipelines built using Kubeflow Pipelines SDK 1.9 or higher and
        # the v2 DSL.
        # Corresponds to the JSON property `parameterValues`
        # @return [Hash<String,Object>]
        attr_accessor :parameter_values
      
        # Deprecated. Use RuntimeConfig.parameter_values instead. The runtime parameters
        # of the PipelineJob. The parameters will be passed into PipelineJob.
        # pipeline_spec to replace the placeholders at runtime. This field is used by
        # pipelines built using `PipelineJob.pipeline_spec.schema_version` 2.0.0 or
        # lower, such as pipelines built using Kubeflow Pipelines SDK 1.8 or lower.
        # Corresponds to the JSON property `parameters`
        # @return [Hash<String,Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Value>]
        attr_accessor :parameters
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @failure_policy = args[:failure_policy] if args.key?(:failure_policy)
          @gcs_output_directory = args[:gcs_output_directory] if args.key?(:gcs_output_directory)
          @input_artifacts = args[:input_artifacts] if args.key?(:input_artifacts)
          @parameter_values = args[:parameter_values] if args.key?(:parameter_values)
          @parameters = args[:parameters] if args.key?(:parameters)
        end
      end
      
      # The type of an input artifact.
      class GoogleCloudAiplatformV1beta1PipelineJobRuntimeConfigInputArtifact
        include Google::Apis::Core::Hashable
      
        # Artifact resource id from MLMD. Which is the last portion of an artifact
        # resource name: `projects/`project`/locations/`location`/metadataStores/default/
        # artifacts/`artifact_id``. The artifact must stay within the same project,
        # location and default metadatastore as the pipeline.
        # Corresponds to the JSON property `artifactId`
        # @return [String]
        attr_accessor :artifact_id
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @artifact_id = args[:artifact_id] if args.key?(:artifact_id)
        end
      end
      
      # The runtime detail of a task execution.
      class GoogleCloudAiplatformV1beta1PipelineTaskDetail
        include Google::Apis::Core::Hashable
      
        # Output only. Task create time.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Output only. Task end time.
        # Corresponds to the JSON property `endTime`
        # @return [String]
        attr_accessor :end_time
      
        # The `Status` type defines a logical error model that is suitable for different
        # programming environments, including REST APIs and RPC APIs. It is used by [
        # gRPC](https://github.com/grpc). Each `Status` message contains three pieces of
        # data: error code, error message, and error details. You can find out more
        # about this error model and how to work with it in the [API Design Guide](https:
        # //cloud.google.com/apis/design/errors).
        # Corresponds to the JSON property `error`
        # @return [Google::Apis::AiplatformV1beta1::GoogleRpcStatus]
        attr_accessor :error
      
        # Instance of a general execution.
        # Corresponds to the JSON property `execution`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Execution]
        attr_accessor :execution
      
        # The runtime detail of a pipeline executor.
        # Corresponds to the JSON property `executorDetail`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetail]
        attr_accessor :executor_detail
      
        # Output only. The runtime input artifacts of the task.
        # Corresponds to the JSON property `inputs`
        # @return [Hash<String,Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PipelineTaskDetailArtifactList>]
        attr_accessor :inputs
      
        # Output only. The runtime output artifacts of the task.
        # Corresponds to the JSON property `outputs`
        # @return [Hash<String,Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PipelineTaskDetailArtifactList>]
        attr_accessor :outputs
      
        # Output only. The id of the parent task if the task is within a component scope.
        # Empty if the task is at the root level.
        # Corresponds to the JSON property `parentTaskId`
        # @return [Fixnum]
        attr_accessor :parent_task_id
      
        # Output only. A list of task status. This field keeps a record of task status
        # evolving over time.
        # Corresponds to the JSON property `pipelineTaskStatus`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus>]
        attr_accessor :pipeline_task_status
      
        # Output only. Task start time.
        # Corresponds to the JSON property `startTime`
        # @return [String]
        attr_accessor :start_time
      
        # Output only. State of the task.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor :state
      
        # Output only. The system generated ID of the task.
        # Corresponds to the JSON property `taskId`
        # @return [Fixnum]
        attr_accessor :task_id
      
        # Output only. The user specified name of the task that is defined in
        # pipeline_spec.
        # Corresponds to the JSON property `taskName`
        # @return [String]
        attr_accessor :task_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @end_time = args[:end_time] if args.key?(:end_time)
          @error = args[:error] if args.key?(:error)
          @execution = args[:execution] if args.key?(:execution)
          @executor_detail = args[:executor_detail] if args.key?(:executor_detail)
          @inputs = args[:inputs] if args.key?(:inputs)
          @outputs = args[:outputs] if args.key?(:outputs)
          @parent_task_id = args[:parent_task_id] if args.key?(:parent_task_id)
          @pipeline_task_status = args[:pipeline_task_status] if args.key?(:pipeline_task_status)
          @start_time = args[:start_time] if args.key?(:start_time)
          @state = args[:state] if args.key?(:state)
          @task_id = args[:task_id] if args.key?(:task_id)
          @task_name = args[:task_name] if args.key?(:task_name)
        end
      end
      
      # A list of artifact metadata.
      class GoogleCloudAiplatformV1beta1PipelineTaskDetailArtifactList
        include Google::Apis::Core::Hashable
      
        # Output only. A list of artifact metadata.
        # Corresponds to the JSON property `artifacts`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Artifact>]
        attr_accessor :artifacts
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @artifacts = args[:artifacts] if args.key?(:artifacts)
        end
      end
      
      # A single record of the task status.
      class GoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus
        include Google::Apis::Core::Hashable
      
        # The `Status` type defines a logical error model that is suitable for different
        # programming environments, including REST APIs and RPC APIs. It is used by [
        # gRPC](https://github.com/grpc). Each `Status` message contains three pieces of
        # data: error code, error message, and error details. You can find out more
        # about this error model and how to work with it in the [API Design Guide](https:
        # //cloud.google.com/apis/design/errors).
        # Corresponds to the JSON property `error`
        # @return [Google::Apis::AiplatformV1beta1::GoogleRpcStatus]
        attr_accessor :error
      
        # Output only. The state of the task.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor :state
      
        # Output only. Update time of this status.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @error = args[:error] if args.key?(:error)
          @state = args[:state] if args.key?(:state)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # The runtime detail of a pipeline executor.
      class GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetail
        include Google::Apis::Core::Hashable
      
        # The detail of a container execution. It contains the job names of the
        # lifecycle of a container execution.
        # Corresponds to the JSON property `containerDetail`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail]
        attr_accessor :container_detail
      
        # The detailed info for a custom job executor.
        # Corresponds to the JSON property `customJobDetail`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailCustomJobDetail]
        attr_accessor :custom_job_detail
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @container_detail = args[:container_detail] if args.key?(:container_detail)
          @custom_job_detail = args[:custom_job_detail] if args.key?(:custom_job_detail)
        end
      end
      
      # The detail of a container execution. It contains the job names of the
      # lifecycle of a container execution.
      class GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail
        include Google::Apis::Core::Hashable
      
        # Output only. The names of the previously failed CustomJob for the main
        # container executions. The list includes the all attempts in chronological
        # order.
        # Corresponds to the JSON property `failedMainJobs`
        # @return [Array<String>]
        attr_accessor :failed_main_jobs
      
        # Output only. The names of the previously failed CustomJob for the pre-caching-
        # check container executions. This job will be available if the PipelineJob.
        # pipeline_spec specifies the `pre_caching_check` hook in the lifecycle events.
        # The list includes the all attempts in chronological order.
        # Corresponds to the JSON property `failedPreCachingCheckJobs`
        # @return [Array<String>]
        attr_accessor :failed_pre_caching_check_jobs
      
        # Output only. The name of the CustomJob for the main container execution.
        # Corresponds to the JSON property `mainJob`
        # @return [String]
        attr_accessor :main_job
      
        # Output only. The name of the CustomJob for the pre-caching-check container
        # execution. This job will be available if the PipelineJob.pipeline_spec
        # specifies the `pre_caching_check` hook in the lifecycle events.
        # Corresponds to the JSON property `preCachingCheckJob`
        # @return [String]
        attr_accessor :pre_caching_check_job
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @failed_main_jobs = args[:failed_main_jobs] if args.key?(:failed_main_jobs)
          @failed_pre_caching_check_jobs = args[:failed_pre_caching_check_jobs] if args.key?(:failed_pre_caching_check_jobs)
          @main_job = args[:main_job] if args.key?(:main_job)
          @pre_caching_check_job = args[:pre_caching_check_job] if args.key?(:pre_caching_check_job)
        end
      end
      
      # The detailed info for a custom job executor.
      class GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailCustomJobDetail
        include Google::Apis::Core::Hashable
      
        # Output only. The names of the previously failed CustomJob. The list includes
        # the all attempts in chronological order.
        # Corresponds to the JSON property `failedJobs`
        # @return [Array<String>]
        attr_accessor :failed_jobs
      
        # Output only. The name of the CustomJob.
        # Corresponds to the JSON property `job`
        # @return [String]
        attr_accessor :job
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @failed_jobs = args[:failed_jobs] if args.key?(:failed_jobs)
          @job = args[:job] if args.key?(:job)
        end
      end
      
      # Pipeline template metadata if PipelineJob.template_uri is from supported
      # template registry. Currently, the only supported registry is Artifact Registry.
      class GoogleCloudAiplatformV1beta1PipelineTemplateMetadata
        include Google::Apis::Core::Hashable
      
        # The version_name in artifact registry. Will always be presented in output if
        # the PipelineJob.template_uri is from supported template registry. Format is "
        # sha256:abcdef123456...".
        # Corresponds to the JSON property `version`
        # @return [String]
        attr_accessor :version
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @version = args[:version] if args.key?(:version)
        end
      end
      
      # Represents a network port in a container.
      class GoogleCloudAiplatformV1beta1Port
        include Google::Apis::Core::Hashable
      
        # The number of the port to expose on the pod's IP address. Must be a valid port
        # number, between 1 and 65535 inclusive.
        # Corresponds to the JSON property `containerPort`
        # @return [Fixnum]
        attr_accessor :container_port
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @container_port = args[:container_port] if args.key?(:container_port)
        end
      end
      
      # Assigns input data to training, validation, and test sets based on the value
      # of a provided key. Supported only for tabular Datasets.
      class GoogleCloudAiplatformV1beta1PredefinedSplit
        include Google::Apis::Core::Hashable
      
        # Required. The key is a name of one of the Dataset's data columns. The value of
        # the key (either the label's value or value in the column) must be one of ``
        # training`, `validation`, `test``, and it defines to which set the given piece
        # of data is assigned. If for a piece of data the key is not present or has an
        # invalid value, that piece is ignored by the pipeline.
        # Corresponds to the JSON property `key`
        # @return [String]
        attr_accessor :key
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @key = args[:key] if args.key?(:key)
        end
      end
      
      # Request message for PredictionService.Predict.
      class GoogleCloudAiplatformV1beta1PredictRequest
        include Google::Apis::Core::Hashable
      
        # Required. The instances that are the input to the prediction call. A
        # DeployedModel may have an upper limit on the number of instances it supports
        # per request, and when it is exceeded the prediction call errors in case of
        # AutoML Models, or, in case of customer created Models, the behaviour is as
        # documented by that Model. The schema of any single instance may be specified
        # via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.
        # Corresponds to the JSON property `instances`
        # @return [Array<Object>]
        attr_accessor :instances
      
        # The parameters that govern the prediction. The schema of the parameters may be
        # specified via Endpoint's DeployedModels' Model's PredictSchemata's
        # parameters_schema_uri.
        # Corresponds to the JSON property `parameters`
        # @return [Object]
        attr_accessor :parameters
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @instances = args[:instances] if args.key?(:instances)
          @parameters = args[:parameters] if args.key?(:parameters)
        end
      end
      
      # Configuration for logging request-response to a BigQuery table.
      class GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig
        include Google::Apis::Core::Hashable
      
        # The BigQuery location for the output content.
        # Corresponds to the JSON property `bigqueryDestination`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BigQueryDestination]
        attr_accessor :bigquery_destination
      
        # If logging is enabled or not.
        # Corresponds to the JSON property `enabled`
        # @return [Boolean]
        attr_accessor :enabled
        alias_method :enabled?, :enabled
      
        # Percentage of requests to be logged, expressed as a fraction in range(0,1].
        # Corresponds to the JSON property `samplingRate`
        # @return [Float]
        attr_accessor :sampling_rate
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bigquery_destination = args[:bigquery_destination] if args.key?(:bigquery_destination)
          @enabled = args[:enabled] if args.key?(:enabled)
          @sampling_rate = args[:sampling_rate] if args.key?(:sampling_rate)
        end
      end
      
      # Response message for PredictionService.Predict.
      class GoogleCloudAiplatformV1beta1PredictResponse
        include Google::Apis::Core::Hashable
      
        # ID of the Endpoint's DeployedModel that served this prediction.
        # Corresponds to the JSON property `deployedModelId`
        # @return [String]
        attr_accessor :deployed_model_id
      
        # Output only. Request-level metadata returned by the model. The metadata type
        # will be dependent upon the model implementation.
        # Corresponds to the JSON property `metadata`
        # @return [Object]
        attr_accessor :metadata
      
        # Output only. The resource name of the Model which is deployed as the
        # DeployedModel that this prediction hits.
        # Corresponds to the JSON property `model`
        # @return [String]
        attr_accessor :model
      
        # Output only. The display name of the Model which is deployed as the
        # DeployedModel that this prediction hits.
        # Corresponds to the JSON property `modelDisplayName`
        # @return [String]
        attr_accessor :model_display_name
      
        # Output only. The version ID of the Model which is deployed as the
        # DeployedModel that this prediction hits.
        # Corresponds to the JSON property `modelVersionId`
        # @return [String]
        attr_accessor :model_version_id
      
        # The predictions that are the output of the predictions call. The schema of any
        # single prediction may be specified via Endpoint's DeployedModels' Model's
        # PredictSchemata's prediction_schema_uri.
        # Corresponds to the JSON property `predictions`
        # @return [Array<Object>]
        attr_accessor :predictions
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployed_model_id = args[:deployed_model_id] if args.key?(:deployed_model_id)
          @metadata = args[:metadata] if args.key?(:metadata)
          @model = args[:model] if args.key?(:model)
          @model_display_name = args[:model_display_name] if args.key?(:model_display_name)
          @model_version_id = args[:model_version_id] if args.key?(:model_version_id)
          @predictions = args[:predictions] if args.key?(:predictions)
        end
      end
      
      # Contains the schemata used in Model's predictions and explanations via
      # PredictionService.Predict, PredictionService.Explain and BatchPredictionJob.
      class GoogleCloudAiplatformV1beta1PredictSchemata
        include Google::Apis::Core::Hashable
      
        # Immutable. Points to a YAML file stored on Google Cloud Storage describing the
        # format of a single instance, which are used in PredictRequest.instances,
        # ExplainRequest.instances and BatchPredictionJob.input_config. The schema is
        # defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-
        # Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always
        # have this field populated by Vertex AI. Note: The URI given on output will be
        # immutable and probably different, including the URI scheme, than the one given
        # on input. The output URI will point to a location where the user only has a
        # read access.
        # Corresponds to the JSON property `instanceSchemaUri`
        # @return [String]
        attr_accessor :instance_schema_uri
      
        # Immutable. Points to a YAML file stored on Google Cloud Storage describing the
        # parameters of prediction and explanation via PredictRequest.parameters,
        # ExplainRequest.parameters and BatchPredictionJob.model_parameters. The schema
        # is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-
        # Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always
        # have this field populated by Vertex AI, if no parameters are supported, then
        # it is set to an empty string. Note: The URI given on output will be immutable
        # and probably different, including the URI scheme, than the one given on input.
        # The output URI will point to a location where the user only has a read access.
        # Corresponds to the JSON property `parametersSchemaUri`
        # @return [String]
        attr_accessor :parameters_schema_uri
      
        # Immutable. Points to a YAML file stored on Google Cloud Storage describing the
        # format of a single prediction produced by this Model, which are returned via
        # PredictResponse.predictions, ExplainResponse.explanations, and
        # BatchPredictionJob.output_config. The schema is defined as an OpenAPI 3.0.2 [
        # Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/
        # 3.0.2.md#schemaObject). AutoML Models always have this field populated by
        # Vertex AI. Note: The URI given on output will be immutable and probably
        # different, including the URI scheme, than the one given on input. The output
        # URI will point to a location where the user only has a read access.
        # Corresponds to the JSON property `predictionSchemaUri`
        # @return [String]
        attr_accessor :prediction_schema_uri
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @instance_schema_uri = args[:instance_schema_uri] if args.key?(:instance_schema_uri)
          @parameters_schema_uri = args[:parameters_schema_uri] if args.key?(:parameters_schema_uri)
          @prediction_schema_uri = args[:prediction_schema_uri] if args.key?(:prediction_schema_uri)
        end
      end
      
      # Preset configuration for example-based explanations
      class GoogleCloudAiplatformV1beta1Presets
        include Google::Apis::Core::Hashable
      
        # The modality of the uploaded model, which automatically configures the
        # distance measurement and feature normalization for the underlying example
        # index and queries. If your model does not precisely fit one of these types, it
        # is okay to choose the closest type.
        # Corresponds to the JSON property `modality`
        # @return [String]
        attr_accessor :modality
      
        # Preset option controlling parameters for speed-precision trade-off when
        # querying for examples. If omitted, defaults to `PRECISE`.
        # Corresponds to the JSON property `query`
        # @return [String]
        attr_accessor :query
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @modality = args[:modality] if args.key?(:modality)
          @query = args[:query] if args.key?(:query)
        end
      end
      
      # PrivateEndpoints proto is used to provide paths for users to send requests
      # privately. To send request via private service access, use predict_http_uri,
      # explain_http_uri or health_http_uri. To send request via private service
      # connect, use service_attachment.
      class GoogleCloudAiplatformV1beta1PrivateEndpoints
        include Google::Apis::Core::Hashable
      
        # Output only. Http(s) path to send explain requests.
        # Corresponds to the JSON property `explainHttpUri`
        # @return [String]
        attr_accessor :explain_http_uri
      
        # Output only. Http(s) path to send health check requests.
        # Corresponds to the JSON property `healthHttpUri`
        # @return [String]
        attr_accessor :health_http_uri
      
        # Output only. Http(s) path to send prediction requests.
        # Corresponds to the JSON property `predictHttpUri`
        # @return [String]
        attr_accessor :predict_http_uri
      
        # Output only. The name of the service attachment resource. Populated if private
        # service connect is enabled.
        # Corresponds to the JSON property `serviceAttachment`
        # @return [String]
        attr_accessor :service_attachment
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @explain_http_uri = args[:explain_http_uri] if args.key?(:explain_http_uri)
          @health_http_uri = args[:health_http_uri] if args.key?(:health_http_uri)
          @predict_http_uri = args[:predict_http_uri] if args.key?(:predict_http_uri)
          @service_attachment = args[:service_attachment] if args.key?(:service_attachment)
        end
      end
      
      # Represents configuration for private service connect.
      class GoogleCloudAiplatformV1beta1PrivateServiceConnectConfig
        include Google::Apis::Core::Hashable
      
        # Required. If true, expose the IndexEndpoint via private service connect.
        # Corresponds to the JSON property `enablePrivateServiceConnect`
        # @return [Boolean]
        attr_accessor :enable_private_service_connect
        alias_method :enable_private_service_connect?, :enable_private_service_connect
      
        # A list of Projects from which the forwarding rule will target the service
        # attachment.
        # Corresponds to the JSON property `projectAllowlist`
        # @return [Array<String>]
        attr_accessor :project_allowlist
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @enable_private_service_connect = args[:enable_private_service_connect] if args.key?(:enable_private_service_connect)
          @project_allowlist = args[:project_allowlist] if args.key?(:project_allowlist)
        end
      end
      
      # A Model Garden Publisher Model.
      class GoogleCloudAiplatformV1beta1PublisherModel
        include Google::Apis::Core::Hashable
      
        # Optional. Additional information about the model's Frameworks.
        # Corresponds to the JSON property `frameworks`
        # @return [Array<String>]
        attr_accessor :frameworks
      
        # Optional. Indicates the launch stage of the model.
        # Corresponds to the JSON property `launchStage`
        # @return [String]
        attr_accessor :launch_stage
      
        # Output only. The resource name of the PublisherModel.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Required. Indicates the open source category of the publisher model.
        # Corresponds to the JSON property `openSourceCategory`
        # @return [String]
        attr_accessor :open_source_category
      
        # The information about the parent of a model.
        # Corresponds to the JSON property `parent`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PublisherModelParent]
        attr_accessor :parent
      
        # Contains the schemata used in Model's predictions and explanations via
        # PredictionService.Predict, PredictionService.Explain and BatchPredictionJob.
        # Corresponds to the JSON property `predictSchemata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PredictSchemata]
        attr_accessor :predict_schemata
      
        # Optional. Output only. Immutable. Used to indicate this model has a publisher
        # model and provide the template of the publisher model resource name.
        # Corresponds to the JSON property `publisherModelTemplate`
        # @return [String]
        attr_accessor :publisher_model_template
      
        # Actions could take on this Publisher Model.
        # Corresponds to the JSON property `supportedActions`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PublisherModelCallToAction]
        attr_accessor :supported_actions
      
        # Output only. Immutable. The version ID of the PublisherModel. A new version is
        # committed when a new model version is uploaded under an existing model id. It
        # is an auto-incrementing decimal number in string representation.
        # Corresponds to the JSON property `versionId`
        # @return [String]
        attr_accessor :version_id
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @frameworks = args[:frameworks] if args.key?(:frameworks)
          @launch_stage = args[:launch_stage] if args.key?(:launch_stage)
          @name = args[:name] if args.key?(:name)
          @open_source_category = args[:open_source_category] if args.key?(:open_source_category)
          @parent = args[:parent] if args.key?(:parent)
          @predict_schemata = args[:predict_schemata] if args.key?(:predict_schemata)
          @publisher_model_template = args[:publisher_model_template] if args.key?(:publisher_model_template)
          @supported_actions = args[:supported_actions] if args.key?(:supported_actions)
          @version_id = args[:version_id] if args.key?(:version_id)
        end
      end
      
      # Actions could take on this Publisher Model.
      class GoogleCloudAiplatformV1beta1PublisherModelCallToAction
        include Google::Apis::Core::Hashable
      
        # The regional resource name or the URI. Key is region, e.g., us-central1,
        # europe-west2, global, etc..
        # Corresponds to the JSON property `createApplication`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences]
        attr_accessor :create_application
      
        # Model metadata that is needed for UploadModel or DeployModel/CreateEndpoint
        # requests.
        # Corresponds to the JSON property `deploy`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PublisherModelCallToActionDeploy]
        attr_accessor :deploy
      
        # The regional resource name or the URI. Key is region, e.g., us-central1,
        # europe-west2, global, etc..
        # Corresponds to the JSON property `openEvaluationPipeline`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences]
        attr_accessor :open_evaluation_pipeline
      
        # The regional resource name or the URI. Key is region, e.g., us-central1,
        # europe-west2, global, etc..
        # Corresponds to the JSON property `openFineTuningPipeline`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences]
        attr_accessor :open_fine_tuning_pipeline
      
        # The regional resource name or the URI. Key is region, e.g., us-central1,
        # europe-west2, global, etc..
        # Corresponds to the JSON property `openGenerationAiStudio`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences]
        attr_accessor :open_generation_ai_studio
      
        # The regional resource name or the URI. Key is region, e.g., us-central1,
        # europe-west2, global, etc..
        # Corresponds to the JSON property `openGenie`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences]
        attr_accessor :open_genie
      
        # The regional resource name or the URI. Key is region, e.g., us-central1,
        # europe-west2, global, etc..
        # Corresponds to the JSON property `openNotebook`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences]
        attr_accessor :open_notebook
      
        # The regional resource name or the URI. Key is region, e.g., us-central1,
        # europe-west2, global, etc..
        # Corresponds to the JSON property `openPromptTuningPipeline`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences]
        attr_accessor :open_prompt_tuning_pipeline
      
        # The regional resource name or the URI. Key is region, e.g., us-central1,
        # europe-west2, global, etc..
        # Corresponds to the JSON property `requestAccess`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences]
        attr_accessor :request_access
      
        # Rest API docs.
        # Corresponds to the JSON property `viewRestApi`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PublisherModelCallToActionViewRestApi]
        attr_accessor :view_rest_api
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_application = args[:create_application] if args.key?(:create_application)
          @deploy = args[:deploy] if args.key?(:deploy)
          @open_evaluation_pipeline = args[:open_evaluation_pipeline] if args.key?(:open_evaluation_pipeline)
          @open_fine_tuning_pipeline = args[:open_fine_tuning_pipeline] if args.key?(:open_fine_tuning_pipeline)
          @open_generation_ai_studio = args[:open_generation_ai_studio] if args.key?(:open_generation_ai_studio)
          @open_genie = args[:open_genie] if args.key?(:open_genie)
          @open_notebook = args[:open_notebook] if args.key?(:open_notebook)
          @open_prompt_tuning_pipeline = args[:open_prompt_tuning_pipeline] if args.key?(:open_prompt_tuning_pipeline)
          @request_access = args[:request_access] if args.key?(:request_access)
          @view_rest_api = args[:view_rest_api] if args.key?(:view_rest_api)
        end
      end
      
      # Model metadata that is needed for UploadModel or DeployModel/CreateEndpoint
      # requests.
      class GoogleCloudAiplatformV1beta1PublisherModelCallToActionDeploy
        include Google::Apis::Core::Hashable
      
        # Optional. The path to the directory containing the Model artifact and any of
        # its supporting files.
        # Corresponds to the JSON property `artifactUri`
        # @return [String]
        attr_accessor :artifact_uri
      
        # A description of resources that to large degree are decided by Vertex AI, and
        # require only a modest additional configuration. Each Model supporting these
        # resources documents its specific guidelines.
        # Corresponds to the JSON property `automaticResources`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1AutomaticResources]
        attr_accessor :automatic_resources
      
        # Specification of a container for serving predictions. Some fields in this
        # message correspond to fields in the [Kubernetes Container v1 core
        # specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/
        # v1.23/#container-v1-core).
        # Corresponds to the JSON property `containerSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelContainerSpec]
        attr_accessor :container_spec
      
        # A description of resources that are dedicated to a DeployedModel, and that
        # need a higher degree of manual configuration.
        # Corresponds to the JSON property `dedicatedResources`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DedicatedResources]
        attr_accessor :dedicated_resources
      
        # Contains information about the Large Model.
        # Corresponds to the JSON property `largeModelReference`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1LargeModelReference]
        attr_accessor :large_model_reference
      
        # Optional. Default model display name.
        # Corresponds to the JSON property `modelDisplayName`
        # @return [String]
        attr_accessor :model_display_name
      
        # The resource name of the shared DeploymentResourcePool to deploy on. Format: `
        # projects/`project`/locations/`location`/deploymentResourcePools/`
        # deployment_resource_pool``
        # Corresponds to the JSON property `sharedResources`
        # @return [String]
        attr_accessor :shared_resources
      
        # Required. The title of the regional resource reference.
        # Corresponds to the JSON property `title`
        # @return [String]
        attr_accessor :title
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @artifact_uri = args[:artifact_uri] if args.key?(:artifact_uri)
          @automatic_resources = args[:automatic_resources] if args.key?(:automatic_resources)
          @container_spec = args[:container_spec] if args.key?(:container_spec)
          @dedicated_resources = args[:dedicated_resources] if args.key?(:dedicated_resources)
          @large_model_reference = args[:large_model_reference] if args.key?(:large_model_reference)
          @model_display_name = args[:model_display_name] if args.key?(:model_display_name)
          @shared_resources = args[:shared_resources] if args.key?(:shared_resources)
          @title = args[:title] if args.key?(:title)
        end
      end
      
      # The regional resource name or the URI. Key is region, e.g., us-central1,
      # europe-west2, global, etc..
      class GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences
        include Google::Apis::Core::Hashable
      
        # Required.
        # Corresponds to the JSON property `references`
        # @return [Hash<String,Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PublisherModelResourceReference>]
        attr_accessor :references
      
        # Required. The title of the regional resource reference.
        # Corresponds to the JSON property `title`
        # @return [String]
        attr_accessor :title
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @references = args[:references] if args.key?(:references)
          @title = args[:title] if args.key?(:title)
        end
      end
      
      # Rest API docs.
      class GoogleCloudAiplatformV1beta1PublisherModelCallToActionViewRestApi
        include Google::Apis::Core::Hashable
      
        # Required.
        # Corresponds to the JSON property `documentations`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PublisherModelDocumentation>]
        attr_accessor :documentations
      
        # Required. The title of the view rest API.
        # Corresponds to the JSON property `title`
        # @return [String]
        attr_accessor :title
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @documentations = args[:documentations] if args.key?(:documentations)
          @title = args[:title] if args.key?(:title)
        end
      end
      
      # A named piece of documentation.
      class GoogleCloudAiplatformV1beta1PublisherModelDocumentation
        include Google::Apis::Core::Hashable
      
        # Required. Content of this piece of document (in Markdown format).
        # Corresponds to the JSON property `content`
        # @return [String]
        attr_accessor :content
      
        # Required. E.g., OVERVIEW, USE CASES, DOCUMENTATION, SDK & SAMPLES, JAVA, NODE.
        # JS, etc..
        # Corresponds to the JSON property `title`
        # @return [String]
        attr_accessor :title
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @content = args[:content] if args.key?(:content)
          @title = args[:title] if args.key?(:title)
        end
      end
      
      # The information about the parent of a model.
      class GoogleCloudAiplatformV1beta1PublisherModelParent
        include Google::Apis::Core::Hashable
      
        # Required. The display name of the parent. E.g., LaMDA, T5, Vision API, Natural
        # Language API.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Reference to a resource.
        # Corresponds to the JSON property `reference`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PublisherModelResourceReference]
        attr_accessor :reference
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @display_name = args[:display_name] if args.key?(:display_name)
          @reference = args[:reference] if args.key?(:reference)
        end
      end
      
      # Reference to a resource.
      class GoogleCloudAiplatformV1beta1PublisherModelResourceReference
        include Google::Apis::Core::Hashable
      
        # The resource name of the Google Cloud resource.
        # Corresponds to the JSON property `resourceName`
        # @return [String]
        attr_accessor :resource_name
      
        # The URI of the resource.
        # Corresponds to the JSON property `uri`
        # @return [String]
        attr_accessor :uri
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @resource_name = args[:resource_name] if args.key?(:resource_name)
          @uri = args[:uri] if args.key?(:uri)
        end
      end
      
      # Details of operations that perform MetadataService.PurgeArtifacts.
      class GoogleCloudAiplatformV1beta1PurgeArtifactsMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for MetadataService.PurgeArtifacts.
      class GoogleCloudAiplatformV1beta1PurgeArtifactsRequest
        include Google::Apis::Core::Hashable
      
        # Required. A required filter matching the Artifacts to be purged. E.g., `
        # update_time <= 2020-11-19T11:30:00-04:00`.
        # Corresponds to the JSON property `filter`
        # @return [String]
        attr_accessor :filter
      
        # Optional. Flag to indicate to actually perform the purge. If `force` is set to
        # false, the method will return a sample of Artifact names that would be deleted.
        # Corresponds to the JSON property `force`
        # @return [Boolean]
        attr_accessor :force
        alias_method :force?, :force
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @filter = args[:filter] if args.key?(:filter)
          @force = args[:force] if args.key?(:force)
        end
      end
      
      # Response message for MetadataService.PurgeArtifacts.
      class GoogleCloudAiplatformV1beta1PurgeArtifactsResponse
        include Google::Apis::Core::Hashable
      
        # The number of Artifacts that this request deleted (or, if `force` is false,
        # the number of Artifacts that will be deleted). This can be an estimate.
        # Corresponds to the JSON property `purgeCount`
        # @return [Fixnum]
        attr_accessor :purge_count
      
        # A sample of the Artifact names that will be deleted. Only populated if `force`
        # is set to false. The maximum number of samples is 100 (it is possible to
        # return fewer).
        # Corresponds to the JSON property `purgeSample`
        # @return [Array<String>]
        attr_accessor :purge_sample
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @purge_count = args[:purge_count] if args.key?(:purge_count)
          @purge_sample = args[:purge_sample] if args.key?(:purge_sample)
        end
      end
      
      # Details of operations that perform MetadataService.PurgeContexts.
      class GoogleCloudAiplatformV1beta1PurgeContextsMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for MetadataService.PurgeContexts.
      class GoogleCloudAiplatformV1beta1PurgeContextsRequest
        include Google::Apis::Core::Hashable
      
        # Required. A required filter matching the Contexts to be purged. E.g., `
        # update_time <= 2020-11-19T11:30:00-04:00`.
        # Corresponds to the JSON property `filter`
        # @return [String]
        attr_accessor :filter
      
        # Optional. Flag to indicate to actually perform the purge. If `force` is set to
        # false, the method will return a sample of Context names that would be deleted.
        # Corresponds to the JSON property `force`
        # @return [Boolean]
        attr_accessor :force
        alias_method :force?, :force
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @filter = args[:filter] if args.key?(:filter)
          @force = args[:force] if args.key?(:force)
        end
      end
      
      # Response message for MetadataService.PurgeContexts.
      class GoogleCloudAiplatformV1beta1PurgeContextsResponse
        include Google::Apis::Core::Hashable
      
        # The number of Contexts that this request deleted (or, if `force` is false, the
        # number of Contexts that will be deleted). This can be an estimate.
        # Corresponds to the JSON property `purgeCount`
        # @return [Fixnum]
        attr_accessor :purge_count
      
        # A sample of the Context names that will be deleted. Only populated if `force`
        # is set to false. The maximum number of samples is 100 (it is possible to
        # return fewer).
        # Corresponds to the JSON property `purgeSample`
        # @return [Array<String>]
        attr_accessor :purge_sample
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @purge_count = args[:purge_count] if args.key?(:purge_count)
          @purge_sample = args[:purge_sample] if args.key?(:purge_sample)
        end
      end
      
      # Details of operations that perform MetadataService.PurgeExecutions.
      class GoogleCloudAiplatformV1beta1PurgeExecutionsMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for MetadataService.PurgeExecutions.
      class GoogleCloudAiplatformV1beta1PurgeExecutionsRequest
        include Google::Apis::Core::Hashable
      
        # Required. A required filter matching the Executions to be purged. E.g., `
        # update_time <= 2020-11-19T11:30:00-04:00`.
        # Corresponds to the JSON property `filter`
        # @return [String]
        attr_accessor :filter
      
        # Optional. Flag to indicate to actually perform the purge. If `force` is set to
        # false, the method will return a sample of Execution names that would be
        # deleted.
        # Corresponds to the JSON property `force`
        # @return [Boolean]
        attr_accessor :force
        alias_method :force?, :force
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @filter = args[:filter] if args.key?(:filter)
          @force = args[:force] if args.key?(:force)
        end
      end
      
      # Response message for MetadataService.PurgeExecutions.
      class GoogleCloudAiplatformV1beta1PurgeExecutionsResponse
        include Google::Apis::Core::Hashable
      
        # The number of Executions that this request deleted (or, if `force` is false,
        # the number of Executions that will be deleted). This can be an estimate.
        # Corresponds to the JSON property `purgeCount`
        # @return [Fixnum]
        attr_accessor :purge_count
      
        # A sample of the Execution names that will be deleted. Only populated if `force`
        # is set to false. The maximum number of samples is 100 (it is possible to
        # return fewer).
        # Corresponds to the JSON property `purgeSample`
        # @return [Array<String>]
        attr_accessor :purge_sample
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @purge_count = args[:purge_count] if args.key?(:purge_count)
          @purge_sample = args[:purge_sample] if args.key?(:purge_sample)
        end
      end
      
      # The spec of a Python packaged code.
      class GoogleCloudAiplatformV1beta1PythonPackageSpec
        include Google::Apis::Core::Hashable
      
        # Command line arguments to be passed to the Python task.
        # Corresponds to the JSON property `args`
        # @return [Array<String>]
        attr_accessor :args
      
        # Environment variables to be passed to the python module. Maximum limit is 100.
        # Corresponds to the JSON property `env`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EnvVar>]
        attr_accessor :env
      
        # Required. The URI of a container image in Artifact Registry that will run the
        # provided Python package. Vertex AI provides a wide range of executor images
        # with pre-installed packages to meet users' various use cases. See the list of [
        # pre-built containers for training](https://cloud.google.com/vertex-ai/docs/
        # training/pre-built-containers). You must use an image from this list.
        # Corresponds to the JSON property `executorImageUri`
        # @return [String]
        attr_accessor :executor_image_uri
      
        # Required. The Google Cloud Storage location of the Python package files which
        # are the training program and its dependent packages. The maximum number of
        # package URIs is 100.
        # Corresponds to the JSON property `packageUris`
        # @return [Array<String>]
        attr_accessor :package_uris
      
        # Required. The Python module name to run after installing the packages.
        # Corresponds to the JSON property `pythonModule`
        # @return [String]
        attr_accessor :python_module
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @args = args[:args] if args.key?(:args)
          @env = args[:env] if args.key?(:env)
          @executor_image_uri = args[:executor_image_uri] if args.key?(:executor_image_uri)
          @package_uris = args[:package_uris] if args.key?(:package_uris)
          @python_module = args[:python_module] if args.key?(:python_module)
        end
      end
      
      # Response message for QueryDeployedModels method.
      class GoogleCloudAiplatformV1beta1QueryDeployedModelsResponse
        include Google::Apis::Core::Hashable
      
        # References to the DeployedModels that share the specified
        # deploymentResourcePool.
        # Corresponds to the JSON property `deployedModelRefs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DeployedModelRef>]
        attr_accessor :deployed_model_refs
      
        # DEPRECATED Use deployed_model_refs instead.
        # Corresponds to the JSON property `deployedModels`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DeployedModel>]
        attr_accessor :deployed_models
      
        # A token, which can be sent as `page_token` to retrieve the next page. If this
        # field is omitted, there are no subsequent pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        # The total number of DeployedModels on this DeploymentResourcePool.
        # Corresponds to the JSON property `totalDeployedModelCount`
        # @return [Fixnum]
        attr_accessor :total_deployed_model_count
      
        # The total number of Endpoints that have DeployedModels on this
        # DeploymentResourcePool.
        # Corresponds to the JSON property `totalEndpointCount`
        # @return [Fixnum]
        attr_accessor :total_endpoint_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployed_model_refs = args[:deployed_model_refs] if args.key?(:deployed_model_refs)
          @deployed_models = args[:deployed_models] if args.key?(:deployed_models)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
          @total_deployed_model_count = args[:total_deployed_model_count] if args.key?(:total_deployed_model_count)
          @total_endpoint_count = args[:total_endpoint_count] if args.key?(:total_endpoint_count)
        end
      end
      
      # Request message for PredictionService.RawPredict.
      class GoogleCloudAiplatformV1beta1RawPredictRequest
        include Google::Apis::Core::Hashable
      
        # Message that represents an arbitrary HTTP body. It should only be used for
        # payload formats that can't be represented as JSON, such as raw binary or an
        # HTML page. This message can be used both in streaming and non-streaming API
        # methods in the request as well as the response. It can be used as a top-level
        # request field, which is convenient if one wants to extract parameters from
        # either the URL or HTTP template into the request fields and also want access
        # to the raw HTTP body. Example: message GetResourceRequest ` // A unique
        # request id. string request_id = 1; // The raw HTTP body is bound to this field.
        # google.api.HttpBody http_body = 2; ` service ResourceService ` rpc
        # GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc
        # UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); ` Example
        # with streaming methods: service CaldavService ` rpc GetCalendar(stream google.
        # api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream
        # google.api.HttpBody) returns (stream google.api.HttpBody); ` Use of this type
        # only changes how the request and response bodies are handled, all other
        # features will continue to work unchanged.
        # Corresponds to the JSON property `httpBody`
        # @return [Google::Apis::AiplatformV1beta1::GoogleApiHttpBody]
        attr_accessor :http_body
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @http_body = args[:http_body] if args.key?(:http_body)
        end
      end
      
      # Configuration information for the Ray cluster. For experimental launch, Ray
      # cluster creation and Persistent cluster creation are 1:1 mapping: We will
      # provision all the nodes within the Persistent cluster as Ray nodes.
      class GoogleCloudAiplatformV1beta1RaySpec
        include Google::Apis::Core::Hashable
      
        # Optional. This will be used to indicate which resource pool will serve as the
        # Ray head node(the first node within that pool). Will use the machine from the
        # first workerpool as the head node by default if this field isn't set.
        # Corresponds to the JSON property `headNodeResourcePoolId`
        # @return [String]
        attr_accessor :head_node_resource_pool_id
      
        # Optional. Default image for user to choose a preferred ML framework (for
        # example, TensorFlow or Pytorch) by choosing from [Vertex prebuilt images](
        # https://cloud.google.com/vertex-ai/docs/training/pre-built-containers). Either
        # this or the resource_pool_images is required. Use this field if you need all
        # the resource pools to have the same Ray image. Otherwise, use the `@code
        # resource_pool_images` field.
        # Corresponds to the JSON property `imageUri`
        # @return [String]
        attr_accessor :image_uri
      
        # Optional. Required if image_uri isn't set. A map of resource_pool_id to
        # prebuild Ray image if user need to use different images for different head/
        # worker pools. This map needs to cover all the resource pool ids. Example: ` "
        # ray_head_node_pool": "head image" "ray_worker_node_pool1": "worker image" "
        # ray_worker_node_pool2": "another worker image" `
        # Corresponds to the JSON property `resourcePoolImages`
        # @return [Hash<String,String>]
        attr_accessor :resource_pool_images
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @head_node_resource_pool_id = args[:head_node_resource_pool_id] if args.key?(:head_node_resource_pool_id)
          @image_uri = args[:image_uri] if args.key?(:image_uri)
          @resource_pool_images = args[:resource_pool_images] if args.key?(:resource_pool_images)
        end
      end
      
      # Request message for FeaturestoreOnlineServingService.ReadFeatureValues.
      class GoogleCloudAiplatformV1beta1ReadFeatureValuesRequest
        include Google::Apis::Core::Hashable
      
        # Required. ID for a specific entity. For example, for a machine learning model
        # predicting user clicks on a website, an entity ID could be `user_123`.
        # Corresponds to the JSON property `entityId`
        # @return [String]
        attr_accessor :entity_id
      
        # Selector for Features of an EntityType.
        # Corresponds to the JSON property `featureSelector`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureSelector]
        attr_accessor :feature_selector
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @entity_id = args[:entity_id] if args.key?(:entity_id)
          @feature_selector = args[:feature_selector] if args.key?(:feature_selector)
        end
      end
      
      # Response message for FeaturestoreOnlineServingService.ReadFeatureValues.
      class GoogleCloudAiplatformV1beta1ReadFeatureValuesResponse
        include Google::Apis::Core::Hashable
      
        # Entity view with Feature values.
        # Corresponds to the JSON property `entityView`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseEntityView]
        attr_accessor :entity_view
      
        # Response header with metadata for the requested ReadFeatureValuesRequest.
        # entity_type and Features.
        # Corresponds to the JSON property `header`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader]
        attr_accessor :header
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @entity_view = args[:entity_view] if args.key?(:entity_view)
          @header = args[:header] if args.key?(:header)
        end
      end
      
      # Entity view with Feature values.
      class GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseEntityView
        include Google::Apis::Core::Hashable
      
        # Each piece of data holds the k requested values for one requested Feature. If
        # no values for the requested Feature exist, the corresponding cell will be
        # empty. This has the same size and is in the same order as the features from
        # the header ReadFeatureValuesResponse.header.
        # Corresponds to the JSON property `data`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseEntityViewData>]
        attr_accessor :data
      
        # ID of the requested entity.
        # Corresponds to the JSON property `entityId`
        # @return [String]
        attr_accessor :entity_id
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @data = args[:data] if args.key?(:data)
          @entity_id = args[:entity_id] if args.key?(:entity_id)
        end
      end
      
      # Container to hold value(s), successive in time, for one Feature from the
      # request.
      class GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseEntityViewData
        include Google::Apis::Core::Hashable
      
        # Value for a feature.
        # Corresponds to the JSON property `value`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureValue]
        attr_accessor :value
      
        # Container for list of values.
        # Corresponds to the JSON property `values`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureValueList]
        attr_accessor :values
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @value = args[:value] if args.key?(:value)
          @values = args[:values] if args.key?(:values)
        end
      end
      
      # Metadata for requested Features.
      class GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseFeatureDescriptor
        include Google::Apis::Core::Hashable
      
        # Feature ID.
        # Corresponds to the JSON property `id`
        # @return [String]
        attr_accessor :id
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @id = args[:id] if args.key?(:id)
        end
      end
      
      # Response header with metadata for the requested ReadFeatureValuesRequest.
      # entity_type and Features.
      class GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader
        include Google::Apis::Core::Hashable
      
        # The resource name of the EntityType from the ReadFeatureValuesRequest. Value
        # format: `projects/`project`/locations/`location`/featurestores/`featurestore`/
        # entityTypes/`entityType``.
        # Corresponds to the JSON property `entityType`
        # @return [String]
        attr_accessor :entity_type
      
        # List of Feature metadata corresponding to each piece of
        # ReadFeatureValuesResponse.EntityView.data.
        # Corresponds to the JSON property `featureDescriptors`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ReadFeatureValuesResponseFeatureDescriptor>]
        attr_accessor :feature_descriptors
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @entity_type = args[:entity_type] if args.key?(:entity_type)
          @feature_descriptors = args[:feature_descriptors] if args.key?(:feature_descriptors)
        end
      end
      
      # The request message for MatchService.ReadIndexDatapoints.
      class GoogleCloudAiplatformV1beta1ReadIndexDatapointsRequest
        include Google::Apis::Core::Hashable
      
        # The ID of the DeployedIndex that will serve the request.
        # Corresponds to the JSON property `deployedIndexId`
        # @return [String]
        attr_accessor :deployed_index_id
      
        # IDs of the datapoints to be searched for.
        # Corresponds to the JSON property `ids`
        # @return [Array<String>]
        attr_accessor :ids
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployed_index_id = args[:deployed_index_id] if args.key?(:deployed_index_id)
          @ids = args[:ids] if args.key?(:ids)
        end
      end
      
      # The response message for MatchService.ReadIndexDatapoints.
      class GoogleCloudAiplatformV1beta1ReadIndexDatapointsResponse
        include Google::Apis::Core::Hashable
      
        # The result list of datapoints.
        # Corresponds to the JSON property `datapoints`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1IndexDatapoint>]
        attr_accessor :datapoints
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @datapoints = args[:datapoints] if args.key?(:datapoints)
        end
      end
      
      # Response message for TensorboardService.ReadTensorboardBlobData.
      class GoogleCloudAiplatformV1beta1ReadTensorboardBlobDataResponse
        include Google::Apis::Core::Hashable
      
        # Blob messages containing blob bytes.
        # Corresponds to the JSON property `blobs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TensorboardBlob>]
        attr_accessor :blobs
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @blobs = args[:blobs] if args.key?(:blobs)
        end
      end
      
      # Response message for TensorboardService.ReadTensorboardSize.
      class GoogleCloudAiplatformV1beta1ReadTensorboardSizeResponse
        include Google::Apis::Core::Hashable
      
        # Payload storage size for the TensorBoard
        # Corresponds to the JSON property `storageSizeByte`
        # @return [Fixnum]
        attr_accessor :storage_size_byte
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @storage_size_byte = args[:storage_size_byte] if args.key?(:storage_size_byte)
        end
      end
      
      # Response message for TensorboardService.ReadTensorboardTimeSeriesData.
      class GoogleCloudAiplatformV1beta1ReadTensorboardTimeSeriesDataResponse
        include Google::Apis::Core::Hashable
      
        # All the data stored in a TensorboardTimeSeries.
        # Corresponds to the JSON property `timeSeriesData`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TimeSeriesData]
        attr_accessor :time_series_data
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @time_series_data = args[:time_series_data] if args.key?(:time_series_data)
        end
      end
      
      # Response message for TensorboardService.ReadTensorboardUsage.
      class GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponse
        include Google::Apis::Core::Hashable
      
        # Maps year-month (YYYYMM) string to per month usage data.
        # Corresponds to the JSON property `monthlyUsageData`
        # @return [Hash<String,Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponsePerMonthUsageData>]
        attr_accessor :monthly_usage_data
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @monthly_usage_data = args[:monthly_usage_data] if args.key?(:monthly_usage_data)
        end
      end
      
      # Per month usage data
      class GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponsePerMonthUsageData
        include Google::Apis::Core::Hashable
      
        # Usage data for each user in the given month.
        # Corresponds to the JSON property `userUsageData`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponsePerUserUsageData>]
        attr_accessor :user_usage_data
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @user_usage_data = args[:user_usage_data] if args.key?(:user_usage_data)
        end
      end
      
      # Per user usage data.
      class GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponsePerUserUsageData
        include Google::Apis::Core::Hashable
      
        # User's username
        # Corresponds to the JSON property `username`
        # @return [String]
        attr_accessor :username
      
        # Number of times the user has read data within the Tensorboard.
        # Corresponds to the JSON property `viewCount`
        # @return [Fixnum]
        attr_accessor :view_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @username = args[:username] if args.key?(:username)
          @view_count = args[:view_count] if args.key?(:view_count)
        end
      end
      
      # Request message for MetadataService.DeleteContextChildrenRequest.
      class GoogleCloudAiplatformV1beta1RemoveContextChildrenRequest
        include Google::Apis::Core::Hashable
      
        # The resource names of the child Contexts.
        # Corresponds to the JSON property `childContexts`
        # @return [Array<String>]
        attr_accessor :child_contexts
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @child_contexts = args[:child_contexts] if args.key?(:child_contexts)
        end
      end
      
      # Response message for MetadataService.RemoveContextChildren.
      class GoogleCloudAiplatformV1beta1RemoveContextChildrenResponse
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Request message for IndexService.RemoveDatapoints
      class GoogleCloudAiplatformV1beta1RemoveDatapointsRequest
        include Google::Apis::Core::Hashable
      
        # A list of datapoint ids to be deleted.
        # Corresponds to the JSON property `datapointIds`
        # @return [Array<String>]
        attr_accessor :datapoint_ids
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @datapoint_ids = args[:datapoint_ids] if args.key?(:datapoint_ids)
        end
      end
      
      # Response message for IndexService.RemoveDatapoints
      class GoogleCloudAiplatformV1beta1RemoveDatapointsResponse
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Request message for NotebookInternalService.ReportExecutionEvent.
      class GoogleCloudAiplatformV1beta1ReportExecutionEventRequest
        include Google::Apis::Core::Hashable
      
        # Required. The type of the event.
        # Corresponds to the JSON property `eventType`
        # @return [String]
        attr_accessor :event_type
      
        # Required. The VM identity token (a JWT) for authenticating the VM. https://
        # cloud.google.com/compute/docs/instances/verifying-instance-identity
        # Corresponds to the JSON property `vmToken`
        # @return [String]
        attr_accessor :vm_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @event_type = args[:event_type] if args.key?(:event_type)
          @vm_token = args[:vm_token] if args.key?(:vm_token)
        end
      end
      
      # Response message for NotebookInternalService.ReportExecutionEvent.
      class GoogleCloudAiplatformV1beta1ReportExecutionEventResponse
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # LINT.IfChange(report_event_message_types) Request message for
      # NotebookInternalService.ReportRuntimeEvent.
      class GoogleCloudAiplatformV1beta1ReportRuntimeEventRequest
        include Google::Apis::Core::Hashable
      
        # Optional. The details of the request for debug.
        # Corresponds to the JSON property `eventDetails`
        # @return [Hash<String,String>]
        attr_accessor :event_details
      
        # Required. The type of the event.
        # Corresponds to the JSON property `eventType`
        # @return [String]
        attr_accessor :event_type
      
        # Required. The VM identity token (a JWT) for authenticating the VM. https://
        # cloud.google.com/compute/docs/instances/verifying-instance-identity
        # Corresponds to the JSON property `vmToken`
        # @return [String]
        attr_accessor :vm_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @event_details = args[:event_details] if args.key?(:event_details)
          @event_type = args[:event_type] if args.key?(:event_type)
          @vm_token = args[:vm_token] if args.key?(:vm_token)
        end
      end
      
      # Response message for NotebookInternalService.ReportRuntimeEvent.
      class GoogleCloudAiplatformV1beta1ReportRuntimeEventResponse
        include Google::Apis::Core::Hashable
      
        # If the idle shutdown is blocked by CP, CP will send the block message.
        # Otherwise, this field is not set.
        # Corresponds to the JSON property `idleShutdownMessage`
        # @return [String]
        attr_accessor :idle_shutdown_message
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @idle_shutdown_message = args[:idle_shutdown_message] if args.key?(:idle_shutdown_message)
        end
      end
      
      # Represents the spec of a group of resources of the same type, for example
      # machine type, disk, and accelerators, in a PersistentResource.
      class GoogleCloudAiplatformV1beta1ResourcePool
        include Google::Apis::Core::Hashable
      
        # The min/max number of replicas allowed if enabling autoscaling
        # Corresponds to the JSON property `autoscalingSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpec]
        attr_accessor :autoscaling_spec
      
        # Represents the spec of disk options.
        # Corresponds to the JSON property `diskSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DiskSpec]
        attr_accessor :disk_spec
      
        # Immutable. The unique ID in a PersistentResource for referring to this
        # resource pool. User can specify it if necessary. Otherwise, it's generated
        # automatically.
        # Corresponds to the JSON property `id`
        # @return [String]
        attr_accessor :id
      
        # Specification of a single machine.
        # Corresponds to the JSON property `machineSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MachineSpec]
        attr_accessor :machine_spec
      
        # Optional. The total number of machines to use for this resource pool.
        # Corresponds to the JSON property `replicaCount`
        # @return [Fixnum]
        attr_accessor :replica_count
      
        # Output only. The number of machines currently in use by training jobs for this
        # resource pool. Will replace idle_replica_count.
        # Corresponds to the JSON property `usedReplicaCount`
        # @return [Fixnum]
        attr_accessor :used_replica_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @autoscaling_spec = args[:autoscaling_spec] if args.key?(:autoscaling_spec)
          @disk_spec = args[:disk_spec] if args.key?(:disk_spec)
          @id = args[:id] if args.key?(:id)
          @machine_spec = args[:machine_spec] if args.key?(:machine_spec)
          @replica_count = args[:replica_count] if args.key?(:replica_count)
          @used_replica_count = args[:used_replica_count] if args.key?(:used_replica_count)
        end
      end
      
      # The min/max number of replicas allowed if enabling autoscaling
      class GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpec
        include Google::Apis::Core::Hashable
      
        # Optional. max replicas in the node pool, must be ≥ replica_count and >
        # min_replica_count or will throw error
        # Corresponds to the JSON property `maxReplicaCount`
        # @return [Fixnum]
        attr_accessor :max_replica_count
      
        # Optional. min replicas in the node pool, must be ≤ replica_count and <
        # max_replica_count or will throw error
        # Corresponds to the JSON property `minReplicaCount`
        # @return [Fixnum]
        attr_accessor :min_replica_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @max_replica_count = args[:max_replica_count] if args.key?(:max_replica_count)
          @min_replica_count = args[:min_replica_count] if args.key?(:min_replica_count)
        end
      end
      
      # Persistent Cluster runtime information as output
      class GoogleCloudAiplatformV1beta1ResourceRuntime
        include Google::Apis::Core::Hashable
      
        # Output only. URIs for user to connect to the Cluster. Example: ` "
        # RAY_HEAD_NODE_INTERNAL_IP": "head-node-IP:10001" "RAY_DASHBOARD_URI": "ray-
        # dashboard-address:8888" `
        # Corresponds to the JSON property `accessUris`
        # @return [Hash<String,String>]
        attr_accessor :access_uris
      
        # Output only. The resource name of NotebookRuntimeTemplate for the RoV
        # Persistent Cluster The NotebokRuntimeTemplate is created in the same VPC (if
        # set), and with the same Ray and Python version as the Persistent Cluster.
        # Example: "projects/1000/locations/us-central1/notebookRuntimeTemplates/abc123"
        # Corresponds to the JSON property `notebookRuntimeTemplate`
        # @return [String]
        attr_accessor :notebook_runtime_template
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @access_uris = args[:access_uris] if args.key?(:access_uris)
          @notebook_runtime_template = args[:notebook_runtime_template] if args.key?(:notebook_runtime_template)
        end
      end
      
      # Configuration for the runtime on a PersistentResource instance, including but
      # not limited to: * Service accounts used to run the workloads. * Whether to
      # make it a dedicated Ray Cluster.
      class GoogleCloudAiplatformV1beta1ResourceRuntimeSpec
        include Google::Apis::Core::Hashable
      
        # Configuration information for the Ray cluster. For experimental launch, Ray
        # cluster creation and Persistent cluster creation are 1:1 mapping: We will
        # provision all the nodes within the Persistent cluster as Ray nodes.
        # Corresponds to the JSON property `raySpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1RaySpec]
        attr_accessor :ray_spec
      
        # Configuration for the use of custom service account to run the workloads.
        # Corresponds to the JSON property `serviceAccountSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ServiceAccountSpec]
        attr_accessor :service_account_spec
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @ray_spec = args[:ray_spec] if args.key?(:ray_spec)
          @service_account_spec = args[:service_account_spec] if args.key?(:service_account_spec)
        end
      end
      
      # Statistics information about resource consumption.
      class GoogleCloudAiplatformV1beta1ResourcesConsumed
        include Google::Apis::Core::Hashable
      
        # Output only. The number of replica hours used. Note that many replicas may run
        # in parallel, and additionally any given work may be queued for some time.
        # Therefore this value is not strictly related to wall time.
        # Corresponds to the JSON property `replicaHours`
        # @return [Float]
        attr_accessor :replica_hours
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @replica_hours = args[:replica_hours] if args.key?(:replica_hours)
        end
      end
      
      # Runtime operation information for DatasetService.RestoreDatasetVersion.
      class GoogleCloudAiplatformV1beta1RestoreDatasetVersionOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for JobService.ResumeModelDeploymentMonitoringJob.
      class GoogleCloudAiplatformV1beta1ResumeModelDeploymentMonitoringJobRequest
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Request message for ScheduleService.ResumeSchedule.
      class GoogleCloudAiplatformV1beta1ResumeScheduleRequest
        include Google::Apis::Core::Hashable
      
        # Optional. Whether to backfill missed runs when the schedule is resumed from
        # PAUSED state. If set to true, all missed runs will be scheduled. New runs will
        # be scheduled after the backfill is complete. This will also update Schedule.
        # catch_up field. Default to false.
        # Corresponds to the JSON property `catchUp`
        # @return [Boolean]
        attr_accessor :catch_up
        alias_method :catch_up?, :catch_up
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @catch_up = args[:catch_up] if args.key?(:catch_up)
        end
      end
      
      # Active learning data sampling config. For every active learning labeling
      # iteration, it will select a batch of data based on the sampling strategy.
      class GoogleCloudAiplatformV1beta1SampleConfig
        include Google::Apis::Core::Hashable
      
        # The percentage of data needed to be labeled in each following batch (except
        # the first batch).
        # Corresponds to the JSON property `followingBatchSamplePercentage`
        # @return [Fixnum]
        attr_accessor :following_batch_sample_percentage
      
        # The percentage of data needed to be labeled in the first batch.
        # Corresponds to the JSON property `initialBatchSamplePercentage`
        # @return [Fixnum]
        attr_accessor :initial_batch_sample_percentage
      
        # Field to choose sampling strategy. Sampling strategy will decide which data
        # should be selected for human labeling in every batch.
        # Corresponds to the JSON property `sampleStrategy`
        # @return [String]
        attr_accessor :sample_strategy
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @following_batch_sample_percentage = args[:following_batch_sample_percentage] if args.key?(:following_batch_sample_percentage)
          @initial_batch_sample_percentage = args[:initial_batch_sample_percentage] if args.key?(:initial_batch_sample_percentage)
          @sample_strategy = args[:sample_strategy] if args.key?(:sample_strategy)
        end
      end
      
      # An attribution method that approximates Shapley values for features that
      # contribute to the label being predicted. A sampling strategy is used to
      # approximate the value rather than considering all subsets of features.
      class GoogleCloudAiplatformV1beta1SampledShapleyAttribution
        include Google::Apis::Core::Hashable
      
        # Required. The number of feature permutations to consider when approximating
        # the Shapley values. Valid range of its value is [1, 50], inclusively.
        # Corresponds to the JSON property `pathCount`
        # @return [Fixnum]
        attr_accessor :path_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @path_count = args[:path_count] if args.key?(:path_count)
        end
      end
      
      # Sampling Strategy for logging, can be for both training and prediction dataset.
      class GoogleCloudAiplatformV1beta1SamplingStrategy
        include Google::Apis::Core::Hashable
      
        # Requests are randomly selected.
        # Corresponds to the JSON property `randomSampleConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SamplingStrategyRandomSampleConfig]
        attr_accessor :random_sample_config
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @random_sample_config = args[:random_sample_config] if args.key?(:random_sample_config)
        end
      end
      
      # Requests are randomly selected.
      class GoogleCloudAiplatformV1beta1SamplingStrategyRandomSampleConfig
        include Google::Apis::Core::Hashable
      
        # Sample rate (0, 1]
        # Corresponds to the JSON property `sampleRate`
        # @return [Float]
        attr_accessor :sample_rate
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @sample_rate = args[:sample_rate] if args.key?(:sample_rate)
        end
      end
      
      # A SavedQuery is a view of the dataset. It references a subset of annotations
      # by problem type and filters.
      class GoogleCloudAiplatformV1beta1SavedQuery
        include Google::Apis::Core::Hashable
      
        # Output only. Filters on the Annotations in the dataset.
        # Corresponds to the JSON property `annotationFilter`
        # @return [String]
        attr_accessor :annotation_filter
      
        # Output only. Number of AnnotationSpecs in the context of the SavedQuery.
        # Corresponds to the JSON property `annotationSpecCount`
        # @return [Fixnum]
        attr_accessor :annotation_spec_count
      
        # Output only. Timestamp when this SavedQuery was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Required. The user-defined name of the SavedQuery. The name can be up to 128
        # characters long and can consist of any UTF-8 characters.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Used to perform a consistent read-modify-write update. If not set, a blind "
        # overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # Some additional information about the SavedQuery.
        # Corresponds to the JSON property `metadata`
        # @return [Object]
        attr_accessor :metadata
      
        # Output only. Resource name of the SavedQuery.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Required. Problem type of the SavedQuery. Allowed values: *
        # IMAGE_CLASSIFICATION_SINGLE_LABEL * IMAGE_CLASSIFICATION_MULTI_LABEL *
        # IMAGE_BOUNDING_POLY * IMAGE_BOUNDING_BOX * TEXT_CLASSIFICATION_SINGLE_LABEL *
        # TEXT_CLASSIFICATION_MULTI_LABEL * TEXT_EXTRACTION * TEXT_SENTIMENT *
        # VIDEO_CLASSIFICATION * VIDEO_OBJECT_TRACKING
        # Corresponds to the JSON property `problemType`
        # @return [String]
        attr_accessor :problem_type
      
        # Output only. If the Annotations belonging to the SavedQuery can be used for
        # AutoML training.
        # Corresponds to the JSON property `supportAutomlTraining`
        # @return [Boolean]
        attr_accessor :support_automl_training
        alias_method :support_automl_training?, :support_automl_training
      
        # Output only. Timestamp when SavedQuery was last updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotation_filter = args[:annotation_filter] if args.key?(:annotation_filter)
          @annotation_spec_count = args[:annotation_spec_count] if args.key?(:annotation_spec_count)
          @create_time = args[:create_time] if args.key?(:create_time)
          @display_name = args[:display_name] if args.key?(:display_name)
          @etag = args[:etag] if args.key?(:etag)
          @metadata = args[:metadata] if args.key?(:metadata)
          @name = args[:name] if args.key?(:name)
          @problem_type = args[:problem_type] if args.key?(:problem_type)
          @support_automl_training = args[:support_automl_training] if args.key?(:support_automl_training)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # One point viewable on a scalar metric plot.
      class GoogleCloudAiplatformV1beta1Scalar
        include Google::Apis::Core::Hashable
      
        # Value of the point at this step / timestamp.
        # Corresponds to the JSON property `value`
        # @return [Float]
        attr_accessor :value
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @value = args[:value] if args.key?(:value)
        end
      end
      
      # An instance of a Schedule periodically schedules runs to make API calls based
      # on user specified time specification and API request type.
      class GoogleCloudAiplatformV1beta1Schedule
        include Google::Apis::Core::Hashable
      
        # Optional. Whether new scheduled runs can be queued when max_concurrent_runs
        # limit is reached. If set to true, new runs will be queued instead of skipped.
        # Default to false.
        # Corresponds to the JSON property `allowQueueing`
        # @return [Boolean]
        attr_accessor :allow_queueing
        alias_method :allow_queueing?, :allow_queueing
      
        # Output only. Whether to backfill missed runs when the schedule is resumed from
        # PAUSED state. If set to true, all missed runs will be scheduled. New runs will
        # be scheduled after the backfill is complete. Default to false.
        # Corresponds to the JSON property `catchUp`
        # @return [Boolean]
        attr_accessor :catch_up
        alias_method :catch_up?, :catch_up
      
        # Request message for PipelineService.CreatePipelineJob.
        # Corresponds to the JSON property `createPipelineJobRequest`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1CreatePipelineJobRequest]
        attr_accessor :create_pipeline_job_request
      
        # Output only. Timestamp when this Schedule was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Cron schedule (https://en.wikipedia.org/wiki/Cron) to launch scheduled runs.
        # To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "
        # CRON_TZ=$`IANA_TIME_ZONE`" or "TZ=$`IANA_TIME_ZONE`". The $`IANA_TIME_ZONE`
        # may only be a valid string from IANA time zone database. For example, "CRON_TZ=
        # America/New_York 1 * * * *", or "TZ=America/New_York 1 * * * *".
        # Corresponds to the JSON property `cron`
        # @return [String]
        attr_accessor :cron
      
        # Required. User provided name of the Schedule. The name can be up to 128
        # characters long and can consist of any UTF-8 characters.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Optional. Timestamp after which no new runs can be scheduled. If specified,
        # The schedule will be completed when either end_time is reached or when
        # scheduled_run_count >= max_run_count. If not specified, new runs will keep
        # getting scheduled until this Schedule is paused or deleted. Already scheduled
        # runs will be allowed to complete. Unset if not specified.
        # Corresponds to the JSON property `endTime`
        # @return [String]
        attr_accessor :end_time
      
        # Output only. Timestamp when this Schedule was last paused. Unset if never
        # paused.
        # Corresponds to the JSON property `lastPauseTime`
        # @return [String]
        attr_accessor :last_pause_time
      
        # Output only. Timestamp when this Schedule was last resumed. Unset if never
        # resumed from pause.
        # Corresponds to the JSON property `lastResumeTime`
        # @return [String]
        attr_accessor :last_resume_time
      
        # Status of a scheduled run.
        # Corresponds to the JSON property `lastScheduledRunResponse`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ScheduleRunResponse]
        attr_accessor :last_scheduled_run_response
      
        # Required. Maximum number of runs that can be started concurrently for this
        # Schedule. This is the limit for starting the scheduled requests and not the
        # execution of the operations/jobs created by the requests (if applicable).
        # Corresponds to the JSON property `maxConcurrentRunCount`
        # @return [Fixnum]
        attr_accessor :max_concurrent_run_count
      
        # Optional. Maximum run count of the schedule. If specified, The schedule will
        # be completed when either started_run_count >= max_run_count or when end_time
        # is reached. If not specified, new runs will keep getting scheduled until this
        # Schedule is paused or deleted. Already scheduled runs will be allowed to
        # complete. Unset if not specified.
        # Corresponds to the JSON property `maxRunCount`
        # @return [Fixnum]
        attr_accessor :max_run_count
      
        # Immutable. The resource name of the Schedule.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Output only. Timestamp when this Schedule should schedule the next run. Having
        # a next_run_time in the past means the runs are being started behind schedule.
        # Corresponds to the JSON property `nextRunTime`
        # @return [String]
        attr_accessor :next_run_time
      
        # Optional. Timestamp after which the first run can be scheduled. Default to
        # Schedule create time if not specified.
        # Corresponds to the JSON property `startTime`
        # @return [String]
        attr_accessor :start_time
      
        # Output only. The number of runs started by this schedule.
        # Corresponds to the JSON property `startedRunCount`
        # @return [Fixnum]
        attr_accessor :started_run_count
      
        # Output only. The state of this Schedule.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor :state
      
        # Output only. Timestamp when this Schedule was updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @allow_queueing = args[:allow_queueing] if args.key?(:allow_queueing)
          @catch_up = args[:catch_up] if args.key?(:catch_up)
          @create_pipeline_job_request = args[:create_pipeline_job_request] if args.key?(:create_pipeline_job_request)
          @create_time = args[:create_time] if args.key?(:create_time)
          @cron = args[:cron] if args.key?(:cron)
          @display_name = args[:display_name] if args.key?(:display_name)
          @end_time = args[:end_time] if args.key?(:end_time)
          @last_pause_time = args[:last_pause_time] if args.key?(:last_pause_time)
          @last_resume_time = args[:last_resume_time] if args.key?(:last_resume_time)
          @last_scheduled_run_response = args[:last_scheduled_run_response] if args.key?(:last_scheduled_run_response)
          @max_concurrent_run_count = args[:max_concurrent_run_count] if args.key?(:max_concurrent_run_count)
          @max_run_count = args[:max_run_count] if args.key?(:max_run_count)
          @name = args[:name] if args.key?(:name)
          @next_run_time = args[:next_run_time] if args.key?(:next_run_time)
          @start_time = args[:start_time] if args.key?(:start_time)
          @started_run_count = args[:started_run_count] if args.key?(:started_run_count)
          @state = args[:state] if args.key?(:state)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # Status of a scheduled run.
      class GoogleCloudAiplatformV1beta1ScheduleRunResponse
        include Google::Apis::Core::Hashable
      
        # The response of the scheduled run.
        # Corresponds to the JSON property `runResponse`
        # @return [String]
        attr_accessor :run_response
      
        # The scheduled run time based on the user-specified schedule.
        # Corresponds to the JSON property `scheduledRunTime`
        # @return [String]
        attr_accessor :scheduled_run_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @run_response = args[:run_response] if args.key?(:run_response)
          @scheduled_run_time = args[:scheduled_run_time] if args.key?(:scheduled_run_time)
        end
      end
      
      # All parameters related to queuing and scheduling of custom jobs.
      class GoogleCloudAiplatformV1beta1Scheduling
        include Google::Apis::Core::Hashable
      
        # Optional. Indicates if the job should retry for internal errors after the job
        # starts running. If true, overrides `Scheduling.restart_job_on_worker_restart`
        # to false.
        # Corresponds to the JSON property `disableRetries`
        # @return [Boolean]
        attr_accessor :disable_retries
        alias_method :disable_retries?, :disable_retries
      
        # Restarts the entire CustomJob if a worker gets restarted. This feature can be
        # used by distributed training jobs that are not resilient to workers leaving
        # and joining a job.
        # Corresponds to the JSON property `restartJobOnWorkerRestart`
        # @return [Boolean]
        attr_accessor :restart_job_on_worker_restart
        alias_method :restart_job_on_worker_restart?, :restart_job_on_worker_restart
      
        # The maximum job running time. The default is 7 days.
        # Corresponds to the JSON property `timeout`
        # @return [String]
        attr_accessor :timeout
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @disable_retries = args[:disable_retries] if args.key?(:disable_retries)
          @restart_job_on_worker_restart = args[:restart_job_on_worker_restart] if args.key?(:restart_job_on_worker_restart)
          @timeout = args[:timeout] if args.key?(:timeout)
        end
      end
      
      # An entry of mapping between color and AnnotationSpec. The mapping is used in
      # segmentation mask.
      class GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor
        include Google::Apis::Core::Hashable
      
        # Represents a color in the RGBA color space. This representation is designed
        # for simplicity of conversion to and from color representations in various
        # languages over compactness. For example, the fields of this representation can
        # be trivially provided to the constructor of `java.awt.Color` in Java; it can
        # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
        # method in iOS; and, with just a little work, it can be easily formatted into a
        # CSS `rgba()` string in JavaScript. This reference page doesn't have
        # information about the absolute color space that should be used to interpret
        # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
        # applications should assume the sRGB color space. When color equality needs to
        # be decided, implementations, unless documented otherwise, treat two colors as
        # equal if all their red, green, blue, and alpha values each differ by at most `
        # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
        # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
        # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
        # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
        # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
        # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
        # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
        # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
        # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
        # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
        # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
        # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
        # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
        # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
        # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
        # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
        # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
        # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
        # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
        # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
        # autorelease]; return result; ` // ... Example (JavaScript): // ... var
        # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
        # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
        # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
        # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
        # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
        # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
        # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
        # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
        # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
        # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
        # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
        # / ...
        # Corresponds to the JSON property `color`
        # @return [Google::Apis::AiplatformV1beta1::GoogleTypeColor]
        attr_accessor :color
      
        # The display name of the AnnotationSpec represented by the color in the
        # segmentation mask.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # The ID of the AnnotationSpec represented by the color in the segmentation mask.
        # Corresponds to the JSON property `id`
        # @return [String]
        attr_accessor :id
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @color = args[:color] if args.key?(:color)
          @display_name = args[:display_name] if args.key?(:display_name)
          @id = args[:id] if args.key?(:id)
        end
      end
      
      # Annotation details specific to image object detection.
      class GoogleCloudAiplatformV1beta1SchemaImageBoundingBoxAnnotation
        include Google::Apis::Core::Hashable
      
        # The resource Id of the AnnotationSpec that this Annotation pertains to.
        # Corresponds to the JSON property `annotationSpecId`
        # @return [String]
        attr_accessor :annotation_spec_id
      
        # The display name of the AnnotationSpec that this Annotation pertains to.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # The rightmost coordinate of the bounding box.
        # Corresponds to the JSON property `xMax`
        # @return [Float]
        attr_accessor :x_max
      
        # The leftmost coordinate of the bounding box.
        # Corresponds to the JSON property `xMin`
        # @return [Float]
        attr_accessor :x_min
      
        # The bottommost coordinate of the bounding box.
        # Corresponds to the JSON property `yMax`
        # @return [Float]
        attr_accessor :y_max
      
        # The topmost coordinate of the bounding box.
        # Corresponds to the JSON property `yMin`
        # @return [Float]
        attr_accessor :y_min
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotation_spec_id = args[:annotation_spec_id] if args.key?(:annotation_spec_id)
          @display_name = args[:display_name] if args.key?(:display_name)
          @x_max = args[:x_max] if args.key?(:x_max)
          @x_min = args[:x_min] if args.key?(:x_min)
          @y_max = args[:y_max] if args.key?(:y_max)
          @y_min = args[:y_min] if args.key?(:y_min)
        end
      end
      
      # Annotation details specific to image classification.
      class GoogleCloudAiplatformV1beta1SchemaImageClassificationAnnotation
        include Google::Apis::Core::Hashable
      
        # The resource Id of the AnnotationSpec that this Annotation pertains to.
        # Corresponds to the JSON property `annotationSpecId`
        # @return [String]
        attr_accessor :annotation_spec_id
      
        # The display name of the AnnotationSpec that this Annotation pertains to.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotation_spec_id = args[:annotation_spec_id] if args.key?(:annotation_spec_id)
          @display_name = args[:display_name] if args.key?(:display_name)
        end
      end
      
      # Payload of Image DataItem.
      class GoogleCloudAiplatformV1beta1SchemaImageDataItem
        include Google::Apis::Core::Hashable
      
        # Required. Google Cloud Storage URI points to the original image in user's
        # bucket. The image is up to 30MB in size.
        # Corresponds to the JSON property `gcsUri`
        # @return [String]
        attr_accessor :gcs_uri
      
        # Output only. The mime type of the content of the image. Only the images in
        # below listed mime types are supported. - image/jpeg - image/gif - image/png -
        # image/webp - image/bmp - image/tiff - image/vnd.microsoft.icon
        # Corresponds to the JSON property `mimeType`
        # @return [String]
        attr_accessor :mime_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @gcs_uri = args[:gcs_uri] if args.key?(:gcs_uri)
          @mime_type = args[:mime_type] if args.key?(:mime_type)
        end
      end
      
      # The metadata of Datasets that contain Image DataItems.
      class GoogleCloudAiplatformV1beta1SchemaImageDatasetMetadata
        include Google::Apis::Core::Hashable
      
        # Points to a YAML file stored on Google Cloud Storage describing payload of the
        # Image DataItems that belong to this Dataset.
        # Corresponds to the JSON property `dataItemSchemaUri`
        # @return [String]
        attr_accessor :data_item_schema_uri
      
        # Google Cloud Storage Bucket name that contains the blob data of this Dataset.
        # Corresponds to the JSON property `gcsBucket`
        # @return [String]
        attr_accessor :gcs_bucket
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @data_item_schema_uri = args[:data_item_schema_uri] if args.key?(:data_item_schema_uri)
          @gcs_bucket = args[:gcs_bucket] if args.key?(:gcs_bucket)
        end
      end
      
      # Annotation details specific to image segmentation.
      class GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotation
        include Google::Apis::Core::Hashable
      
        # The mask based segmentation annotation.
        # Corresponds to the JSON property `maskAnnotation`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationMaskAnnotation]
        attr_accessor :mask_annotation
      
        # Represents a polygon in image.
        # Corresponds to the JSON property `polygonAnnotation`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationPolygonAnnotation]
        attr_accessor :polygon_annotation
      
        # Represents a polyline in image.
        # Corresponds to the JSON property `polylineAnnotation`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationPolylineAnnotation]
        attr_accessor :polyline_annotation
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @mask_annotation = args[:mask_annotation] if args.key?(:mask_annotation)
          @polygon_annotation = args[:polygon_annotation] if args.key?(:polygon_annotation)
          @polyline_annotation = args[:polyline_annotation] if args.key?(:polyline_annotation)
        end
      end
      
      # The mask based segmentation annotation.
      class GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationMaskAnnotation
        include Google::Apis::Core::Hashable
      
        # The mapping between color and AnnotationSpec for this Annotation.
        # Corresponds to the JSON property `annotationSpecColors`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor>]
        attr_accessor :annotation_spec_colors
      
        # Google Cloud Storage URI that points to the mask image. The image must be in
        # PNG format. It must have the same size as the DataItem's image. Each pixel in
        # the image mask represents the AnnotationSpec which the pixel in the image
        # DataItem belong to. Each color is mapped to one AnnotationSpec based on
        # annotation_spec_colors.
        # Corresponds to the JSON property `maskGcsUri`
        # @return [String]
        attr_accessor :mask_gcs_uri
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotation_spec_colors = args[:annotation_spec_colors] if args.key?(:annotation_spec_colors)
          @mask_gcs_uri = args[:mask_gcs_uri] if args.key?(:mask_gcs_uri)
        end
      end
      
      # Represents a polygon in image.
      class GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationPolygonAnnotation
        include Google::Apis::Core::Hashable
      
        # The resource Id of the AnnotationSpec that this Annotation pertains to.
        # Corresponds to the JSON property `annotationSpecId`
        # @return [String]
        attr_accessor :annotation_spec_id
      
        # The display name of the AnnotationSpec that this Annotation pertains to.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # The vertexes are connected one by one and the last vertex is connected to the
        # first one to represent a polygon.
        # Corresponds to the JSON property `vertexes`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaVertex>]
        attr_accessor :vertexes
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotation_spec_id = args[:annotation_spec_id] if args.key?(:annotation_spec_id)
          @display_name = args[:display_name] if args.key?(:display_name)
          @vertexes = args[:vertexes] if args.key?(:vertexes)
        end
      end
      
      # Represents a polyline in image.
      class GoogleCloudAiplatformV1beta1SchemaImageSegmentationAnnotationPolylineAnnotation
        include Google::Apis::Core::Hashable
      
        # The resource Id of the AnnotationSpec that this Annotation pertains to.
        # Corresponds to the JSON property `annotationSpecId`
        # @return [String]
        attr_accessor :annotation_spec_id
      
        # The display name of the AnnotationSpec that this Annotation pertains to.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # The vertexes are connected one by one and the last vertex in not connected to
        # the first one.
        # Corresponds to the JSON property `vertexes`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaVertex>]
        attr_accessor :vertexes
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotation_spec_id = args[:annotation_spec_id] if args.key?(:annotation_spec_id)
          @display_name = args[:display_name] if args.key?(:display_name)
          @vertexes = args[:vertexes] if args.key?(:vertexes)
        end
      end
      
      # Bounding box matching model metrics for a single intersection-over-union
      # threshold and multiple label match confidence thresholds.
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsBoundingBoxMetrics
        include Google::Apis::Core::Hashable
      
        # Metrics for each label-match confidence_threshold from 0.05,0.10,...,0.95,0.96,
        # 0.97,0.98,0.99. Precision-recall curve is derived from them.
        # Corresponds to the JSON property `confidenceMetrics`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsBoundingBoxMetricsConfidenceMetrics>]
        attr_accessor :confidence_metrics
      
        # The intersection-over-union threshold value used to compute this metrics entry.
        # Corresponds to the JSON property `iouThreshold`
        # @return [Float]
        attr_accessor :iou_threshold
      
        # The mean average precision, most often close to `auPrc`.
        # Corresponds to the JSON property `meanAveragePrecision`
        # @return [Float]
        attr_accessor :mean_average_precision
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confidence_metrics = args[:confidence_metrics] if args.key?(:confidence_metrics)
          @iou_threshold = args[:iou_threshold] if args.key?(:iou_threshold)
          @mean_average_precision = args[:mean_average_precision] if args.key?(:mean_average_precision)
        end
      end
      
      # Metrics for a single confidence threshold.
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsBoundingBoxMetricsConfidenceMetrics
        include Google::Apis::Core::Hashable
      
        # The confidence threshold value used to compute the metrics.
        # Corresponds to the JSON property `confidenceThreshold`
        # @return [Float]
        attr_accessor :confidence_threshold
      
        # The harmonic mean of recall and precision.
        # Corresponds to the JSON property `f1Score`
        # @return [Float]
        attr_accessor :f1_score
      
        # Precision under the given confidence threshold.
        # Corresponds to the JSON property `precision`
        # @return [Float]
        attr_accessor :precision
      
        # Recall under the given confidence threshold.
        # Corresponds to the JSON property `recall`
        # @return [Float]
        attr_accessor :recall
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confidence_threshold = args[:confidence_threshold] if args.key?(:confidence_threshold)
          @f1_score = args[:f1_score] if args.key?(:f1_score)
          @precision = args[:precision] if args.key?(:precision)
          @recall = args[:recall] if args.key?(:recall)
        end
      end
      
      # Metrics for classification evaluation results.
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics
        include Google::Apis::Core::Hashable
      
        # The Area Under Precision-Recall Curve metric. Micro-averaged for the overall
        # evaluation.
        # Corresponds to the JSON property `auPrc`
        # @return [Float]
        attr_accessor :au_prc
      
        # The Area Under Receiver Operating Characteristic curve metric. Micro-averaged
        # for the overall evaluation.
        # Corresponds to the JSON property `auRoc`
        # @return [Float]
        attr_accessor :au_roc
      
        # Metrics for each `confidenceThreshold` in 0.00,0.05,0.10,...,0.95,0.96,0.97,0.
        # 98,0.99 and `positionThreshold` = INT32_MAX_VALUE. ROC and precision-recall
        # curves, and other aggregated metrics are derived from them. The confidence
        # metrics entries may also be supplied for additional values of `
        # positionThreshold`, but from these no aggregated metrics are computed.
        # Corresponds to the JSON property `confidenceMetrics`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics>]
        attr_accessor :confidence_metrics
      
        # Confusion matrix of the evaluation.
        # Corresponds to the JSON property `confusionMatrix`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix]
        attr_accessor :confusion_matrix
      
        # The Log Loss metric.
        # Corresponds to the JSON property `logLoss`
        # @return [Float]
        attr_accessor :log_loss
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @au_prc = args[:au_prc] if args.key?(:au_prc)
          @au_roc = args[:au_roc] if args.key?(:au_roc)
          @confidence_metrics = args[:confidence_metrics] if args.key?(:confidence_metrics)
          @confusion_matrix = args[:confusion_matrix] if args.key?(:confusion_matrix)
          @log_loss = args[:log_loss] if args.key?(:log_loss)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics
        include Google::Apis::Core::Hashable
      
        # Metrics are computed with an assumption that the Model never returns
        # predictions with score lower than this value.
        # Corresponds to the JSON property `confidenceThreshold`
        # @return [Float]
        attr_accessor :confidence_threshold
      
        # Confusion matrix of the evaluation for this confidence_threshold.
        # Corresponds to the JSON property `confusionMatrix`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix]
        attr_accessor :confusion_matrix
      
        # The harmonic mean of recall and precision. For summary metrics, it computes
        # the micro-averaged F1 score.
        # Corresponds to the JSON property `f1Score`
        # @return [Float]
        attr_accessor :f1_score
      
        # The harmonic mean of recallAt1 and precisionAt1.
        # Corresponds to the JSON property `f1ScoreAt1`
        # @return [Float]
        attr_accessor :f1_score_at1
      
        # Macro-averaged F1 Score.
        # Corresponds to the JSON property `f1ScoreMacro`
        # @return [Float]
        attr_accessor :f1_score_macro
      
        # Micro-averaged F1 Score.
        # Corresponds to the JSON property `f1ScoreMicro`
        # @return [Float]
        attr_accessor :f1_score_micro
      
        # The number of ground truth labels that are not matched by a Model created
        # label.
        # Corresponds to the JSON property `falseNegativeCount`
        # @return [Fixnum]
        attr_accessor :false_negative_count
      
        # The number of Model created labels that do not match a ground truth label.
        # Corresponds to the JSON property `falsePositiveCount`
        # @return [Fixnum]
        attr_accessor :false_positive_count
      
        # False Positive Rate for the given confidence threshold.
        # Corresponds to the JSON property `falsePositiveRate`
        # @return [Float]
        attr_accessor :false_positive_rate
      
        # The False Positive Rate when only considering the label that has the highest
        # prediction score and not below the confidence threshold for each DataItem.
        # Corresponds to the JSON property `falsePositiveRateAt1`
        # @return [Float]
        attr_accessor :false_positive_rate_at1
      
        # Metrics are computed with an assumption that the Model always returns at most
        # this many predictions (ordered by their score, descendingly), but they all
        # still need to meet the `confidenceThreshold`.
        # Corresponds to the JSON property `maxPredictions`
        # @return [Fixnum]
        attr_accessor :max_predictions
      
        # Precision for the given confidence threshold.
        # Corresponds to the JSON property `precision`
        # @return [Float]
        attr_accessor :precision
      
        # The precision when only considering the label that has the highest prediction
        # score and not below the confidence threshold for each DataItem.
        # Corresponds to the JSON property `precisionAt1`
        # @return [Float]
        attr_accessor :precision_at1
      
        # Recall (True Positive Rate) for the given confidence threshold.
        # Corresponds to the JSON property `recall`
        # @return [Float]
        attr_accessor :recall
      
        # The Recall (True Positive Rate) when only considering the label that has the
        # highest prediction score and not below the confidence threshold for each
        # DataItem.
        # Corresponds to the JSON property `recallAt1`
        # @return [Float]
        attr_accessor :recall_at1
      
        # The number of labels that were not created by the Model, but if they would,
        # they would not match a ground truth label.
        # Corresponds to the JSON property `trueNegativeCount`
        # @return [Fixnum]
        attr_accessor :true_negative_count
      
        # The number of Model created labels that match a ground truth label.
        # Corresponds to the JSON property `truePositiveCount`
        # @return [Fixnum]
        attr_accessor :true_positive_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confidence_threshold = args[:confidence_threshold] if args.key?(:confidence_threshold)
          @confusion_matrix = args[:confusion_matrix] if args.key?(:confusion_matrix)
          @f1_score = args[:f1_score] if args.key?(:f1_score)
          @f1_score_at1 = args[:f1_score_at1] if args.key?(:f1_score_at1)
          @f1_score_macro = args[:f1_score_macro] if args.key?(:f1_score_macro)
          @f1_score_micro = args[:f1_score_micro] if args.key?(:f1_score_micro)
          @false_negative_count = args[:false_negative_count] if args.key?(:false_negative_count)
          @false_positive_count = args[:false_positive_count] if args.key?(:false_positive_count)
          @false_positive_rate = args[:false_positive_rate] if args.key?(:false_positive_rate)
          @false_positive_rate_at1 = args[:false_positive_rate_at1] if args.key?(:false_positive_rate_at1)
          @max_predictions = args[:max_predictions] if args.key?(:max_predictions)
          @precision = args[:precision] if args.key?(:precision)
          @precision_at1 = args[:precision_at1] if args.key?(:precision_at1)
          @recall = args[:recall] if args.key?(:recall)
          @recall_at1 = args[:recall_at1] if args.key?(:recall_at1)
          @true_negative_count = args[:true_negative_count] if args.key?(:true_negative_count)
          @true_positive_count = args[:true_positive_count] if args.key?(:true_positive_count)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix
        include Google::Apis::Core::Hashable
      
        # AnnotationSpecs used in the confusion matrix. For AutoML Text Extraction, a
        # special negative AnnotationSpec with empty `id` and `displayName` of "NULL"
        # will be added as the last element.
        # Corresponds to the JSON property `annotationSpecs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef>]
        attr_accessor :annotation_specs
      
        # Rows in the confusion matrix. The number of rows is equal to the size of `
        # annotationSpecs`. `rowsi` is the number of DataItems that have ground truth of
        # the `annotationSpecs[i]` and are predicted as `annotationSpecs[j]` by the
        # Model being evaluated. For Text Extraction, when `annotationSpecs[i]` is the
        # last element in `annotationSpecs`, i.e. the special negative AnnotationSpec, `
        # rowsi` is the number of predicted entities of `annoatationSpec[j]` that are
        # not labeled as any of the ground truth AnnotationSpec. When annotationSpecs[j]
        # is the special negative AnnotationSpec, `rowsi` is the number of entities have
        # ground truth of `annotationSpec[i]` that are not predicted as an entity by the
        # Model. The value of the last cell, i.e. `rowi` where i == j and `
        # annotationSpec[i]` is the special negative AnnotationSpec, is always 0.
        # Corresponds to the JSON property `rows`
        # @return [Array<Array<Object>>]
        attr_accessor :rows
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotation_specs = args[:annotation_specs] if args.key?(:annotation_specs)
          @rows = args[:rows] if args.key?(:rows)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef
        include Google::Apis::Core::Hashable
      
        # Display name of the AnnotationSpec.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # ID of the AnnotationSpec.
        # Corresponds to the JSON property `id`
        # @return [String]
        attr_accessor :id
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @display_name = args[:display_name] if args.key?(:display_name)
          @id = args[:id] if args.key?(:id)
        end
      end
      
      # Metrics for forecasting evaluation results.
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics
        include Google::Apis::Core::Hashable
      
        # Mean Absolute Error (MAE).
        # Corresponds to the JSON property `meanAbsoluteError`
        # @return [Float]
        attr_accessor :mean_absolute_error
      
        # Mean absolute percentage error. Infinity when there are zeros in the ground
        # truth.
        # Corresponds to the JSON property `meanAbsolutePercentageError`
        # @return [Float]
        attr_accessor :mean_absolute_percentage_error
      
        # The quantile metrics entries for each quantile.
        # Corresponds to the JSON property `quantileMetrics`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry>]
        attr_accessor :quantile_metrics
      
        # Coefficient of determination as Pearson correlation coefficient. Undefined
        # when ground truth or predictions are constant or near constant.
        # Corresponds to the JSON property `rSquared`
        # @return [Float]
        attr_accessor :r_squared
      
        # Root Mean Squared Error (RMSE).
        # Corresponds to the JSON property `rootMeanSquaredError`
        # @return [Float]
        attr_accessor :root_mean_squared_error
      
        # Root mean squared log error. Undefined when there are negative ground truth
        # values or predictions.
        # Corresponds to the JSON property `rootMeanSquaredLogError`
        # @return [Float]
        attr_accessor :root_mean_squared_log_error
      
        # Root Mean Square Percentage Error. Square root of MSPE. Undefined/imaginary
        # when MSPE is negative.
        # Corresponds to the JSON property `rootMeanSquaredPercentageError`
        # @return [Float]
        attr_accessor :root_mean_squared_percentage_error
      
        # Weighted Absolute Percentage Error. Does not use weights, this is just what
        # the metric is called. Undefined if actual values sum to zero. Will be very
        # large if actual values sum to a very small number.
        # Corresponds to the JSON property `weightedAbsolutePercentageError`
        # @return [Float]
        attr_accessor :weighted_absolute_percentage_error
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @mean_absolute_error = args[:mean_absolute_error] if args.key?(:mean_absolute_error)
          @mean_absolute_percentage_error = args[:mean_absolute_percentage_error] if args.key?(:mean_absolute_percentage_error)
          @quantile_metrics = args[:quantile_metrics] if args.key?(:quantile_metrics)
          @r_squared = args[:r_squared] if args.key?(:r_squared)
          @root_mean_squared_error = args[:root_mean_squared_error] if args.key?(:root_mean_squared_error)
          @root_mean_squared_log_error = args[:root_mean_squared_log_error] if args.key?(:root_mean_squared_log_error)
          @root_mean_squared_percentage_error = args[:root_mean_squared_percentage_error] if args.key?(:root_mean_squared_percentage_error)
          @weighted_absolute_percentage_error = args[:weighted_absolute_percentage_error] if args.key?(:weighted_absolute_percentage_error)
        end
      end
      
      # Entry for the Quantiles loss type optimization objective.
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry
        include Google::Apis::Core::Hashable
      
        # This is a custom metric that calculates the percentage of true values that
        # were less than the predicted value for that quantile. Only populated when
        # optimization_objective is minimize-quantile-loss and each entry corresponds to
        # an entry in quantiles The percent value can be used to compare with the
        # quantile value, which is the target value.
        # Corresponds to the JSON property `observedQuantile`
        # @return [Float]
        attr_accessor :observed_quantile
      
        # The quantile for this entry.
        # Corresponds to the JSON property `quantile`
        # @return [Float]
        attr_accessor :quantile
      
        # The scaled pinball loss of this quantile.
        # Corresponds to the JSON property `scaledPinballLoss`
        # @return [Float]
        attr_accessor :scaled_pinball_loss
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @observed_quantile = args[:observed_quantile] if args.key?(:observed_quantile)
          @quantile = args[:quantile] if args.key?(:quantile)
          @scaled_pinball_loss = args[:scaled_pinball_loss] if args.key?(:scaled_pinball_loss)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics
        include Google::Apis::Core::Hashable
      
        # BLEU (bilingual evaluation understudy) scores based on sacrebleu
        # implementation.
        # Corresponds to the JSON property `bleu`
        # @return [Float]
        attr_accessor :bleu
      
        # ROUGE-L (Longest Common Subsequence) scoring at summary level.
        # Corresponds to the JSON property `rougeLSum`
        # @return [Float]
        attr_accessor :rouge_l_sum
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bleu = args[:bleu] if args.key?(:bleu)
          @rouge_l_sum = args[:rouge_l_sum] if args.key?(:rouge_l_sum)
        end
      end
      
      # Metrics for image object detection evaluation results.
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsImageObjectDetectionEvaluationMetrics
        include Google::Apis::Core::Hashable
      
        # The single metric for bounding boxes evaluation: the `meanAveragePrecision`
        # averaged over all `boundingBoxMetricsEntries`.
        # Corresponds to the JSON property `boundingBoxMeanAveragePrecision`
        # @return [Float]
        attr_accessor :bounding_box_mean_average_precision
      
        # The bounding boxes match metrics for each intersection-over-union threshold 0.
        # 05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold 0.05,
        # 0.10,...,0.95,0.96,0.97,0.98,0.99 pair.
        # Corresponds to the JSON property `boundingBoxMetrics`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsBoundingBoxMetrics>]
        attr_accessor :bounding_box_metrics
      
        # The total number of bounding boxes (i.e. summed over all images) the ground
        # truth used to create this evaluation had.
        # Corresponds to the JSON property `evaluatedBoundingBoxCount`
        # @return [Fixnum]
        attr_accessor :evaluated_bounding_box_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bounding_box_mean_average_precision = args[:bounding_box_mean_average_precision] if args.key?(:bounding_box_mean_average_precision)
          @bounding_box_metrics = args[:bounding_box_metrics] if args.key?(:bounding_box_metrics)
          @evaluated_bounding_box_count = args[:evaluated_bounding_box_count] if args.key?(:evaluated_bounding_box_count)
        end
      end
      
      # Metrics for image segmentation evaluation results.
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsImageSegmentationEvaluationMetrics
        include Google::Apis::Core::Hashable
      
        # Metrics for each confidenceThreshold in 0.00,0.05,0.10,...,0.95,0.96,0.97,0.98,
        # 0.99 Precision-recall curve can be derived from it.
        # Corresponds to the JSON property `confidenceMetricsEntries`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsConfidenceMetricsEntry>]
        attr_accessor :confidence_metrics_entries
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confidence_metrics_entries = args[:confidence_metrics_entries] if args.key?(:confidence_metrics_entries)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsImageSegmentationEvaluationMetricsConfidenceMetricsEntry
        include Google::Apis::Core::Hashable
      
        # Metrics are computed with an assumption that the model never returns
        # predictions with score lower than this value.
        # Corresponds to the JSON property `confidenceThreshold`
        # @return [Float]
        attr_accessor :confidence_threshold
      
        # Confusion matrix for the given confidence threshold.
        # Corresponds to the JSON property `confusionMatrix`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix]
        attr_accessor :confusion_matrix
      
        # DSC or the F1 score, The harmonic mean of recall and precision.
        # Corresponds to the JSON property `diceScoreCoefficient`
        # @return [Float]
        attr_accessor :dice_score_coefficient
      
        # The intersection-over-union score. The measure of overlap of the annotation's
        # category mask with ground truth category mask on the DataItem.
        # Corresponds to the JSON property `iouScore`
        # @return [Float]
        attr_accessor :iou_score
      
        # Precision for the given confidence threshold.
        # Corresponds to the JSON property `precision`
        # @return [Float]
        attr_accessor :precision
      
        # Recall (True Positive Rate) for the given confidence threshold.
        # Corresponds to the JSON property `recall`
        # @return [Float]
        attr_accessor :recall
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confidence_threshold = args[:confidence_threshold] if args.key?(:confidence_threshold)
          @confusion_matrix = args[:confusion_matrix] if args.key?(:confusion_matrix)
          @dice_score_coefficient = args[:dice_score_coefficient] if args.key?(:dice_score_coefficient)
          @iou_score = args[:iou_score] if args.key?(:iou_score)
          @precision = args[:precision] if args.key?(:precision)
          @recall = args[:recall] if args.key?(:recall)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsQuestionAnsweringEvaluationMetrics
        include Google::Apis::Core::Hashable
      
        # The rate at which the input predicted strings exactly match their references.
        # Corresponds to the JSON property `exactMatch`
        # @return [Float]
        attr_accessor :exact_match
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @exact_match = args[:exact_match] if args.key?(:exact_match)
        end
      end
      
      # Metrics for regression evaluation results.
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsRegressionEvaluationMetrics
        include Google::Apis::Core::Hashable
      
        # Mean Absolute Error (MAE).
        # Corresponds to the JSON property `meanAbsoluteError`
        # @return [Float]
        attr_accessor :mean_absolute_error
      
        # Mean absolute percentage error. Infinity when there are zeros in the ground
        # truth.
        # Corresponds to the JSON property `meanAbsolutePercentageError`
        # @return [Float]
        attr_accessor :mean_absolute_percentage_error
      
        # Coefficient of determination as Pearson correlation coefficient. Undefined
        # when ground truth or predictions are constant or near constant.
        # Corresponds to the JSON property `rSquared`
        # @return [Float]
        attr_accessor :r_squared
      
        # Root Mean Squared Error (RMSE).
        # Corresponds to the JSON property `rootMeanSquaredError`
        # @return [Float]
        attr_accessor :root_mean_squared_error
      
        # Root mean squared log error. Undefined when there are negative ground truth
        # values or predictions.
        # Corresponds to the JSON property `rootMeanSquaredLogError`
        # @return [Float]
        attr_accessor :root_mean_squared_log_error
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @mean_absolute_error = args[:mean_absolute_error] if args.key?(:mean_absolute_error)
          @mean_absolute_percentage_error = args[:mean_absolute_percentage_error] if args.key?(:mean_absolute_percentage_error)
          @r_squared = args[:r_squared] if args.key?(:r_squared)
          @root_mean_squared_error = args[:root_mean_squared_error] if args.key?(:root_mean_squared_error)
          @root_mean_squared_log_error = args[:root_mean_squared_log_error] if args.key?(:root_mean_squared_log_error)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsSummarizationEvaluationMetrics
        include Google::Apis::Core::Hashable
      
        # ROUGE-L (Longest Common Subsequence) scoring at summary level.
        # Corresponds to the JSON property `rougeLSum`
        # @return [Float]
        attr_accessor :rouge_l_sum
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @rouge_l_sum = args[:rouge_l_sum] if args.key?(:rouge_l_sum)
        end
      end
      
      # Metrics for text extraction evaluation results.
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTextExtractionEvaluationMetrics
        include Google::Apis::Core::Hashable
      
        # Metrics that have confidence thresholds. Precision-recall curve can be derived
        # from them.
        # Corresponds to the JSON property `confidenceMetrics`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsConfidenceMetrics>]
        attr_accessor :confidence_metrics
      
        # Confusion matrix of the evaluation. Only set for Models where number of
        # AnnotationSpecs is no more than 10. Only set for ModelEvaluations, not for
        # ModelEvaluationSlices.
        # Corresponds to the JSON property `confusionMatrix`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix]
        attr_accessor :confusion_matrix
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confidence_metrics = args[:confidence_metrics] if args.key?(:confidence_metrics)
          @confusion_matrix = args[:confusion_matrix] if args.key?(:confusion_matrix)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTextExtractionEvaluationMetricsConfidenceMetrics
        include Google::Apis::Core::Hashable
      
        # Metrics are computed with an assumption that the Model never returns
        # predictions with score lower than this value.
        # Corresponds to the JSON property `confidenceThreshold`
        # @return [Float]
        attr_accessor :confidence_threshold
      
        # The harmonic mean of recall and precision.
        # Corresponds to the JSON property `f1Score`
        # @return [Float]
        attr_accessor :f1_score
      
        # Precision for the given confidence threshold.
        # Corresponds to the JSON property `precision`
        # @return [Float]
        attr_accessor :precision
      
        # Recall (True Positive Rate) for the given confidence threshold.
        # Corresponds to the JSON property `recall`
        # @return [Float]
        attr_accessor :recall
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confidence_threshold = args[:confidence_threshold] if args.key?(:confidence_threshold)
          @f1_score = args[:f1_score] if args.key?(:f1_score)
          @precision = args[:precision] if args.key?(:precision)
          @recall = args[:recall] if args.key?(:recall)
        end
      end
      
      # Model evaluation metrics for text sentiment problems.
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics
        include Google::Apis::Core::Hashable
      
        # Confusion matrix of the evaluation. Only set for ModelEvaluations, not for
        # ModelEvaluationSlices.
        # Corresponds to the JSON property `confusionMatrix`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix]
        attr_accessor :confusion_matrix
      
        # The harmonic mean of recall and precision.
        # Corresponds to the JSON property `f1Score`
        # @return [Float]
        attr_accessor :f1_score
      
        # Linear weighted kappa. Only set for ModelEvaluations, not for
        # ModelEvaluationSlices.
        # Corresponds to the JSON property `linearKappa`
        # @return [Float]
        attr_accessor :linear_kappa
      
        # Mean absolute error. Only set for ModelEvaluations, not for
        # ModelEvaluationSlices.
        # Corresponds to the JSON property `meanAbsoluteError`
        # @return [Float]
        attr_accessor :mean_absolute_error
      
        # Mean squared error. Only set for ModelEvaluations, not for
        # ModelEvaluationSlices.
        # Corresponds to the JSON property `meanSquaredError`
        # @return [Float]
        attr_accessor :mean_squared_error
      
        # Precision.
        # Corresponds to the JSON property `precision`
        # @return [Float]
        attr_accessor :precision
      
        # Quadratic weighted kappa. Only set for ModelEvaluations, not for
        # ModelEvaluationSlices.
        # Corresponds to the JSON property `quadraticKappa`
        # @return [Float]
        attr_accessor :quadratic_kappa
      
        # Recall.
        # Corresponds to the JSON property `recall`
        # @return [Float]
        attr_accessor :recall
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confusion_matrix = args[:confusion_matrix] if args.key?(:confusion_matrix)
          @f1_score = args[:f1_score] if args.key?(:f1_score)
          @linear_kappa = args[:linear_kappa] if args.key?(:linear_kappa)
          @mean_absolute_error = args[:mean_absolute_error] if args.key?(:mean_absolute_error)
          @mean_squared_error = args[:mean_squared_error] if args.key?(:mean_squared_error)
          @precision = args[:precision] if args.key?(:precision)
          @quadratic_kappa = args[:quadratic_kappa] if args.key?(:quadratic_kappa)
          @recall = args[:recall] if args.key?(:recall)
        end
      end
      
      # UNIMPLEMENTED. Track matching model metrics for a single track match threshold
      # and multiple label match confidence thresholds.
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTrackMetrics
        include Google::Apis::Core::Hashable
      
        # Metrics for each label-match `confidenceThreshold` from 0.05,0.10,...,0.95,0.
        # 96,0.97,0.98,0.99. Precision-recall curve is derived from them.
        # Corresponds to the JSON property `confidenceMetrics`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTrackMetricsConfidenceMetrics>]
        attr_accessor :confidence_metrics
      
        # The intersection-over-union threshold value between bounding boxes across
        # frames used to compute this metric entry.
        # Corresponds to the JSON property `iouThreshold`
        # @return [Float]
        attr_accessor :iou_threshold
      
        # The mean bounding box iou over all confidence thresholds.
        # Corresponds to the JSON property `meanBoundingBoxIou`
        # @return [Float]
        attr_accessor :mean_bounding_box_iou
      
        # The mean mismatch rate over all confidence thresholds.
        # Corresponds to the JSON property `meanMismatchRate`
        # @return [Float]
        attr_accessor :mean_mismatch_rate
      
        # The mean average precision over all confidence thresholds.
        # Corresponds to the JSON property `meanTrackingAveragePrecision`
        # @return [Float]
        attr_accessor :mean_tracking_average_precision
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confidence_metrics = args[:confidence_metrics] if args.key?(:confidence_metrics)
          @iou_threshold = args[:iou_threshold] if args.key?(:iou_threshold)
          @mean_bounding_box_iou = args[:mean_bounding_box_iou] if args.key?(:mean_bounding_box_iou)
          @mean_mismatch_rate = args[:mean_mismatch_rate] if args.key?(:mean_mismatch_rate)
          @mean_tracking_average_precision = args[:mean_tracking_average_precision] if args.key?(:mean_tracking_average_precision)
        end
      end
      
      # Metrics for a single confidence threshold.
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTrackMetricsConfidenceMetrics
        include Google::Apis::Core::Hashable
      
        # Bounding box intersection-over-union precision. Measures how well the bounding
        # boxes overlap between each other (e.g. complete overlap or just barely above
        # iou_threshold).
        # Corresponds to the JSON property `boundingBoxIou`
        # @return [Float]
        attr_accessor :bounding_box_iou
      
        # The confidence threshold value used to compute the metrics.
        # Corresponds to the JSON property `confidenceThreshold`
        # @return [Float]
        attr_accessor :confidence_threshold
      
        # Mismatch rate, which measures the tracking consistency, i.e. correctness of
        # instance ID continuity.
        # Corresponds to the JSON property `mismatchRate`
        # @return [Float]
        attr_accessor :mismatch_rate
      
        # Tracking precision.
        # Corresponds to the JSON property `trackingPrecision`
        # @return [Float]
        attr_accessor :tracking_precision
      
        # Tracking recall.
        # Corresponds to the JSON property `trackingRecall`
        # @return [Float]
        attr_accessor :tracking_recall
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bounding_box_iou = args[:bounding_box_iou] if args.key?(:bounding_box_iou)
          @confidence_threshold = args[:confidence_threshold] if args.key?(:confidence_threshold)
          @mismatch_rate = args[:mismatch_rate] if args.key?(:mismatch_rate)
          @tracking_precision = args[:tracking_precision] if args.key?(:tracking_precision)
          @tracking_recall = args[:tracking_recall] if args.key?(:tracking_recall)
        end
      end
      
      # The Evaluation metrics given a specific precision_window_length.
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoActionMetrics
        include Google::Apis::Core::Hashable
      
        # Metrics for each label-match confidence_threshold from 0.05,0.10,...,0.95,0.96,
        # 0.97,0.98,0.99.
        # Corresponds to the JSON property `confidenceMetrics`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics>]
        attr_accessor :confidence_metrics
      
        # The mean average precision.
        # Corresponds to the JSON property `meanAveragePrecision`
        # @return [Float]
        attr_accessor :mean_average_precision
      
        # This VideoActionMetrics is calculated based on this prediction window length.
        # If the predicted action's timestamp is inside the time window whose center is
        # the ground truth action's timestamp with this specific length, the prediction
        # result is treated as a true positive.
        # Corresponds to the JSON property `precisionWindowLength`
        # @return [String]
        attr_accessor :precision_window_length
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confidence_metrics = args[:confidence_metrics] if args.key?(:confidence_metrics)
          @mean_average_precision = args[:mean_average_precision] if args.key?(:mean_average_precision)
          @precision_window_length = args[:precision_window_length] if args.key?(:precision_window_length)
        end
      end
      
      # Metrics for a single confidence threshold.
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics
        include Google::Apis::Core::Hashable
      
        # Output only. The confidence threshold value used to compute the metrics.
        # Corresponds to the JSON property `confidenceThreshold`
        # @return [Float]
        attr_accessor :confidence_threshold
      
        # Output only. The harmonic mean of recall and precision.
        # Corresponds to the JSON property `f1Score`
        # @return [Float]
        attr_accessor :f1_score
      
        # Output only. Precision for the given confidence threshold.
        # Corresponds to the JSON property `precision`
        # @return [Float]
        attr_accessor :precision
      
        # Output only. Recall for the given confidence threshold.
        # Corresponds to the JSON property `recall`
        # @return [Float]
        attr_accessor :recall
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confidence_threshold = args[:confidence_threshold] if args.key?(:confidence_threshold)
          @f1_score = args[:f1_score] if args.key?(:f1_score)
          @precision = args[:precision] if args.key?(:precision)
          @recall = args[:recall] if args.key?(:recall)
        end
      end
      
      # Model evaluation metrics for video action recognition.
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoActionRecognitionMetrics
        include Google::Apis::Core::Hashable
      
        # The number of ground truth actions used to create this evaluation.
        # Corresponds to the JSON property `evaluatedActionCount`
        # @return [Fixnum]
        attr_accessor :evaluated_action_count
      
        # The metric entries for precision window lengths: 1s,2s,3s.
        # Corresponds to the JSON property `videoActionMetrics`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoActionMetrics>]
        attr_accessor :video_action_metrics
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @evaluated_action_count = args[:evaluated_action_count] if args.key?(:evaluated_action_count)
          @video_action_metrics = args[:video_action_metrics] if args.key?(:video_action_metrics)
        end
      end
      
      # Model evaluation metrics for video object tracking problems. Evaluates
      # prediction quality of both labeled bounding boxes and labeled tracks (i.e.
      # series of bounding boxes sharing same label and instance ID).
      class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsVideoObjectTrackingMetrics
        include Google::Apis::Core::Hashable
      
        # The single metric for bounding boxes evaluation: the `meanAveragePrecision`
        # averaged over all `boundingBoxMetrics`.
        # Corresponds to the JSON property `boundingBoxMeanAveragePrecision`
        # @return [Float]
        attr_accessor :bounding_box_mean_average_precision
      
        # The bounding boxes match metrics for each intersection-over-union threshold 0.
        # 05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence threshold 0.05,
        # 0.10,...,0.95,0.96,0.97,0.98,0.99 pair.
        # Corresponds to the JSON property `boundingBoxMetrics`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsBoundingBoxMetrics>]
        attr_accessor :bounding_box_metrics
      
        # UNIMPLEMENTED. The total number of bounding boxes (i.e. summed over all frames)
        # the ground truth used to create this evaluation had.
        # Corresponds to the JSON property `evaluatedBoundingBoxCount`
        # @return [Fixnum]
        attr_accessor :evaluated_bounding_box_count
      
        # UNIMPLEMENTED. The number of video frames used to create this evaluation.
        # Corresponds to the JSON property `evaluatedFrameCount`
        # @return [Fixnum]
        attr_accessor :evaluated_frame_count
      
        # UNIMPLEMENTED. The total number of tracks (i.e. as seen across all frames) the
        # ground truth used to create this evaluation had.
        # Corresponds to the JSON property `evaluatedTrackCount`
        # @return [Fixnum]
        attr_accessor :evaluated_track_count
      
        # UNIMPLEMENTED. The single metric for tracks accuracy evaluation: the `
        # meanAveragePrecision` averaged over all `trackMetrics`.
        # Corresponds to the JSON property `trackMeanAveragePrecision`
        # @return [Float]
        attr_accessor :track_mean_average_precision
      
        # UNIMPLEMENTED. The single metric for tracks bounding box iou evaluation: the `
        # meanBoundingBoxIou` averaged over all `trackMetrics`.
        # Corresponds to the JSON property `trackMeanBoundingBoxIou`
        # @return [Float]
        attr_accessor :track_mean_bounding_box_iou
      
        # UNIMPLEMENTED. The single metric for tracking consistency evaluation: the `
        # meanMismatchRate` averaged over all `trackMetrics`.
        # Corresponds to the JSON property `trackMeanMismatchRate`
        # @return [Float]
        attr_accessor :track_mean_mismatch_rate
      
        # UNIMPLEMENTED. The tracks match metrics for each intersection-over-union
        # threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and each label confidence
        # threshold 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 pair.
        # Corresponds to the JSON property `trackMetrics`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsTrackMetrics>]
        attr_accessor :track_metrics
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bounding_box_mean_average_precision = args[:bounding_box_mean_average_precision] if args.key?(:bounding_box_mean_average_precision)
          @bounding_box_metrics = args[:bounding_box_metrics] if args.key?(:bounding_box_metrics)
          @evaluated_bounding_box_count = args[:evaluated_bounding_box_count] if args.key?(:evaluated_bounding_box_count)
          @evaluated_frame_count = args[:evaluated_frame_count] if args.key?(:evaluated_frame_count)
          @evaluated_track_count = args[:evaluated_track_count] if args.key?(:evaluated_track_count)
          @track_mean_average_precision = args[:track_mean_average_precision] if args.key?(:track_mean_average_precision)
          @track_mean_bounding_box_iou = args[:track_mean_bounding_box_iou] if args.key?(:track_mean_bounding_box_iou)
          @track_mean_mismatch_rate = args[:track_mean_mismatch_rate] if args.key?(:track_mean_mismatch_rate)
          @track_metrics = args[:track_metrics] if args.key?(:track_metrics)
        end
      end
      
      # Prediction input format for Image Classification.
      class GoogleCloudAiplatformV1beta1SchemaPredictInstanceImageClassificationPredictionInstance
        include Google::Apis::Core::Hashable
      
        # The image bytes or Cloud Storage URI to make the prediction on.
        # Corresponds to the JSON property `content`
        # @return [String]
        attr_accessor :content
      
        # The MIME type of the content of the image. Only the images in below listed
        # MIME types are supported. - image/jpeg - image/gif - image/png - image/webp -
        # image/bmp - image/tiff - image/vnd.microsoft.icon
        # Corresponds to the JSON property `mimeType`
        # @return [String]
        attr_accessor :mime_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @content = args[:content] if args.key?(:content)
          @mime_type = args[:mime_type] if args.key?(:mime_type)
        end
      end
      
      # Prediction input format for Image Object Detection.
      class GoogleCloudAiplatformV1beta1SchemaPredictInstanceImageObjectDetectionPredictionInstance
        include Google::Apis::Core::Hashable
      
        # The image bytes or Cloud Storage URI to make the prediction on.
        # Corresponds to the JSON property `content`
        # @return [String]
        attr_accessor :content
      
        # The MIME type of the content of the image. Only the images in below listed
        # MIME types are supported. - image/jpeg - image/gif - image/png - image/webp -
        # image/bmp - image/tiff - image/vnd.microsoft.icon
        # Corresponds to the JSON property `mimeType`
        # @return [String]
        attr_accessor :mime_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @content = args[:content] if args.key?(:content)
          @mime_type = args[:mime_type] if args.key?(:mime_type)
        end
      end
      
      # Prediction input format for Image Segmentation.
      class GoogleCloudAiplatformV1beta1SchemaPredictInstanceImageSegmentationPredictionInstance
        include Google::Apis::Core::Hashable
      
        # The image bytes to make the predictions on.
        # Corresponds to the JSON property `content`
        # @return [String]
        attr_accessor :content
      
        # The MIME type of the content of the image. Only the images in below listed
        # MIME types are supported. - image/jpeg - image/png
        # Corresponds to the JSON property `mimeType`
        # @return [String]
        attr_accessor :mime_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @content = args[:content] if args.key?(:content)
          @mime_type = args[:mime_type] if args.key?(:mime_type)
        end
      end
      
      # Prediction input format for Text Classification.
      class GoogleCloudAiplatformV1beta1SchemaPredictInstanceTextClassificationPredictionInstance
        include Google::Apis::Core::Hashable
      
        # The text snippet to make the predictions on.
        # Corresponds to the JSON property `content`
        # @return [String]
        attr_accessor :content
      
        # The MIME type of the text snippet. The supported MIME types are listed below. -
        # text/plain
        # Corresponds to the JSON property `mimeType`
        # @return [String]
        attr_accessor :mime_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @content = args[:content] if args.key?(:content)
          @mime_type = args[:mime_type] if args.key?(:mime_type)
        end
      end
      
      # Prediction input format for Text Extraction.
      class GoogleCloudAiplatformV1beta1SchemaPredictInstanceTextExtractionPredictionInstance
        include Google::Apis::Core::Hashable
      
        # The text snippet to make the predictions on.
        # Corresponds to the JSON property `content`
        # @return [String]
        attr_accessor :content
      
        # This field is only used for batch prediction. If a key is provided, the batch
        # prediction result will by mapped to this key. If omitted, then the batch
        # prediction result will contain the entire input instance. Vertex AI will not
        # check if keys in the request are duplicates, so it is up to the caller to
        # ensure the keys are unique.
        # Corresponds to the JSON property `key`
        # @return [String]
        attr_accessor :key
      
        # The MIME type of the text snippet. The supported MIME types are listed below. -
        # text/plain
        # Corresponds to the JSON property `mimeType`
        # @return [String]
        attr_accessor :mime_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @content = args[:content] if args.key?(:content)
          @key = args[:key] if args.key?(:key)
          @mime_type = args[:mime_type] if args.key?(:mime_type)
        end
      end
      
      # Prediction input format for Text Sentiment.
      class GoogleCloudAiplatformV1beta1SchemaPredictInstanceTextSentimentPredictionInstance
        include Google::Apis::Core::Hashable
      
        # The text snippet to make the predictions on.
        # Corresponds to the JSON property `content`
        # @return [String]
        attr_accessor :content
      
        # The MIME type of the text snippet. The supported MIME types are listed below. -
        # text/plain
        # Corresponds to the JSON property `mimeType`
        # @return [String]
        attr_accessor :mime_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @content = args[:content] if args.key?(:content)
          @mime_type = args[:mime_type] if args.key?(:mime_type)
        end
      end
      
      # Prediction input format for Video Action Recognition.
      class GoogleCloudAiplatformV1beta1SchemaPredictInstanceVideoActionRecognitionPredictionInstance
        include Google::Apis::Core::Hashable
      
        # The Google Cloud Storage location of the video on which to perform the
        # prediction.
        # Corresponds to the JSON property `content`
        # @return [String]
        attr_accessor :content
      
        # The MIME type of the content of the video. Only the following are supported:
        # video/mp4 video/avi video/quicktime
        # Corresponds to the JSON property `mimeType`
        # @return [String]
        attr_accessor :mime_type
      
        # The end, exclusive, of the video's time segment on which to perform the
        # prediction. Expressed as a number of seconds as measured from the start of the
        # video, with "s" appended at the end. Fractions are allowed, up to a
        # microsecond precision, and "inf" or "Infinity" is allowed, which means the end
        # of the video.
        # Corresponds to the JSON property `timeSegmentEnd`
        # @return [String]
        attr_accessor :time_segment_end
      
        # The beginning, inclusive, of the video's time segment on which to perform the
        # prediction. Expressed as a number of seconds as measured from the start of the
        # video, with "s" appended at the end. Fractions are allowed, up to a
        # microsecond precision.
        # Corresponds to the JSON property `timeSegmentStart`
        # @return [String]
        attr_accessor :time_segment_start
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @content = args[:content] if args.key?(:content)
          @mime_type = args[:mime_type] if args.key?(:mime_type)
          @time_segment_end = args[:time_segment_end] if args.key?(:time_segment_end)
          @time_segment_start = args[:time_segment_start] if args.key?(:time_segment_start)
        end
      end
      
      # Prediction input format for Video Classification.
      class GoogleCloudAiplatformV1beta1SchemaPredictInstanceVideoClassificationPredictionInstance
        include Google::Apis::Core::Hashable
      
        # The Google Cloud Storage location of the video on which to perform the
        # prediction.
        # Corresponds to the JSON property `content`
        # @return [String]
        attr_accessor :content
      
        # The MIME type of the content of the video. Only the following are supported:
        # video/mp4 video/avi video/quicktime
        # Corresponds to the JSON property `mimeType`
        # @return [String]
        attr_accessor :mime_type
      
        # The end, exclusive, of the video's time segment on which to perform the
        # prediction. Expressed as a number of seconds as measured from the start of the
        # video, with "s" appended at the end. Fractions are allowed, up to a
        # microsecond precision, and "inf" or "Infinity" is allowed, which means the end
        # of the video.
        # Corresponds to the JSON property `timeSegmentEnd`
        # @return [String]
        attr_accessor :time_segment_end
      
        # The beginning, inclusive, of the video's time segment on which to perform the
        # prediction. Expressed as a number of seconds as measured from the start of the
        # video, with "s" appended at the end. Fractions are allowed, up to a
        # microsecond precision.
        # Corresponds to the JSON property `timeSegmentStart`
        # @return [String]
        attr_accessor :time_segment_start
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @content = args[:content] if args.key?(:content)
          @mime_type = args[:mime_type] if args.key?(:mime_type)
          @time_segment_end = args[:time_segment_end] if args.key?(:time_segment_end)
          @time_segment_start = args[:time_segment_start] if args.key?(:time_segment_start)
        end
      end
      
      # Prediction input format for Video Object Tracking.
      class GoogleCloudAiplatformV1beta1SchemaPredictInstanceVideoObjectTrackingPredictionInstance
        include Google::Apis::Core::Hashable
      
        # The Google Cloud Storage location of the video on which to perform the
        # prediction.
        # Corresponds to the JSON property `content`
        # @return [String]
        attr_accessor :content
      
        # The MIME type of the content of the video. Only the following are supported:
        # video/mp4 video/avi video/quicktime
        # Corresponds to the JSON property `mimeType`
        # @return [String]
        attr_accessor :mime_type
      
        # The end, exclusive, of the video's time segment on which to perform the
        # prediction. Expressed as a number of seconds as measured from the start of the
        # video, with "s" appended at the end. Fractions are allowed, up to a
        # microsecond precision, and "inf" or "Infinity" is allowed, which means the end
        # of the video.
        # Corresponds to the JSON property `timeSegmentEnd`
        # @return [String]
        attr_accessor :time_segment_end
      
        # The beginning, inclusive, of the video's time segment on which to perform the
        # prediction. Expressed as a number of seconds as measured from the start of the
        # video, with "s" appended at the end. Fractions are allowed, up to a
        # microsecond precision.
        # Corresponds to the JSON property `timeSegmentStart`
        # @return [String]
        attr_accessor :time_segment_start
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @content = args[:content] if args.key?(:content)
          @mime_type = args[:mime_type] if args.key?(:mime_type)
          @time_segment_end = args[:time_segment_end] if args.key?(:time_segment_end)
          @time_segment_start = args[:time_segment_start] if args.key?(:time_segment_start)
        end
      end
      
      # Prediction model parameters for Image Classification.
      class GoogleCloudAiplatformV1beta1SchemaPredictParamsImageClassificationPredictionParams
        include Google::Apis::Core::Hashable
      
        # The Model only returns predictions with at least this confidence score.
        # Default value is 0.0
        # Corresponds to the JSON property `confidenceThreshold`
        # @return [Float]
        attr_accessor :confidence_threshold
      
        # The Model only returns up to that many top, by confidence score, predictions
        # per instance. If this number is very high, the Model may return fewer
        # predictions. Default value is 10.
        # Corresponds to the JSON property `maxPredictions`
        # @return [Fixnum]
        attr_accessor :max_predictions
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confidence_threshold = args[:confidence_threshold] if args.key?(:confidence_threshold)
          @max_predictions = args[:max_predictions] if args.key?(:max_predictions)
        end
      end
      
      # Prediction model parameters for Image Object Detection.
      class GoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParams
        include Google::Apis::Core::Hashable
      
        # The Model only returns predictions with at least this confidence score.
        # Default value is 0.0
        # Corresponds to the JSON property `confidenceThreshold`
        # @return [Float]
        attr_accessor :confidence_threshold
      
        # The Model only returns up to that many top, by confidence score, predictions
        # per instance. Note that number of returned predictions is also limited by
        # metadata's predictionsLimit. Default value is 10.
        # Corresponds to the JSON property `maxPredictions`
        # @return [Fixnum]
        attr_accessor :max_predictions
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confidence_threshold = args[:confidence_threshold] if args.key?(:confidence_threshold)
          @max_predictions = args[:max_predictions] if args.key?(:max_predictions)
        end
      end
      
      # Prediction model parameters for Image Segmentation.
      class GoogleCloudAiplatformV1beta1SchemaPredictParamsImageSegmentationPredictionParams
        include Google::Apis::Core::Hashable
      
        # When the model predicts category of pixels of the image, it will only provide
        # predictions for pixels that it is at least this much confident about. All
        # other pixels will be classified as background. Default value is 0.5.
        # Corresponds to the JSON property `confidenceThreshold`
        # @return [Float]
        attr_accessor :confidence_threshold
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confidence_threshold = args[:confidence_threshold] if args.key?(:confidence_threshold)
        end
      end
      
      # Prediction model parameters for Video Action Recognition.
      class GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoActionRecognitionPredictionParams
        include Google::Apis::Core::Hashable
      
        # The Model only returns predictions with at least this confidence score.
        # Default value is 0.0
        # Corresponds to the JSON property `confidenceThreshold`
        # @return [Float]
        attr_accessor :confidence_threshold
      
        # The model only returns up to that many top, by confidence score, predictions
        # per frame of the video. If this number is very high, the Model may return
        # fewer predictions per frame. Default value is 50.
        # Corresponds to the JSON property `maxPredictions`
        # @return [Fixnum]
        attr_accessor :max_predictions
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confidence_threshold = args[:confidence_threshold] if args.key?(:confidence_threshold)
          @max_predictions = args[:max_predictions] if args.key?(:max_predictions)
        end
      end
      
      # Prediction model parameters for Video Classification.
      class GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams
        include Google::Apis::Core::Hashable
      
        # The Model only returns predictions with at least this confidence score.
        # Default value is 0.0
        # Corresponds to the JSON property `confidenceThreshold`
        # @return [Float]
        attr_accessor :confidence_threshold
      
        # The Model only returns up to that many top, by confidence score, predictions
        # per instance. If this number is very high, the Model may return fewer
        # predictions. Default value is 10,000.
        # Corresponds to the JSON property `maxPredictions`
        # @return [Fixnum]
        attr_accessor :max_predictions
      
        # Set to true to request classification for a video at one-second intervals.
        # Vertex AI returns labels and their confidence scores for each second of the
        # entire time segment of the video that user specified in the input WARNING:
        # Model evaluation is not done for this classification type, the quality of it
        # depends on the training data, but there are no metrics provided to describe
        # that quality. Default value is false
        # Corresponds to the JSON property `oneSecIntervalClassification`
        # @return [Boolean]
        attr_accessor :one_sec_interval_classification
        alias_method :one_sec_interval_classification?, :one_sec_interval_classification
      
        # Set to true to request segment-level classification. Vertex AI returns labels
        # and their confidence scores for the entire time segment of the video that user
        # specified in the input instance. Default value is true
        # Corresponds to the JSON property `segmentClassification`
        # @return [Boolean]
        attr_accessor :segment_classification
        alias_method :segment_classification?, :segment_classification
      
        # Set to true to request shot-level classification. Vertex AI determines the
        # boundaries for each camera shot in the entire time segment of the video that
        # user specified in the input instance. Vertex AI then returns labels and their
        # confidence scores for each detected shot, along with the start and end time of
        # the shot. WARNING: Model evaluation is not done for this classification type,
        # the quality of it depends on the training data, but there are no metrics
        # provided to describe that quality. Default value is false
        # Corresponds to the JSON property `shotClassification`
        # @return [Boolean]
        attr_accessor :shot_classification
        alias_method :shot_classification?, :shot_classification
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confidence_threshold = args[:confidence_threshold] if args.key?(:confidence_threshold)
          @max_predictions = args[:max_predictions] if args.key?(:max_predictions)
          @one_sec_interval_classification = args[:one_sec_interval_classification] if args.key?(:one_sec_interval_classification)
          @segment_classification = args[:segment_classification] if args.key?(:segment_classification)
          @shot_classification = args[:shot_classification] if args.key?(:shot_classification)
        end
      end
      
      # Prediction model parameters for Video Object Tracking.
      class GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoObjectTrackingPredictionParams
        include Google::Apis::Core::Hashable
      
        # The Model only returns predictions with at least this confidence score.
        # Default value is 0.0
        # Corresponds to the JSON property `confidenceThreshold`
        # @return [Float]
        attr_accessor :confidence_threshold
      
        # The model only returns up to that many top, by confidence score, predictions
        # per frame of the video. If this number is very high, the Model may return
        # fewer predictions per frame. Default value is 50.
        # Corresponds to the JSON property `maxPredictions`
        # @return [Fixnum]
        attr_accessor :max_predictions
      
        # Only bounding boxes with shortest edge at least that long as a relative value
        # of video frame size are returned. Default value is 0.0.
        # Corresponds to the JSON property `minBoundingBoxSize`
        # @return [Float]
        attr_accessor :min_bounding_box_size
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confidence_threshold = args[:confidence_threshold] if args.key?(:confidence_threshold)
          @max_predictions = args[:max_predictions] if args.key?(:max_predictions)
          @min_bounding_box_size = args[:min_bounding_box_size] if args.key?(:min_bounding_box_size)
        end
      end
      
      # Prediction output format for Image and Text Classification.
      class GoogleCloudAiplatformV1beta1SchemaPredictPredictionClassificationPredictionResult
        include Google::Apis::Core::Hashable
      
        # The Model's confidences in correctness of the predicted IDs, higher value
        # means higher confidence. Order matches the Ids.
        # Corresponds to the JSON property `confidences`
        # @return [Array<Float>]
        attr_accessor :confidences
      
        # The display names of the AnnotationSpecs that had been identified, order
        # matches the IDs.
        # Corresponds to the JSON property `displayNames`
        # @return [Array<String>]
        attr_accessor :display_names
      
        # The resource IDs of the AnnotationSpecs that had been identified.
        # Corresponds to the JSON property `ids`
        # @return [Array<Fixnum>]
        attr_accessor :ids
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confidences = args[:confidences] if args.key?(:confidences)
          @display_names = args[:display_names] if args.key?(:display_names)
          @ids = args[:ids] if args.key?(:ids)
        end
      end
      
      # Prediction output format for Image Object Detection.
      class GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult
        include Google::Apis::Core::Hashable
      
        # Bounding boxes, i.e. the rectangles over the image, that pinpoint the found
        # AnnotationSpecs. Given in order that matches the IDs. Each bounding box is an
        # array of 4 numbers `xMin`, `xMax`, `yMin`, and `yMax`, which represent the
        # extremal coordinates of the box. They are relative to the image size, and the
        # point 0,0 is in the top left of the image.
        # Corresponds to the JSON property `bboxes`
        # @return [Array<Array<Object>>]
        attr_accessor :bboxes
      
        # The Model's confidences in correctness of the predicted IDs, higher value
        # means higher confidence. Order matches the Ids.
        # Corresponds to the JSON property `confidences`
        # @return [Array<Float>]
        attr_accessor :confidences
      
        # The display names of the AnnotationSpecs that had been identified, order
        # matches the IDs.
        # Corresponds to the JSON property `displayNames`
        # @return [Array<String>]
        attr_accessor :display_names
      
        # The resource IDs of the AnnotationSpecs that had been identified, ordered by
        # the confidence score descendingly.
        # Corresponds to the JSON property `ids`
        # @return [Array<Fixnum>]
        attr_accessor :ids
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bboxes = args[:bboxes] if args.key?(:bboxes)
          @confidences = args[:confidences] if args.key?(:confidences)
          @display_names = args[:display_names] if args.key?(:display_names)
          @ids = args[:ids] if args.key?(:ids)
        end
      end
      
      # Prediction output format for Image Segmentation.
      class GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult
        include Google::Apis::Core::Hashable
      
        # A PNG image where each pixel in the mask represents the category in which the
        # pixel in the original image was predicted to belong to. The size of this image
        # will be the same as the original image. The mapping between the AnntoationSpec
        # and the color can be found in model's metadata. The model will choose the most
        # likely category and if none of the categories reach the confidence threshold,
        # the pixel will be marked as background.
        # Corresponds to the JSON property `categoryMask`
        # @return [String]
        attr_accessor :category_mask
      
        # A one channel image which is encoded as an 8bit lossless PNG. The size of the
        # image will be the same as the original image. For a specific pixel, darker
        # color means less confidence in correctness of the cateogry in the categoryMask
        # for the corresponding pixel. Black means no confidence and white means
        # complete confidence.
        # Corresponds to the JSON property `confidenceMask`
        # @return [String]
        attr_accessor :confidence_mask
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @category_mask = args[:category_mask] if args.key?(:category_mask)
          @confidence_mask = args[:confidence_mask] if args.key?(:confidence_mask)
        end
      end
      
      # Prediction output format for Tabular Classification.
      class GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult
        include Google::Apis::Core::Hashable
      
        # The name of the classes being classified, contains all possible values of the
        # target column.
        # Corresponds to the JSON property `classes`
        # @return [Array<String>]
        attr_accessor :classes
      
        # The model's confidence in each class being correct, higher value means higher
        # confidence. The N-th score corresponds to the N-th class in classes.
        # Corresponds to the JSON property `scores`
        # @return [Array<Float>]
        attr_accessor :scores
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @classes = args[:classes] if args.key?(:classes)
          @scores = args[:scores] if args.key?(:scores)
        end
      end
      
      # Prediction output format for Tabular Regression.
      class GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularRegressionPredictionResult
        include Google::Apis::Core::Hashable
      
        # The lower bound of the prediction interval.
        # Corresponds to the JSON property `lowerBound`
        # @return [Float]
        attr_accessor :lower_bound
      
        # Quantile predictions, in 1-1 correspondence with quantile_values.
        # Corresponds to the JSON property `quantilePredictions`
        # @return [Array<Float>]
        attr_accessor :quantile_predictions
      
        # Quantile values.
        # Corresponds to the JSON property `quantileValues`
        # @return [Array<Float>]
        attr_accessor :quantile_values
      
        # The upper bound of the prediction interval.
        # Corresponds to the JSON property `upperBound`
        # @return [Float]
        attr_accessor :upper_bound
      
        # The regression value.
        # Corresponds to the JSON property `value`
        # @return [Float]
        attr_accessor :value
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @lower_bound = args[:lower_bound] if args.key?(:lower_bound)
          @quantile_predictions = args[:quantile_predictions] if args.key?(:quantile_predictions)
          @quantile_values = args[:quantile_values] if args.key?(:quantile_values)
          @upper_bound = args[:upper_bound] if args.key?(:upper_bound)
          @value = args[:value] if args.key?(:value)
        end
      end
      
      # Prediction output format for Text Extraction.
      class GoogleCloudAiplatformV1beta1SchemaPredictPredictionTextExtractionPredictionResult
        include Google::Apis::Core::Hashable
      
        # The Model's confidences in correctness of the predicted IDs, higher value
        # means higher confidence. Order matches the Ids.
        # Corresponds to the JSON property `confidences`
        # @return [Array<Float>]
        attr_accessor :confidences
      
        # The display names of the AnnotationSpecs that had been identified, order
        # matches the IDs.
        # Corresponds to the JSON property `displayNames`
        # @return [Array<String>]
        attr_accessor :display_names
      
        # The resource IDs of the AnnotationSpecs that had been identified, ordered by
        # the confidence score descendingly.
        # Corresponds to the JSON property `ids`
        # @return [Array<Fixnum>]
        attr_accessor :ids
      
        # The end offsets, inclusive, of the text segment in which the AnnotationSpec
        # has been identified. Expressed as a zero-based number of characters as
        # measured from the start of the text snippet.
        # Corresponds to the JSON property `textSegmentEndOffsets`
        # @return [Array<Fixnum>]
        attr_accessor :text_segment_end_offsets
      
        # The start offsets, inclusive, of the text segment in which the AnnotationSpec
        # has been identified. Expressed as a zero-based number of characters as
        # measured from the start of the text snippet.
        # Corresponds to the JSON property `textSegmentStartOffsets`
        # @return [Array<Fixnum>]
        attr_accessor :text_segment_start_offsets
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confidences = args[:confidences] if args.key?(:confidences)
          @display_names = args[:display_names] if args.key?(:display_names)
          @ids = args[:ids] if args.key?(:ids)
          @text_segment_end_offsets = args[:text_segment_end_offsets] if args.key?(:text_segment_end_offsets)
          @text_segment_start_offsets = args[:text_segment_start_offsets] if args.key?(:text_segment_start_offsets)
        end
      end
      
      # Prediction output format for Text Sentiment
      class GoogleCloudAiplatformV1beta1SchemaPredictPredictionTextSentimentPredictionResult
        include Google::Apis::Core::Hashable
      
        # The integer sentiment labels between 0 (inclusive) and sentimentMax label (
        # inclusive), while 0 maps to the least positive sentiment and sentimentMax maps
        # to the most positive one. The higher the score is, the more positive the
        # sentiment in the text snippet is. Note: sentimentMax is an integer value
        # between 1 (inclusive) and 10 (inclusive).
        # Corresponds to the JSON property `sentiment`
        # @return [Fixnum]
        attr_accessor :sentiment
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @sentiment = args[:sentiment] if args.key?(:sentiment)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaPredictPredictionTftFeatureImportance
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `attributeColumns`
        # @return [Array<String>]
        attr_accessor :attribute_columns
      
        # 
        # Corresponds to the JSON property `attributeWeights`
        # @return [Array<Float>]
        attr_accessor :attribute_weights
      
        # 
        # Corresponds to the JSON property `contextColumns`
        # @return [Array<String>]
        attr_accessor :context_columns
      
        # TFT feature importance values. Each pair for `context/horizon/attribute`
        # should have the same shape since the weight corresponds to the column names.
        # Corresponds to the JSON property `contextWeights`
        # @return [Array<Float>]
        attr_accessor :context_weights
      
        # 
        # Corresponds to the JSON property `horizonColumns`
        # @return [Array<String>]
        attr_accessor :horizon_columns
      
        # 
        # Corresponds to the JSON property `horizonWeights`
        # @return [Array<Float>]
        attr_accessor :horizon_weights
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @attribute_columns = args[:attribute_columns] if args.key?(:attribute_columns)
          @attribute_weights = args[:attribute_weights] if args.key?(:attribute_weights)
          @context_columns = args[:context_columns] if args.key?(:context_columns)
          @context_weights = args[:context_weights] if args.key?(:context_weights)
          @horizon_columns = args[:horizon_columns] if args.key?(:horizon_columns)
          @horizon_weights = args[:horizon_weights] if args.key?(:horizon_weights)
        end
      end
      
      # Prediction output format for Time Series Forecasting.
      class GoogleCloudAiplatformV1beta1SchemaPredictPredictionTimeSeriesForecastingPredictionResult
        include Google::Apis::Core::Hashable
      
        # Quantile predictions, in 1-1 correspondence with quantile_values.
        # Corresponds to the JSON property `quantilePredictions`
        # @return [Array<Float>]
        attr_accessor :quantile_predictions
      
        # Quantile values.
        # Corresponds to the JSON property `quantileValues`
        # @return [Array<Float>]
        attr_accessor :quantile_values
      
        # Only use these if TFt is enabled.
        # Corresponds to the JSON property `tftFeatureImportance`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaPredictPredictionTftFeatureImportance]
        attr_accessor :tft_feature_importance
      
        # The regression value.
        # Corresponds to the JSON property `value`
        # @return [Float]
        attr_accessor :value
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @quantile_predictions = args[:quantile_predictions] if args.key?(:quantile_predictions)
          @quantile_values = args[:quantile_values] if args.key?(:quantile_values)
          @tft_feature_importance = args[:tft_feature_importance] if args.key?(:tft_feature_importance)
          @value = args[:value] if args.key?(:value)
        end
      end
      
      # Prediction output format for Video Action Recognition.
      class GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoActionRecognitionPredictionResult
        include Google::Apis::Core::Hashable
      
        # The Model's confidence in correction of this prediction, higher value means
        # higher confidence.
        # Corresponds to the JSON property `confidence`
        # @return [Float]
        attr_accessor :confidence
      
        # The display name of the AnnotationSpec that had been identified.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # The resource ID of the AnnotationSpec that had been identified.
        # Corresponds to the JSON property `id`
        # @return [String]
        attr_accessor :id
      
        # The end, exclusive, of the video's time segment in which the AnnotationSpec
        # has been identified. Expressed as a number of seconds as measured from the
        # start of the video, with fractions up to a microsecond precision, and with "s"
        # appended at the end.
        # Corresponds to the JSON property `timeSegmentEnd`
        # @return [String]
        attr_accessor :time_segment_end
      
        # The beginning, inclusive, of the video's time segment in which the
        # AnnotationSpec has been identified. Expressed as a number of seconds as
        # measured from the start of the video, with fractions up to a microsecond
        # precision, and with "s" appended at the end.
        # Corresponds to the JSON property `timeSegmentStart`
        # @return [String]
        attr_accessor :time_segment_start
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confidence = args[:confidence] if args.key?(:confidence)
          @display_name = args[:display_name] if args.key?(:display_name)
          @id = args[:id] if args.key?(:id)
          @time_segment_end = args[:time_segment_end] if args.key?(:time_segment_end)
          @time_segment_start = args[:time_segment_start] if args.key?(:time_segment_start)
        end
      end
      
      # Prediction output format for Video Classification.
      class GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoClassificationPredictionResult
        include Google::Apis::Core::Hashable
      
        # The Model's confidence in correction of this prediction, higher value means
        # higher confidence.
        # Corresponds to the JSON property `confidence`
        # @return [Float]
        attr_accessor :confidence
      
        # The display name of the AnnotationSpec that had been identified.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # The resource ID of the AnnotationSpec that had been identified.
        # Corresponds to the JSON property `id`
        # @return [String]
        attr_accessor :id
      
        # The end, exclusive, of the video's time segment in which the AnnotationSpec
        # has been identified. Expressed as a number of seconds as measured from the
        # start of the video, with fractions up to a microsecond precision, and with "s"
        # appended at the end. Note that for 'segment-classification' prediction type,
        # this equals the original 'timeSegmentEnd' from the input instance, for other
        # types it is the end of a shot or a 1 second interval respectively.
        # Corresponds to the JSON property `timeSegmentEnd`
        # @return [String]
        attr_accessor :time_segment_end
      
        # The beginning, inclusive, of the video's time segment in which the
        # AnnotationSpec has been identified. Expressed as a number of seconds as
        # measured from the start of the video, with fractions up to a microsecond
        # precision, and with "s" appended at the end. Note that for 'segment-
        # classification' prediction type, this equals the original 'timeSegmentStart'
        # from the input instance, for other types it is the start of a shot or a 1
        # second interval respectively.
        # Corresponds to the JSON property `timeSegmentStart`
        # @return [String]
        attr_accessor :time_segment_start
      
        # The type of the prediction. The requested types can be configured via
        # parameters. This will be one of - segment-classification - shot-classification
        # - one-sec-interval-classification
        # Corresponds to the JSON property `type`
        # @return [String]
        attr_accessor :type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confidence = args[:confidence] if args.key?(:confidence)
          @display_name = args[:display_name] if args.key?(:display_name)
          @id = args[:id] if args.key?(:id)
          @time_segment_end = args[:time_segment_end] if args.key?(:time_segment_end)
          @time_segment_start = args[:time_segment_start] if args.key?(:time_segment_start)
          @type = args[:type] if args.key?(:type)
        end
      end
      
      # Prediction output format for Video Object Tracking.
      class GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoObjectTrackingPredictionResult
        include Google::Apis::Core::Hashable
      
        # The Model's confidence in correction of this prediction, higher value means
        # higher confidence.
        # Corresponds to the JSON property `confidence`
        # @return [Float]
        attr_accessor :confidence
      
        # The display name of the AnnotationSpec that had been identified.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # All of the frames of the video in which a single object instance has been
        # detected. The bounding boxes in the frames identify the same object.
        # Corresponds to the JSON property `frames`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame>]
        attr_accessor :frames
      
        # The resource ID of the AnnotationSpec that had been identified.
        # Corresponds to the JSON property `id`
        # @return [String]
        attr_accessor :id
      
        # The end, inclusive, of the video's time segment in which the object instance
        # has been detected. Expressed as a number of seconds as measured from the start
        # of the video, with fractions up to a microsecond precision, and with "s"
        # appended at the end.
        # Corresponds to the JSON property `timeSegmentEnd`
        # @return [String]
        attr_accessor :time_segment_end
      
        # The beginning, inclusive, of the video's time segment in which the object
        # instance has been detected. Expressed as a number of seconds as measured from
        # the start of the video, with fractions up to a microsecond precision, and with
        # "s" appended at the end.
        # Corresponds to the JSON property `timeSegmentStart`
        # @return [String]
        attr_accessor :time_segment_start
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @confidence = args[:confidence] if args.key?(:confidence)
          @display_name = args[:display_name] if args.key?(:display_name)
          @frames = args[:frames] if args.key?(:frames)
          @id = args[:id] if args.key?(:id)
          @time_segment_end = args[:time_segment_end] if args.key?(:time_segment_end)
          @time_segment_start = args[:time_segment_start] if args.key?(:time_segment_start)
        end
      end
      
      # The fields `xMin`, `xMax`, `yMin`, and `yMax` refer to a bounding box, i.e.
      # the rectangle over the video frame pinpointing the found AnnotationSpec. The
      # coordinates are relative to the frame size, and the point 0,0 is in the top
      # left of the frame.
      class GoogleCloudAiplatformV1beta1SchemaPredictPredictionVideoObjectTrackingPredictionResultFrame
        include Google::Apis::Core::Hashable
      
        # A time (frame) of a video in which the object has been detected. Expressed as
        # a number of seconds as measured from the start of the video, with fractions up
        # to a microsecond precision, and with "s" appended at the end.
        # Corresponds to the JSON property `timeOffset`
        # @return [String]
        attr_accessor :time_offset
      
        # The rightmost coordinate of the bounding box.
        # Corresponds to the JSON property `xMax`
        # @return [Float]
        attr_accessor :x_max
      
        # The leftmost coordinate of the bounding box.
        # Corresponds to the JSON property `xMin`
        # @return [Float]
        attr_accessor :x_min
      
        # The bottommost coordinate of the bounding box.
        # Corresponds to the JSON property `yMax`
        # @return [Float]
        attr_accessor :y_max
      
        # The topmost coordinate of the bounding box.
        # Corresponds to the JSON property `yMin`
        # @return [Float]
        attr_accessor :y_min
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @time_offset = args[:time_offset] if args.key?(:time_offset)
          @x_max = args[:x_max] if args.key?(:x_max)
          @x_min = args[:x_min] if args.key?(:x_min)
          @y_max = args[:y_max] if args.key?(:y_max)
          @y_min = args[:y_min] if args.key?(:y_min)
        end
      end
      
      # Represents a line of JSONL in the batch prediction output file.
      class GoogleCloudAiplatformV1beta1SchemaPredictionResult
        include Google::Apis::Core::Hashable
      
        # The error result. Do not set prediction if this is set.
        # Corresponds to the JSON property `error`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaPredictionResultError]
        attr_accessor :error
      
        # User's input instance. Struct is used here instead of Any so that JsonFormat
        # does not append an extra "@type" field when we convert the proto to JSON.
        # Corresponds to the JSON property `instance`
        # @return [Hash<String,Object>]
        attr_accessor :instance
      
        # Optional user-provided key from the input instance.
        # Corresponds to the JSON property `key`
        # @return [String]
        attr_accessor :key
      
        # The prediction result. Value is used here instead of Any so that JsonFormat
        # does not append an extra "@type" field when we convert the proto to JSON and
        # so we can represent array of objects. Do not set error if this is set.
        # Corresponds to the JSON property `prediction`
        # @return [Object]
        attr_accessor :prediction
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @error = args[:error] if args.key?(:error)
          @instance = args[:instance] if args.key?(:instance)
          @key = args[:key] if args.key?(:key)
          @prediction = args[:prediction] if args.key?(:prediction)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaPredictionResultError
        include Google::Apis::Core::Hashable
      
        # Error message with additional details.
        # Corresponds to the JSON property `message`
        # @return [String]
        attr_accessor :message
      
        # Error status. This will be serialized into the enum name e.g. "NOT_FOUND".
        # Corresponds to the JSON property `status`
        # @return [String]
        attr_accessor :status
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @message = args[:message] if args.key?(:message)
          @status = args[:status] if args.key?(:status)
        end
      end
      
      # The metadata of Datasets that contain tables data.
      class GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadata
        include Google::Apis::Core::Hashable
      
        # The tables Dataset's data source. The Dataset doesn't store the data directly,
        # but only pointer(s) to its data.
        # Corresponds to the JSON property `inputConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig]
        attr_accessor :input_config
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @input_config = args[:input_config] if args.key?(:input_config)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataBigQuerySource
        include Google::Apis::Core::Hashable
      
        # The URI of a BigQuery table. e.g. bq://projectId.bqDatasetId.bqTableId
        # Corresponds to the JSON property `uri`
        # @return [String]
        attr_accessor :uri
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @uri = args[:uri] if args.key?(:uri)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataGcsSource
        include Google::Apis::Core::Hashable
      
        # Cloud Storage URI of one or more files. Only CSV files are supported. The
        # first line of the CSV file is used as the header. If there are multiple files,
        # the header is the first line of the lexicographically first file, the other
        # files must either contain the exact same header or omit the header.
        # Corresponds to the JSON property `uri`
        # @return [Array<String>]
        attr_accessor :uri
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @uri = args[:uri] if args.key?(:uri)
        end
      end
      
      # The tables Dataset's data source. The Dataset doesn't store the data directly,
      # but only pointer(s) to its data.
      class GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `bigquerySource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataBigQuerySource]
        attr_accessor :bigquery_source
      
        # 
        # Corresponds to the JSON property `gcsSource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataGcsSource]
        attr_accessor :gcs_source
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bigquery_source = args[:bigquery_source] if args.key?(:bigquery_source)
          @gcs_source = args[:gcs_source] if args.key?(:gcs_source)
        end
      end
      
      # Annotation details specific to text classification.
      class GoogleCloudAiplatformV1beta1SchemaTextClassificationAnnotation
        include Google::Apis::Core::Hashable
      
        # The resource Id of the AnnotationSpec that this Annotation pertains to.
        # Corresponds to the JSON property `annotationSpecId`
        # @return [String]
        attr_accessor :annotation_spec_id
      
        # The display name of the AnnotationSpec that this Annotation pertains to.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotation_spec_id = args[:annotation_spec_id] if args.key?(:annotation_spec_id)
          @display_name = args[:display_name] if args.key?(:display_name)
        end
      end
      
      # Payload of Text DataItem.
      class GoogleCloudAiplatformV1beta1SchemaTextDataItem
        include Google::Apis::Core::Hashable
      
        # Output only. Google Cloud Storage URI points to the original text in user's
        # bucket. The text file is up to 10MB in size.
        # Corresponds to the JSON property `gcsUri`
        # @return [String]
        attr_accessor :gcs_uri
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @gcs_uri = args[:gcs_uri] if args.key?(:gcs_uri)
        end
      end
      
      # The metadata of Datasets that contain Text DataItems.
      class GoogleCloudAiplatformV1beta1SchemaTextDatasetMetadata
        include Google::Apis::Core::Hashable
      
        # Points to a YAML file stored on Google Cloud Storage describing payload of the
        # Text DataItems that belong to this Dataset.
        # Corresponds to the JSON property `dataItemSchemaUri`
        # @return [String]
        attr_accessor :data_item_schema_uri
      
        # Google Cloud Storage Bucket name that contains the blob data of this Dataset.
        # Corresponds to the JSON property `gcsBucket`
        # @return [String]
        attr_accessor :gcs_bucket
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @data_item_schema_uri = args[:data_item_schema_uri] if args.key?(:data_item_schema_uri)
          @gcs_bucket = args[:gcs_bucket] if args.key?(:gcs_bucket)
        end
      end
      
      # Annotation details specific to text extraction.
      class GoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation
        include Google::Apis::Core::Hashable
      
        # The resource Id of the AnnotationSpec that this Annotation pertains to.
        # Corresponds to the JSON property `annotationSpecId`
        # @return [String]
        attr_accessor :annotation_spec_id
      
        # The display name of the AnnotationSpec that this Annotation pertains to.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # The text segment inside of DataItem.
        # Corresponds to the JSON property `textSegment`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTextSegment]
        attr_accessor :text_segment
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotation_spec_id = args[:annotation_spec_id] if args.key?(:annotation_spec_id)
          @display_name = args[:display_name] if args.key?(:display_name)
          @text_segment = args[:text_segment] if args.key?(:text_segment)
        end
      end
      
      # The text segment inside of DataItem.
      class GoogleCloudAiplatformV1beta1SchemaTextSegment
        include Google::Apis::Core::Hashable
      
        # The text content in the segment for output only.
        # Corresponds to the JSON property `content`
        # @return [String]
        attr_accessor :content
      
        # Zero-based character index of the first character past the end of the text
        # segment (counting character from the beginning of the text). The character at
        # the end_offset is NOT included in the text segment.
        # Corresponds to the JSON property `endOffset`
        # @return [Fixnum]
        attr_accessor :end_offset
      
        # Zero-based character index of the first character of the text segment (
        # counting characters from the beginning of the text).
        # Corresponds to the JSON property `startOffset`
        # @return [Fixnum]
        attr_accessor :start_offset
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @content = args[:content] if args.key?(:content)
          @end_offset = args[:end_offset] if args.key?(:end_offset)
          @start_offset = args[:start_offset] if args.key?(:start_offset)
        end
      end
      
      # Annotation details specific to text sentiment.
      class GoogleCloudAiplatformV1beta1SchemaTextSentimentAnnotation
        include Google::Apis::Core::Hashable
      
        # The resource Id of the AnnotationSpec that this Annotation pertains to.
        # Corresponds to the JSON property `annotationSpecId`
        # @return [String]
        attr_accessor :annotation_spec_id
      
        # The display name of the AnnotationSpec that this Annotation pertains to.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # The sentiment score for text.
        # Corresponds to the JSON property `sentiment`
        # @return [Fixnum]
        attr_accessor :sentiment
      
        # The sentiment max score for text.
        # Corresponds to the JSON property `sentimentMax`
        # @return [Fixnum]
        attr_accessor :sentiment_max
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotation_spec_id = args[:annotation_spec_id] if args.key?(:annotation_spec_id)
          @display_name = args[:display_name] if args.key?(:display_name)
          @sentiment = args[:sentiment] if args.key?(:sentiment)
          @sentiment_max = args[:sentiment_max] if args.key?(:sentiment_max)
        end
      end
      
      # The metadata of SavedQuery contains TextSentiment Annotations.
      class GoogleCloudAiplatformV1beta1SchemaTextSentimentSavedQueryMetadata
        include Google::Apis::Core::Hashable
      
        # The maximum sentiment of sentiment Anntoation in this SavedQuery.
        # Corresponds to the JSON property `sentimentMax`
        # @return [Fixnum]
        attr_accessor :sentiment_max
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @sentiment_max = args[:sentiment_max] if args.key?(:sentiment_max)
        end
      end
      
      # A time period inside of a DataItem that has a time dimension (e.g. video).
      class GoogleCloudAiplatformV1beta1SchemaTimeSegment
        include Google::Apis::Core::Hashable
      
        # End of the time segment (exclusive), represented as the duration since the
        # start of the DataItem.
        # Corresponds to the JSON property `endTimeOffset`
        # @return [String]
        attr_accessor :end_time_offset
      
        # Start of the time segment (inclusive), represented as the duration since the
        # start of the DataItem.
        # Corresponds to the JSON property `startTimeOffset`
        # @return [String]
        attr_accessor :start_time_offset
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @end_time_offset = args[:end_time_offset] if args.key?(:end_time_offset)
          @start_time_offset = args[:start_time_offset] if args.key?(:start_time_offset)
        end
      end
      
      # The metadata of Datasets that contain time series data.
      class GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadata
        include Google::Apis::Core::Hashable
      
        # The time series Dataset's data source. The Dataset doesn't store the data
        # directly, but only pointer(s) to its data.
        # Corresponds to the JSON property `inputConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataInputConfig]
        attr_accessor :input_config
      
        # The column name of the time column that identifies time order in the time
        # series.
        # Corresponds to the JSON property `timeColumn`
        # @return [String]
        attr_accessor :time_column
      
        # The column name of the time series identifier column that identifies the time
        # series.
        # Corresponds to the JSON property `timeSeriesIdentifierColumn`
        # @return [String]
        attr_accessor :time_series_identifier_column
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @input_config = args[:input_config] if args.key?(:input_config)
          @time_column = args[:time_column] if args.key?(:time_column)
          @time_series_identifier_column = args[:time_series_identifier_column] if args.key?(:time_series_identifier_column)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataBigQuerySource
        include Google::Apis::Core::Hashable
      
        # The URI of a BigQuery table.
        # Corresponds to the JSON property `uri`
        # @return [String]
        attr_accessor :uri
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @uri = args[:uri] if args.key?(:uri)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataGcsSource
        include Google::Apis::Core::Hashable
      
        # Cloud Storage URI of one or more files. Only CSV files are supported. The
        # first line of the CSV file is used as the header. If there are multiple files,
        # the header is the first line of the lexicographically first file, the other
        # files must either contain the exact same header or omit the header.
        # Corresponds to the JSON property `uri`
        # @return [Array<String>]
        attr_accessor :uri
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @uri = args[:uri] if args.key?(:uri)
        end
      end
      
      # The time series Dataset's data source. The Dataset doesn't store the data
      # directly, but only pointer(s) to its data.
      class GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataInputConfig
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `bigquerySource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataBigQuerySource]
        attr_accessor :bigquery_source
      
        # 
        # Corresponds to the JSON property `gcsSource`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTimeSeriesDatasetMetadataGcsSource]
        attr_accessor :gcs_source
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bigquery_source = args[:bigquery_source] if args.key?(:bigquery_source)
          @gcs_source = args[:gcs_source] if args.key?(:gcs_source)
        end
      end
      
      # A TrainingJob that trains and uploads an AutoML Forecasting Model.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecasting
        include Google::Apis::Core::Hashable
      
        # The input parameters of this TrainingJob.
        # Corresponds to the JSON property `inputs`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputs]
        attr_accessor :inputs
      
        # Model metadata specific to AutoML Forecasting.
        # Corresponds to the JSON property `metadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingMetadata]
        attr_accessor :metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @inputs = args[:inputs] if args.key?(:inputs)
          @metadata = args[:metadata] if args.key?(:metadata)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputs
        include Google::Apis::Core::Hashable
      
        # Additional experiment flags for the time series forcasting training.
        # Corresponds to the JSON property `additionalExperiments`
        # @return [Array<String>]
        attr_accessor :additional_experiments
      
        # Names of columns that are available and provided when a forecast is requested.
        # These columns contain information for the given entity (identified by the
        # time_series_identifier_column column) that is known at forecast. For example,
        # predicted weather for a specific day.
        # Corresponds to the JSON property `availableAtForecastColumns`
        # @return [Array<String>]
        attr_accessor :available_at_forecast_columns
      
        # The amount of time into the past training and prediction data is used for
        # model training and prediction respectively. Expressed in number of units
        # defined by the `data_granularity` field.
        # Corresponds to the JSON property `contextWindow`
        # @return [Fixnum]
        attr_accessor :context_window
      
        # A duration of time expressed in time granularity units.
        # Corresponds to the JSON property `dataGranularity`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsGranularity]
        attr_accessor :data_granularity
      
        # If probabilistic inference is enabled, the model will fit a distribution that
        # captures the uncertainty of a prediction. At inference time, the predictive
        # distribution is used to make a point prediction that minimizes the
        # optimization objective. For example, the mean of a predictive distribution is
        # the point prediction that minimizes RMSE loss. If quantiles are specified,
        # then the quantiles of the distribution are also returned. The optimization
        # objective cannot be minimize-quantile-loss.
        # Corresponds to the JSON property `enableProbabilisticInference`
        # @return [Boolean]
        attr_accessor :enable_probabilistic_inference
        alias_method :enable_probabilistic_inference?, :enable_probabilistic_inference
      
        # Configuration for exporting test set predictions to a BigQuery table.
        # Corresponds to the JSON property `exportEvaluatedDataItemsConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig]
        attr_accessor :export_evaluated_data_items_config
      
        # The amount of time into the future for which forecasted values for the target
        # are returned. Expressed in number of units defined by the `data_granularity`
        # field.
        # Corresponds to the JSON property `forecastHorizon`
        # @return [Fixnum]
        attr_accessor :forecast_horizon
      
        # Configuration that defines the hierarchical relationship of time series and
        # parameters for hierarchical forecasting strategies.
        # Corresponds to the JSON property `hierarchyConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig]
        attr_accessor :hierarchy_config
      
        # The geographical region based on which the holiday effect is applied in
        # modeling by adding holiday categorical array feature that include all holidays
        # matching the date. This option only allowed when data_granularity is day. By
        # default, holiday effect modeling is disabled. To turn it on, specify the
        # holiday region using this option.
        # Corresponds to the JSON property `holidayRegions`
        # @return [Array<String>]
        attr_accessor :holiday_regions
      
        # Objective function the model is optimizing towards. The training process
        # creates a model that optimizes the value of the objective function over the
        # validation set. The supported optimization objectives: * "minimize-rmse" (
        # default) - Minimize root-mean-squared error (RMSE). * "minimize-mae" -
        # Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize root-mean-
        # squared log error (RMSLE). * "minimize-rmspe" - Minimize root-mean-squared
        # percentage error (RMSPE). * "minimize-wape-mae" - Minimize the combination of
        # weighted absolute percentage error (WAPE) and mean-absolute-error (MAE). * "
        # minimize-quantile-loss" - Minimize the quantile loss at the quantiles defined
        # in `quantiles`. * "minimize-mape" - Minimize the mean absolute percentage
        # error.
        # Corresponds to the JSON property `optimizationObjective`
        # @return [String]
        attr_accessor :optimization_objective
      
        # Quantiles to use for minimize-quantile-loss `optimization_objective`, or for
        # probabilistic inference. Up to 5 quantiles are allowed of values between 0 and
        # 1, exclusive. Required if the value of optimization_objective is minimize-
        # quantile-loss. Represents the percent quantiles to use for that objective.
        # Quantiles must be unique.
        # Corresponds to the JSON property `quantiles`
        # @return [Array<Float>]
        attr_accessor :quantiles
      
        # The name of the column that the Model is to predict values for. This column
        # must be unavailable at forecast.
        # Corresponds to the JSON property `targetColumn`
        # @return [String]
        attr_accessor :target_column
      
        # The name of the column that identifies time order in the time series. This
        # column must be available at forecast.
        # Corresponds to the JSON property `timeColumn`
        # @return [String]
        attr_accessor :time_column
      
        # Column names that should be used as attribute columns. The value of these
        # columns does not vary as a function of time. For example, store ID or item
        # color.
        # Corresponds to the JSON property `timeSeriesAttributeColumns`
        # @return [Array<String>]
        attr_accessor :time_series_attribute_columns
      
        # The name of the column that identifies the time series.
        # Corresponds to the JSON property `timeSeriesIdentifierColumn`
        # @return [String]
        attr_accessor :time_series_identifier_column
      
        # Required. The train budget of creating this model, expressed in milli node
        # hours i.e. 1,000 value in this field means 1 node hour. The training cost of
        # the model will not exceed this budget. The final cost will be attempted to be
        # close to the budget, though may end up being (even) noticeably smaller - at
        # the backend's discretion. This especially may happen when further model
        # training ceases to provide any improvements. If the budget is set to a value
        # known to be insufficient to train a model for the given dataset, the training
        # won't be attempted and will error. The train budget must be between 1,000 and
        # 72,000 milli node hours, inclusive.
        # Corresponds to the JSON property `trainBudgetMilliNodeHours`
        # @return [Fixnum]
        attr_accessor :train_budget_milli_node_hours
      
        # Each transformation will apply transform function to given input column. And
        # the result will be used for training. When creating transformation for
        # BigQuery Struct column, the column should be flattened using "." as the
        # delimiter.
        # Corresponds to the JSON property `transformations`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation>]
        attr_accessor :transformations
      
        # Names of columns that are unavailable when a forecast is requested. This
        # column contains information for the given entity (identified by the
        # time_series_identifier_column) that is unknown before the forecast For example,
        # actual weather on a given day.
        # Corresponds to the JSON property `unavailableAtForecastColumns`
        # @return [Array<String>]
        attr_accessor :unavailable_at_forecast_columns
      
        # Validation options for the data validation component. The available options
        # are: * "fail-pipeline" - default, will validate against the validation and
        # fail the pipeline if it fails. * "ignore-validation" - ignore the results of
        # the validation and continue
        # Corresponds to the JSON property `validationOptions`
        # @return [String]
        attr_accessor :validation_options
      
        # Column name that should be used as the weight column. Higher values in this
        # column give more importance to the row during model training. The column must
        # have numeric values between 0 and 10000 inclusively; 0 means the row is
        # ignored for training. If weight column field is not set, then all rows are
        # assumed to have equal weight of 1.
        # Corresponds to the JSON property `weightColumn`
        # @return [String]
        attr_accessor :weight_column
      
        # Config that contains the strategy used to generate sliding windows in time
        # series training. A window is a series of rows that comprise the context up to
        # the time of prediction, and the horizon following. The corresponding row for
        # each window marks the start of the forecast horizon. Each window is used as an
        # input example for training/evaluation.
        # Corresponds to the JSON property `windowConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionWindowConfig]
        attr_accessor :window_config
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @additional_experiments = args[:additional_experiments] if args.key?(:additional_experiments)
          @available_at_forecast_columns = args[:available_at_forecast_columns] if args.key?(:available_at_forecast_columns)
          @context_window = args[:context_window] if args.key?(:context_window)
          @data_granularity = args[:data_granularity] if args.key?(:data_granularity)
          @enable_probabilistic_inference = args[:enable_probabilistic_inference] if args.key?(:enable_probabilistic_inference)
          @export_evaluated_data_items_config = args[:export_evaluated_data_items_config] if args.key?(:export_evaluated_data_items_config)
          @forecast_horizon = args[:forecast_horizon] if args.key?(:forecast_horizon)
          @hierarchy_config = args[:hierarchy_config] if args.key?(:hierarchy_config)
          @holiday_regions = args[:holiday_regions] if args.key?(:holiday_regions)
          @optimization_objective = args[:optimization_objective] if args.key?(:optimization_objective)
          @quantiles = args[:quantiles] if args.key?(:quantiles)
          @target_column = args[:target_column] if args.key?(:target_column)
          @time_column = args[:time_column] if args.key?(:time_column)
          @time_series_attribute_columns = args[:time_series_attribute_columns] if args.key?(:time_series_attribute_columns)
          @time_series_identifier_column = args[:time_series_identifier_column] if args.key?(:time_series_identifier_column)
          @train_budget_milli_node_hours = args[:train_budget_milli_node_hours] if args.key?(:train_budget_milli_node_hours)
          @transformations = args[:transformations] if args.key?(:transformations)
          @unavailable_at_forecast_columns = args[:unavailable_at_forecast_columns] if args.key?(:unavailable_at_forecast_columns)
          @validation_options = args[:validation_options] if args.key?(:validation_options)
          @weight_column = args[:weight_column] if args.key?(:weight_column)
          @window_config = args[:window_config] if args.key?(:window_config)
        end
      end
      
      # A duration of time expressed in time granularity units.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsGranularity
        include Google::Apis::Core::Hashable
      
        # The number of granularity_units between data points in the training data. If `
        # granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30. For all other
        # values of `granularity_unit`, must be 1.
        # Corresponds to the JSON property `quantity`
        # @return [Fixnum]
        attr_accessor :quantity
      
        # The time granularity unit of this time period. The supported units are: * "
        # minute" * "hour" * "day" * "week" * "month" * "year"
        # Corresponds to the JSON property `unit`
        # @return [String]
        attr_accessor :unit
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @quantity = args[:quantity] if args.key?(:quantity)
          @unit = args[:unit] if args.key?(:unit)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformation
        include Google::Apis::Core::Hashable
      
        # Training pipeline will infer the proper transformation based on the statistic
        # of dataset.
        # Corresponds to the JSON property `auto`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation]
        attr_accessor :auto
      
        # Training pipeline will perform following transformation functions. * The
        # categorical string as is--no change to case, punctuation, spelling, tense, and
        # so on. * Convert the category name to a dictionary lookup index and generate
        # an embedding for each index. * Categories that appear less than 5 times in the
        # training dataset are treated as the "unknown" category. The "unknown" category
        # gets its own special lookup index and resulting embedding.
        # Corresponds to the JSON property `categorical`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation]
        attr_accessor :categorical
      
        # Training pipeline will perform following transformation functions. * The value
        # converted to float32. * The z_score of the value. * log(value+1) when the
        # value is greater than or equal to 0. Otherwise, this transformation is not
        # applied and the value is considered a missing value. * z_score of log(value+1)
        # when the value is greater than or equal to 0. Otherwise, this transformation
        # is not applied and the value is considered a missing value. * A boolean value
        # that indicates whether the value is valid.
        # Corresponds to the JSON property `numeric`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation]
        attr_accessor :numeric
      
        # Training pipeline will perform following transformation functions. * The text
        # as is--no change to case, punctuation, spelling, tense, and so on. * Convert
        # the category name to a dictionary lookup index and generate an embedding for
        # each index.
        # Corresponds to the JSON property `text`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation]
        attr_accessor :text
      
        # Training pipeline will perform following transformation functions. * Apply the
        # transformation functions for Numerical columns. * Determine the year, month,
        # day,and weekday. Treat each value from the timestamp as a Categorical column. *
        # Invalid numerical values (for example, values that fall outside of a typical
        # timestamp range, or are extreme values) receive no special treatment and are
        # not removed.
        # Corresponds to the JSON property `timestamp`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation]
        attr_accessor :timestamp
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @auto = args[:auto] if args.key?(:auto)
          @categorical = args[:categorical] if args.key?(:categorical)
          @numeric = args[:numeric] if args.key?(:numeric)
          @text = args[:text] if args.key?(:text)
          @timestamp = args[:timestamp] if args.key?(:timestamp)
        end
      end
      
      # Training pipeline will infer the proper transformation based on the statistic
      # of dataset.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationAutoTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
        end
      end
      
      # Training pipeline will perform following transformation functions. * The
      # categorical string as is--no change to case, punctuation, spelling, tense, and
      # so on. * Convert the category name to a dictionary lookup index and generate
      # an embedding for each index. * Categories that appear less than 5 times in the
      # training dataset are treated as the "unknown" category. The "unknown" category
      # gets its own special lookup index and resulting embedding.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationCategoricalTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
        end
      end
      
      # Training pipeline will perform following transformation functions. * The value
      # converted to float32. * The z_score of the value. * log(value+1) when the
      # value is greater than or equal to 0. Otherwise, this transformation is not
      # applied and the value is considered a missing value. * z_score of log(value+1)
      # when the value is greater than or equal to 0. Otherwise, this transformation
      # is not applied and the value is considered a missing value. * A boolean value
      # that indicates whether the value is valid.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationNumericTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
        end
      end
      
      # Training pipeline will perform following transformation functions. * The text
      # as is--no change to case, punctuation, spelling, tense, and so on. * Convert
      # the category name to a dictionary lookup index and generate an embedding for
      # each index.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTextTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
        end
      end
      
      # Training pipeline will perform following transformation functions. * Apply the
      # transformation functions for Numerical columns. * Determine the year, month,
      # day,and weekday. Treat each value from the timestamp as a Categorical column. *
      # Invalid numerical values (for example, values that fall outside of a typical
      # timestamp range, or are extreme values) receive no special treatment and are
      # not removed.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingInputsTransformationTimestampTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        # The format in which that time field is expressed. The time_format must either
        # be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `
        # unix-nanoseconds` (for respectively number of seconds, milliseconds,
        # microseconds and nanoseconds since start of the Unix epoch); or be written in `
        # strftime` syntax. If time_format is not set, then the default format is RFC
        # 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.
        # 52Z)
        # Corresponds to the JSON property `timeFormat`
        # @return [String]
        attr_accessor :time_format
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
          @time_format = args[:time_format] if args.key?(:time_format)
        end
      end
      
      # Model metadata specific to AutoML Forecasting.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlForecastingMetadata
        include Google::Apis::Core::Hashable
      
        # BigQuery destination uri for exported evaluated examples.
        # Corresponds to the JSON property `evaluatedDataItemsBigqueryUri`
        # @return [String]
        attr_accessor :evaluated_data_items_bigquery_uri
      
        # Output only. The actual training cost of the model, expressed in milli node
        # hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not
        # exceed the train budget.
        # Corresponds to the JSON property `trainCostMilliNodeHours`
        # @return [Fixnum]
        attr_accessor :train_cost_milli_node_hours
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @evaluated_data_items_bigquery_uri = args[:evaluated_data_items_bigquery_uri] if args.key?(:evaluated_data_items_bigquery_uri)
          @train_cost_milli_node_hours = args[:train_cost_milli_node_hours] if args.key?(:train_cost_milli_node_hours)
        end
      end
      
      # A TrainingJob that trains and uploads an AutoML Image Classification Model.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassification
        include Google::Apis::Core::Hashable
      
        # The input parameters of this TrainingJob.
        # Corresponds to the JSON property `inputs`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs]
        attr_accessor :inputs
      
        # The metadata information.
        # Corresponds to the JSON property `metadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata]
        attr_accessor :metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @inputs = args[:inputs] if args.key?(:inputs)
          @metadata = args[:metadata] if args.key?(:metadata)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs
        include Google::Apis::Core::Hashable
      
        # The ID of the `base` model. If it is specified, the new model will be trained
        # based on the `base` model. Otherwise, the new model will be trained from
        # scratch. The `base` model must be in the same Project and Location as the new
        # Model to train, and have the same modelType.
        # Corresponds to the JSON property `baseModelId`
        # @return [String]
        attr_accessor :base_model_id
      
        # The training budget of creating this model, expressed in milli node hours i.e.
        # 1,000 value in this field means 1 node hour. The actual metadata.
        # costMilliNodeHours will be equal or less than this value. If further model
        # training ceases to provide any improvements, it will stop without using the
        # full budget and the metadata.successfulStopReason will be `model-converged`.
        # Note, node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`
        # (default), the budget must be between 8,000 and 800,000 milli node hours,
        # inclusive. The default value is 192,000 which represents one day in wall time,
        # considering 8 nodes are used. For model types `mobile-tf-low-latency-1`, `
        # mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1`, the training budget must
        # be between 1,000 and 100,000 milli node hours, inclusive. The default value is
        # 24,000 which represents one day in wall time on a single node that is used.
        # Corresponds to the JSON property `budgetMilliNodeHours`
        # @return [Fixnum]
        attr_accessor :budget_milli_node_hours
      
        # Use the entire training budget. This disables the early stopping feature. When
        # false the early stopping feature is enabled, which means that AutoML Image
        # Classification might stop training before the entire training budget has been
        # used.
        # Corresponds to the JSON property `disableEarlyStopping`
        # @return [Boolean]
        attr_accessor :disable_early_stopping
        alias_method :disable_early_stopping?, :disable_early_stopping
      
        # 
        # Corresponds to the JSON property `modelType`
        # @return [String]
        attr_accessor :model_type
      
        # If false, a single-label (multi-class) Model will be trained (i.e. assuming
        # that for each image just up to one annotation may be applicable). If true, a
        # multi-label Model will be trained (i.e. assuming that for each image multiple
        # annotations may be applicable).
        # Corresponds to the JSON property `multiLabel`
        # @return [Boolean]
        attr_accessor :multi_label
        alias_method :multi_label?, :multi_label
      
        # A wrapper class which contains the tunable parameters in an AutoML Image
        # training job.
        # Corresponds to the JSON property `tunableParameter`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter]
        attr_accessor :tunable_parameter
      
        # The ID of `base` model for upTraining. If it is specified, the new model will
        # be upTrained based on the `base` model for upTraining. Otherwise, the new
        # model will be trained from scratch. The `base` model for upTraining must be in
        # the same Project and Location as the new Model to train, and have the same
        # modelType.
        # Corresponds to the JSON property `uptrainBaseModelId`
        # @return [String]
        attr_accessor :uptrain_base_model_id
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @base_model_id = args[:base_model_id] if args.key?(:base_model_id)
          @budget_milli_node_hours = args[:budget_milli_node_hours] if args.key?(:budget_milli_node_hours)
          @disable_early_stopping = args[:disable_early_stopping] if args.key?(:disable_early_stopping)
          @model_type = args[:model_type] if args.key?(:model_type)
          @multi_label = args[:multi_label] if args.key?(:multi_label)
          @tunable_parameter = args[:tunable_parameter] if args.key?(:tunable_parameter)
          @uptrain_base_model_id = args[:uptrain_base_model_id] if args.key?(:uptrain_base_model_id)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationMetadata
        include Google::Apis::Core::Hashable
      
        # The actual training cost of creating this model, expressed in milli node hours,
        # i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed
        # inputs.budgetMilliNodeHours.
        # Corresponds to the JSON property `costMilliNodeHours`
        # @return [Fixnum]
        attr_accessor :cost_milli_node_hours
      
        # For successful job completions, this is the reason why the job has finished.
        # Corresponds to the JSON property `successfulStopReason`
        # @return [String]
        attr_accessor :successful_stop_reason
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @cost_milli_node_hours = args[:cost_milli_node_hours] if args.key?(:cost_milli_node_hours)
          @successful_stop_reason = args[:successful_stop_reason] if args.key?(:successful_stop_reason)
        end
      end
      
      # A TrainingJob that trains and uploads an AutoML Image Object Detection Model.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetection
        include Google::Apis::Core::Hashable
      
        # The input parameters of this TrainingJob.
        # Corresponds to the JSON property `inputs`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs]
        attr_accessor :inputs
      
        # The metadata information
        # Corresponds to the JSON property `metadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata]
        attr_accessor :metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @inputs = args[:inputs] if args.key?(:inputs)
          @metadata = args[:metadata] if args.key?(:metadata)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs
        include Google::Apis::Core::Hashable
      
        # The training budget of creating this model, expressed in milli node hours i.e.
        # 1,000 value in this field means 1 node hour. The actual metadata.
        # costMilliNodeHours will be equal or less than this value. If further model
        # training ceases to provide any improvements, it will stop without using the
        # full budget and the metadata.successfulStopReason will be `model-converged`.
        # Note, node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`
        # (default), the budget must be between 20,000 and 900,000 milli node hours,
        # inclusive. The default value is 216,000 which represents one day in wall time,
        # considering 9 nodes are used. For model types `mobile-tf-low-latency-1`, `
        # mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1` the training budget must
        # be between 1,000 and 100,000 milli node hours, inclusive. The default value is
        # 24,000 which represents one day in wall time on a single node that is used.
        # Corresponds to the JSON property `budgetMilliNodeHours`
        # @return [Fixnum]
        attr_accessor :budget_milli_node_hours
      
        # Use the entire training budget. This disables the early stopping feature. When
        # false the early stopping feature is enabled, which means that AutoML Image
        # Object Detection might stop training before the entire training budget has
        # been used.
        # Corresponds to the JSON property `disableEarlyStopping`
        # @return [Boolean]
        attr_accessor :disable_early_stopping
        alias_method :disable_early_stopping?, :disable_early_stopping
      
        # 
        # Corresponds to the JSON property `modelType`
        # @return [String]
        attr_accessor :model_type
      
        # A wrapper class which contains the tunable parameters in an AutoML Image
        # training job.
        # Corresponds to the JSON property `tunableParameter`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter]
        attr_accessor :tunable_parameter
      
        # The ID of `base` model for upTraining. If it is specified, the new model will
        # be upTrained based on the `base` model for upTraining. Otherwise, the new
        # model will be trained from scratch. The `base` model for upTraining must be in
        # the same Project and Location as the new Model to train, and have the same
        # modelType.
        # Corresponds to the JSON property `uptrainBaseModelId`
        # @return [String]
        attr_accessor :uptrain_base_model_id
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @budget_milli_node_hours = args[:budget_milli_node_hours] if args.key?(:budget_milli_node_hours)
          @disable_early_stopping = args[:disable_early_stopping] if args.key?(:disable_early_stopping)
          @model_type = args[:model_type] if args.key?(:model_type)
          @tunable_parameter = args[:tunable_parameter] if args.key?(:tunable_parameter)
          @uptrain_base_model_id = args[:uptrain_base_model_id] if args.key?(:uptrain_base_model_id)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata
        include Google::Apis::Core::Hashable
      
        # The actual training cost of creating this model, expressed in milli node hours,
        # i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed
        # inputs.budgetMilliNodeHours.
        # Corresponds to the JSON property `costMilliNodeHours`
        # @return [Fixnum]
        attr_accessor :cost_milli_node_hours
      
        # For successful job completions, this is the reason why the job has finished.
        # Corresponds to the JSON property `successfulStopReason`
        # @return [String]
        attr_accessor :successful_stop_reason
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @cost_milli_node_hours = args[:cost_milli_node_hours] if args.key?(:cost_milli_node_hours)
          @successful_stop_reason = args[:successful_stop_reason] if args.key?(:successful_stop_reason)
        end
      end
      
      # A TrainingJob that trains and uploads an AutoML Image Segmentation Model.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentation
        include Google::Apis::Core::Hashable
      
        # The input parameters of this TrainingJob.
        # Corresponds to the JSON property `inputs`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs]
        attr_accessor :inputs
      
        # The metadata information.
        # Corresponds to the JSON property `metadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata]
        attr_accessor :metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @inputs = args[:inputs] if args.key?(:inputs)
          @metadata = args[:metadata] if args.key?(:metadata)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs
        include Google::Apis::Core::Hashable
      
        # The ID of the `base` model. If it is specified, the new model will be trained
        # based on the `base` model. Otherwise, the new model will be trained from
        # scratch. The `base` model must be in the same Project and Location as the new
        # Model to train, and have the same modelType.
        # Corresponds to the JSON property `baseModelId`
        # @return [String]
        attr_accessor :base_model_id
      
        # The training budget of creating this model, expressed in milli node hours i.e.
        # 1,000 value in this field means 1 node hour. The actual metadata.
        # costMilliNodeHours will be equal or less than this value. If further model
        # training ceases to provide any improvements, it will stop without using the
        # full budget and the metadata.successfulStopReason will be `model-converged`.
        # Note, node_hour = actual_hour * number_of_nodes_involved. Or
        # actual_wall_clock_hours = train_budget_milli_node_hours / (
        # number_of_nodes_involved * 1000) For modelType `cloud-high-accuracy-1`(default)
        # , the budget must be between 20,000 and 2,000,000 milli node hours, inclusive.
        # The default value is 192,000 which represents one day in wall time (1000 milli
        # * 24 hours * 8 nodes).
        # Corresponds to the JSON property `budgetMilliNodeHours`
        # @return [Fixnum]
        attr_accessor :budget_milli_node_hours
      
        # 
        # Corresponds to the JSON property `modelType`
        # @return [String]
        attr_accessor :model_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @base_model_id = args[:base_model_id] if args.key?(:base_model_id)
          @budget_milli_node_hours = args[:budget_milli_node_hours] if args.key?(:budget_milli_node_hours)
          @model_type = args[:model_type] if args.key?(:model_type)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageSegmentationMetadata
        include Google::Apis::Core::Hashable
      
        # The actual training cost of creating this model, expressed in milli node hours,
        # i.e. 1,000 value in this field means 1 node hour. Guaranteed to not exceed
        # inputs.budgetMilliNodeHours.
        # Corresponds to the JSON property `costMilliNodeHours`
        # @return [Fixnum]
        attr_accessor :cost_milli_node_hours
      
        # For successful job completions, this is the reason why the job has finished.
        # Corresponds to the JSON property `successfulStopReason`
        # @return [String]
        attr_accessor :successful_stop_reason
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @cost_milli_node_hours = args[:cost_milli_node_hours] if args.key?(:cost_milli_node_hours)
          @successful_stop_reason = args[:successful_stop_reason] if args.key?(:successful_stop_reason)
        end
      end
      
      # A TrainingJob that trains and uploads an AutoML Tables Model.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTables
        include Google::Apis::Core::Hashable
      
        # The input parameters of this TrainingJob.
        # Corresponds to the JSON property `inputs`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs]
        attr_accessor :inputs
      
        # Model metadata specific to AutoML Tables.
        # Corresponds to the JSON property `metadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesMetadata]
        attr_accessor :metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @inputs = args[:inputs] if args.key?(:inputs)
          @metadata = args[:metadata] if args.key?(:metadata)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs
        include Google::Apis::Core::Hashable
      
        # Additional experiment flags for the Tables training pipeline.
        # Corresponds to the JSON property `additionalExperiments`
        # @return [Array<String>]
        attr_accessor :additional_experiments
      
        # Use the entire training budget. This disables the early stopping feature. By
        # default, the early stopping feature is enabled, which means that AutoML Tables
        # might stop training before the entire training budget has been used.
        # Corresponds to the JSON property `disableEarlyStopping`
        # @return [Boolean]
        attr_accessor :disable_early_stopping
        alias_method :disable_early_stopping?, :disable_early_stopping
      
        # Configuration for exporting test set predictions to a BigQuery table.
        # Corresponds to the JSON property `exportEvaluatedDataItemsConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig]
        attr_accessor :export_evaluated_data_items_config
      
        # Objective function the model is optimizing towards. The training process
        # creates a model that maximizes/minimizes the value of the objective function
        # over the validation set. The supported optimization objectives depend on the
        # prediction type. If the field is not set, a default objective function is used.
        # classification (binary): "maximize-au-roc" (default) - Maximize the area
        # under the receiver operating characteristic (ROC) curve. "minimize-log-loss" -
        # Minimize log loss. "maximize-au-prc" - Maximize the area under the precision-
        # recall curve. "maximize-precision-at-recall" - Maximize precision for a
        # specified recall value. "maximize-recall-at-precision" - Maximize recall for a
        # specified precision value. classification (multi-class): "minimize-log-loss" (
        # default) - Minimize log loss. regression: "minimize-rmse" (default) - Minimize
        # root-mean-squared error (RMSE). "minimize-mae" - Minimize mean-absolute error (
        # MAE). "minimize-rmsle" - Minimize root-mean-squared log error (RMSLE).
        # Corresponds to the JSON property `optimizationObjective`
        # @return [String]
        attr_accessor :optimization_objective
      
        # Required when optimization_objective is "maximize-recall-at-precision". Must
        # be between 0 and 1, inclusive.
        # Corresponds to the JSON property `optimizationObjectivePrecisionValue`
        # @return [Float]
        attr_accessor :optimization_objective_precision_value
      
        # Required when optimization_objective is "maximize-precision-at-recall". Must
        # be between 0 and 1, inclusive.
        # Corresponds to the JSON property `optimizationObjectiveRecallValue`
        # @return [Float]
        attr_accessor :optimization_objective_recall_value
      
        # The type of prediction the Model is to produce. "classification" - Predict one
        # out of multiple target values is picked for each row. "regression" - Predict a
        # value based on its relation to other values. This type is available only to
        # columns that contain semantically numeric values, i.e. integers or floating
        # point number, even if stored as e.g. strings.
        # Corresponds to the JSON property `predictionType`
        # @return [String]
        attr_accessor :prediction_type
      
        # The column name of the target column that the model is to predict.
        # Corresponds to the JSON property `targetColumn`
        # @return [String]
        attr_accessor :target_column
      
        # Required. The train budget of creating this model, expressed in milli node
        # hours i.e. 1,000 value in this field means 1 node hour. The training cost of
        # the model will not exceed this budget. The final cost will be attempted to be
        # close to the budget, though may end up being (even) noticeably smaller - at
        # the backend's discretion. This especially may happen when further model
        # training ceases to provide any improvements. If the budget is set to a value
        # known to be insufficient to train a model for the given dataset, the training
        # won't be attempted and will error. The train budget must be between 1,000 and
        # 72,000 milli node hours, inclusive.
        # Corresponds to the JSON property `trainBudgetMilliNodeHours`
        # @return [Fixnum]
        attr_accessor :train_budget_milli_node_hours
      
        # Each transformation will apply transform function to given input column. And
        # the result will be used for training. When creating transformation for
        # BigQuery Struct column, the column should be flattened using "." as the
        # delimiter.
        # Corresponds to the JSON property `transformations`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation>]
        attr_accessor :transformations
      
        # Column name that should be used as the weight column. Higher values in this
        # column give more importance to the row during model training. The column must
        # have numeric values between 0 and 10000 inclusively; 0 means the row is
        # ignored for training. If weight column field is not set, then all rows are
        # assumed to have equal weight of 1.
        # Corresponds to the JSON property `weightColumnName`
        # @return [String]
        attr_accessor :weight_column_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @additional_experiments = args[:additional_experiments] if args.key?(:additional_experiments)
          @disable_early_stopping = args[:disable_early_stopping] if args.key?(:disable_early_stopping)
          @export_evaluated_data_items_config = args[:export_evaluated_data_items_config] if args.key?(:export_evaluated_data_items_config)
          @optimization_objective = args[:optimization_objective] if args.key?(:optimization_objective)
          @optimization_objective_precision_value = args[:optimization_objective_precision_value] if args.key?(:optimization_objective_precision_value)
          @optimization_objective_recall_value = args[:optimization_objective_recall_value] if args.key?(:optimization_objective_recall_value)
          @prediction_type = args[:prediction_type] if args.key?(:prediction_type)
          @target_column = args[:target_column] if args.key?(:target_column)
          @train_budget_milli_node_hours = args[:train_budget_milli_node_hours] if args.key?(:train_budget_milli_node_hours)
          @transformations = args[:transformations] if args.key?(:transformations)
          @weight_column_name = args[:weight_column_name] if args.key?(:weight_column_name)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation
        include Google::Apis::Core::Hashable
      
        # Training pipeline will infer the proper transformation based on the statistic
        # of dataset.
        # Corresponds to the JSON property `auto`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation]
        attr_accessor :auto
      
        # Training pipeline will perform following transformation functions. * The
        # categorical string as is--no change to case, punctuation, spelling, tense, and
        # so on. * Convert the category name to a dictionary lookup index and generate
        # an embedding for each index. * Categories that appear less than 5 times in the
        # training dataset are treated as the "unknown" category. The "unknown" category
        # gets its own special lookup index and resulting embedding.
        # Corresponds to the JSON property `categorical`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation]
        attr_accessor :categorical
      
        # Training pipeline will perform following transformation functions. * The value
        # converted to float32. * The z_score of the value. * log(value+1) when the
        # value is greater than or equal to 0. Otherwise, this transformation is not
        # applied and the value is considered a missing value. * z_score of log(value+1)
        # when the value is greater than or equal to 0. Otherwise, this transformation
        # is not applied and the value is considered a missing value. * A boolean value
        # that indicates whether the value is valid.
        # Corresponds to the JSON property `numeric`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation]
        attr_accessor :numeric
      
        # Treats the column as categorical array and performs following transformation
        # functions. * For each element in the array, convert the category name to a
        # dictionary lookup index and generate an embedding for each index. Combine the
        # embedding of all elements into a single embedding using the mean. * Empty
        # arrays treated as an embedding of zeroes.
        # Corresponds to the JSON property `repeatedCategorical`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation]
        attr_accessor :repeated_categorical
      
        # Treats the column as numerical array and performs following transformation
        # functions. * All transformations for Numerical types applied to the average of
        # the all elements. * The average of empty arrays is treated as zero.
        # Corresponds to the JSON property `repeatedNumeric`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation]
        attr_accessor :repeated_numeric
      
        # Treats the column as text array and performs following transformation
        # functions. * Concatenate all text values in the array into a single text value
        # using a space (" ") as a delimiter, and then treat the result as a single text
        # value. Apply the transformations for Text columns. * Empty arrays treated as
        # an empty text.
        # Corresponds to the JSON property `repeatedText`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation]
        attr_accessor :repeated_text
      
        # Training pipeline will perform following transformation functions. * The text
        # as is--no change to case, punctuation, spelling, tense, and so on. * Tokenize
        # text to words. Convert each words to a dictionary lookup index and generate an
        # embedding for each index. Combine the embedding of all elements into a single
        # embedding using the mean. * Tokenization is based on unicode script boundaries.
        # * Missing values get their own lookup index and resulting embedding. * Stop-
        # words receive no special treatment and are not removed.
        # Corresponds to the JSON property `text`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation]
        attr_accessor :text
      
        # Training pipeline will perform following transformation functions. * Apply the
        # transformation functions for Numerical columns. * Determine the year, month,
        # day,and weekday. Treat each value from the * timestamp as a Categorical column.
        # * Invalid numerical values (for example, values that fall outside of a
        # typical timestamp range, or are extreme values) receive no special treatment
        # and are not removed.
        # Corresponds to the JSON property `timestamp`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation]
        attr_accessor :timestamp
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @auto = args[:auto] if args.key?(:auto)
          @categorical = args[:categorical] if args.key?(:categorical)
          @numeric = args[:numeric] if args.key?(:numeric)
          @repeated_categorical = args[:repeated_categorical] if args.key?(:repeated_categorical)
          @repeated_numeric = args[:repeated_numeric] if args.key?(:repeated_numeric)
          @repeated_text = args[:repeated_text] if args.key?(:repeated_text)
          @text = args[:text] if args.key?(:text)
          @timestamp = args[:timestamp] if args.key?(:timestamp)
        end
      end
      
      # Training pipeline will infer the proper transformation based on the statistic
      # of dataset.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationAutoTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
        end
      end
      
      # Treats the column as categorical array and performs following transformation
      # functions. * For each element in the array, convert the category name to a
      # dictionary lookup index and generate an embedding for each index. Combine the
      # embedding of all elements into a single embedding using the mean. * Empty
      # arrays treated as an embedding of zeroes.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalArrayTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
        end
      end
      
      # Training pipeline will perform following transformation functions. * The
      # categorical string as is--no change to case, punctuation, spelling, tense, and
      # so on. * Convert the category name to a dictionary lookup index and generate
      # an embedding for each index. * Categories that appear less than 5 times in the
      # training dataset are treated as the "unknown" category. The "unknown" category
      # gets its own special lookup index and resulting embedding.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationCategoricalTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
        end
      end
      
      # Treats the column as numerical array and performs following transformation
      # functions. * All transformations for Numerical types applied to the average of
      # the all elements. * The average of empty arrays is treated as zero.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericArrayTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        # If invalid values is allowed, the training pipeline will create a boolean
        # feature that indicated whether the value is valid. Otherwise, the training
        # pipeline will discard the input row from trainining data.
        # Corresponds to the JSON property `invalidValuesAllowed`
        # @return [Boolean]
        attr_accessor :invalid_values_allowed
        alias_method :invalid_values_allowed?, :invalid_values_allowed
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
          @invalid_values_allowed = args[:invalid_values_allowed] if args.key?(:invalid_values_allowed)
        end
      end
      
      # Training pipeline will perform following transformation functions. * The value
      # converted to float32. * The z_score of the value. * log(value+1) when the
      # value is greater than or equal to 0. Otherwise, this transformation is not
      # applied and the value is considered a missing value. * z_score of log(value+1)
      # when the value is greater than or equal to 0. Otherwise, this transformation
      # is not applied and the value is considered a missing value. * A boolean value
      # that indicates whether the value is valid.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationNumericTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        # If invalid values is allowed, the training pipeline will create a boolean
        # feature that indicated whether the value is valid. Otherwise, the training
        # pipeline will discard the input row from trainining data.
        # Corresponds to the JSON property `invalidValuesAllowed`
        # @return [Boolean]
        attr_accessor :invalid_values_allowed
        alias_method :invalid_values_allowed?, :invalid_values_allowed
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
          @invalid_values_allowed = args[:invalid_values_allowed] if args.key?(:invalid_values_allowed)
        end
      end
      
      # Treats the column as text array and performs following transformation
      # functions. * Concatenate all text values in the array into a single text value
      # using a space (" ") as a delimiter, and then treat the result as a single text
      # value. Apply the transformations for Text columns. * Empty arrays treated as
      # an empty text.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextArrayTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
        end
      end
      
      # Training pipeline will perform following transformation functions. * The text
      # as is--no change to case, punctuation, spelling, tense, and so on. * Tokenize
      # text to words. Convert each words to a dictionary lookup index and generate an
      # embedding for each index. Combine the embedding of all elements into a single
      # embedding using the mean. * Tokenization is based on unicode script boundaries.
      # * Missing values get their own lookup index and resulting embedding. * Stop-
      # words receive no special treatment and are not removed.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTextTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
        end
      end
      
      # Training pipeline will perform following transformation functions. * Apply the
      # transformation functions for Numerical columns. * Determine the year, month,
      # day,and weekday. Treat each value from the * timestamp as a Categorical column.
      # * Invalid numerical values (for example, values that fall outside of a
      # typical timestamp range, or are extreme values) receive no special treatment
      # and are not removed.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformationTimestampTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        # If invalid values is allowed, the training pipeline will create a boolean
        # feature that indicated whether the value is valid. Otherwise, the training
        # pipeline will discard the input row from trainining data.
        # Corresponds to the JSON property `invalidValuesAllowed`
        # @return [Boolean]
        attr_accessor :invalid_values_allowed
        alias_method :invalid_values_allowed?, :invalid_values_allowed
      
        # The format in which that time field is expressed. The time_format must either
        # be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `
        # unix-nanoseconds` (for respectively number of seconds, milliseconds,
        # microseconds and nanoseconds since start of the Unix epoch); or be written in `
        # strftime` syntax. If time_format is not set, then the default format is RFC
        # 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.
        # 52Z)
        # Corresponds to the JSON property `timeFormat`
        # @return [String]
        attr_accessor :time_format
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
          @invalid_values_allowed = args[:invalid_values_allowed] if args.key?(:invalid_values_allowed)
          @time_format = args[:time_format] if args.key?(:time_format)
        end
      end
      
      # Model metadata specific to AutoML Tables.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesMetadata
        include Google::Apis::Core::Hashable
      
        # BigQuery destination uri for exported evaluated examples.
        # Corresponds to the JSON property `evaluatedDataItemsBigqueryUri`
        # @return [String]
        attr_accessor :evaluated_data_items_bigquery_uri
      
        # Output only. The actual training cost of the model, expressed in milli node
        # hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not
        # exceed the train budget.
        # Corresponds to the JSON property `trainCostMilliNodeHours`
        # @return [Fixnum]
        attr_accessor :train_cost_milli_node_hours
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @evaluated_data_items_bigquery_uri = args[:evaluated_data_items_bigquery_uri] if args.key?(:evaluated_data_items_bigquery_uri)
          @train_cost_milli_node_hours = args[:train_cost_milli_node_hours] if args.key?(:train_cost_milli_node_hours)
        end
      end
      
      # A TrainingJob that trains and uploads an AutoML Text Classification Model.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextClassification
        include Google::Apis::Core::Hashable
      
        # The input parameters of this TrainingJob.
        # Corresponds to the JSON property `inputs`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs]
        attr_accessor :inputs
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @inputs = args[:inputs] if args.key?(:inputs)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextClassificationInputs
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `multiLabel`
        # @return [Boolean]
        attr_accessor :multi_label
        alias_method :multi_label?, :multi_label
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @multi_label = args[:multi_label] if args.key?(:multi_label)
        end
      end
      
      # A TrainingJob that trains and uploads an AutoML Text Extraction Model.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextExtraction
        include Google::Apis::Core::Hashable
      
        # The input parameters of this TrainingJob.
        # Corresponds to the JSON property `inputs`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs]
        attr_accessor :inputs
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @inputs = args[:inputs] if args.key?(:inputs)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextExtractionInputs
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # A TrainingJob that trains and uploads an AutoML Text Sentiment Model.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextSentiment
        include Google::Apis::Core::Hashable
      
        # The input parameters of this TrainingJob.
        # Corresponds to the JSON property `inputs`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs]
        attr_accessor :inputs
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @inputs = args[:inputs] if args.key?(:inputs)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTextSentimentInputs
        include Google::Apis::Core::Hashable
      
        # A sentiment is expressed as an integer ordinal, where higher value means a
        # more positive sentiment. The range of sentiments that will be used is between
        # 0 and sentimentMax (inclusive on both ends), and all the values in the range
        # must be represented in the dataset before a model can be created. Only the
        # Annotations with this sentimentMax will be used for training. sentimentMax
        # value must be between 1 and 10 (inclusive).
        # Corresponds to the JSON property `sentimentMax`
        # @return [Fixnum]
        attr_accessor :sentiment_max
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @sentiment_max = args[:sentiment_max] if args.key?(:sentiment_max)
        end
      end
      
      # A TrainingJob that trains and uploads an AutoML Video Action Recognition Model.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoActionRecognition
        include Google::Apis::Core::Hashable
      
        # The input parameters of this TrainingJob.
        # Corresponds to the JSON property `inputs`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs]
        attr_accessor :inputs
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @inputs = args[:inputs] if args.key?(:inputs)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoActionRecognitionInputs
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `modelType`
        # @return [String]
        attr_accessor :model_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @model_type = args[:model_type] if args.key?(:model_type)
        end
      end
      
      # A TrainingJob that trains and uploads an AutoML Video Classification Model.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoClassification
        include Google::Apis::Core::Hashable
      
        # The input parameters of this TrainingJob.
        # Corresponds to the JSON property `inputs`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs]
        attr_accessor :inputs
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @inputs = args[:inputs] if args.key?(:inputs)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoClassificationInputs
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `modelType`
        # @return [String]
        attr_accessor :model_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @model_type = args[:model_type] if args.key?(:model_type)
        end
      end
      
      # A TrainingJob that trains and uploads an AutoML Video ObjectTracking Model.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoObjectTracking
        include Google::Apis::Core::Hashable
      
        # The input parameters of this TrainingJob.
        # Corresponds to the JSON property `inputs`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs]
        attr_accessor :inputs
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @inputs = args[:inputs] if args.key?(:inputs)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlVideoObjectTrackingInputs
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `modelType`
        # @return [String]
        attr_accessor :model_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @model_type = args[:model_type] if args.key?(:model_type)
        end
      end
      
      # A wrapper class which contains the tunable parameters in an AutoML Image
      # training job.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter
        include Google::Apis::Core::Hashable
      
        # Optional. An unique name of pretrained model checkpoint provided in model
        # garden, it will be mapped to a GCS location internally.
        # Corresponds to the JSON property `checkpointName`
        # @return [String]
        attr_accessor :checkpoint_name
      
        # Customizable dataset settings, used in the `model_garden_trainer`.
        # Corresponds to the JSON property `datasetConfig`
        # @return [Hash<String,String>]
        attr_accessor :dataset_config
      
        # Represents specification of a Study.
        # Corresponds to the JSON property `studySpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StudySpec]
        attr_accessor :study_spec
      
        # Customizable trainer settings, used in the `model_garden_trainer`.
        # Corresponds to the JSON property `trainerConfig`
        # @return [Hash<String,String>]
        attr_accessor :trainer_config
      
        # 
        # Corresponds to the JSON property `trainerType`
        # @return [String]
        attr_accessor :trainer_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @checkpoint_name = args[:checkpoint_name] if args.key?(:checkpoint_name)
          @dataset_config = args[:dataset_config] if args.key?(:dataset_config)
          @study_spec = args[:study_spec] if args.key?(:study_spec)
          @trainer_config = args[:trainer_config] if args.key?(:trainer_config)
          @trainer_type = args[:trainer_type] if args.key?(:trainer_type)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionCustomJobMetadata
        include Google::Apis::Core::Hashable
      
        # The resource name of the CustomJob that has been created to carry out this
        # custom task.
        # Corresponds to the JSON property `backingCustomJob`
        # @return [String]
        attr_accessor :backing_custom_job
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @backing_custom_job = args[:backing_custom_job] if args.key?(:backing_custom_job)
        end
      end
      
      # A TrainingJob that trains a custom code Model.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionCustomTask
        include Google::Apis::Core::Hashable
      
        # Represents the spec of a CustomJob.
        # Corresponds to the JSON property `inputs`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1CustomJobSpec]
        attr_accessor :inputs
      
        # The metadata information.
        # Corresponds to the JSON property `metadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionCustomJobMetadata]
        attr_accessor :metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @inputs = args[:inputs] if args.key?(:inputs)
          @metadata = args[:metadata] if args.key?(:metadata)
        end
      end
      
      # Configuration for exporting test set predictions to a BigQuery table.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig
        include Google::Apis::Core::Hashable
      
        # URI of desired destination BigQuery table. Expected format: `bq://`project_id`:
        # `dataset_id`:`table`` If not specified, then results are exported to the
        # following auto-created BigQuery table: ``project_id`:
        # export_evaluated_examples_`model_name`_`yyyy_MM_dd'T'HH_mm_ss_SSS'Z'`.
        # evaluated_examples`
        # Corresponds to the JSON property `destinationBigqueryUri`
        # @return [String]
        attr_accessor :destination_bigquery_uri
      
        # If true and an export destination is specified, then the contents of the
        # destination are overwritten. Otherwise, if the export destination already
        # exists, then the export operation fails.
        # Corresponds to the JSON property `overrideExistingTable`
        # @return [Boolean]
        attr_accessor :override_existing_table
        alias_method :override_existing_table?, :override_existing_table
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @destination_bigquery_uri = args[:destination_bigquery_uri] if args.key?(:destination_bigquery_uri)
          @override_existing_table = args[:override_existing_table] if args.key?(:override_existing_table)
        end
      end
      
      # Configuration that defines the hierarchical relationship of time series and
      # parameters for hierarchical forecasting strategies.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig
        include Google::Apis::Core::Hashable
      
        # A list of time series attribute column names that define the time series
        # hierarchy. Only one level of hierarchy is supported, ex. 'region' for a
        # hierarchy of stores or 'department' for a hierarchy of products. If multiple
        # columns are specified, time series will be grouped by their combined values,
        # ex. ('blue', 'large') for 'color' and 'size', up to 5 columns are accepted. If
        # no group columns are specified, all time series are considered to be part of
        # the same group.
        # Corresponds to the JSON property `groupColumns`
        # @return [Array<String>]
        attr_accessor :group_columns
      
        # The weight of the loss for predictions aggregated over both the horizon and
        # time series in the same hierarchy group.
        # Corresponds to the JSON property `groupTemporalTotalWeight`
        # @return [Float]
        attr_accessor :group_temporal_total_weight
      
        # The weight of the loss for predictions aggregated over time series in the same
        # group.
        # Corresponds to the JSON property `groupTotalWeight`
        # @return [Float]
        attr_accessor :group_total_weight
      
        # The weight of the loss for predictions aggregated over the horizon for a
        # single time series.
        # Corresponds to the JSON property `temporalTotalWeight`
        # @return [Float]
        attr_accessor :temporal_total_weight
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @group_columns = args[:group_columns] if args.key?(:group_columns)
          @group_temporal_total_weight = args[:group_temporal_total_weight] if args.key?(:group_temporal_total_weight)
          @group_total_weight = args[:group_total_weight] if args.key?(:group_total_weight)
          @temporal_total_weight = args[:temporal_total_weight] if args.key?(:temporal_total_weight)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata
        include Google::Apis::Core::Hashable
      
        # The resource name of the HyperparameterTuningJob that has been created to
        # carry out this HyperparameterTuning task.
        # Corresponds to the JSON property `backingHyperparameterTuningJob`
        # @return [String]
        attr_accessor :backing_hyperparameter_tuning_job
      
        # The resource name of the CustomJob that has been created to run the best Trial
        # of this HyperparameterTuning task.
        # Corresponds to the JSON property `bestTrialBackingCustomJob`
        # @return [String]
        attr_accessor :best_trial_backing_custom_job
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @backing_hyperparameter_tuning_job = args[:backing_hyperparameter_tuning_job] if args.key?(:backing_hyperparameter_tuning_job)
          @best_trial_backing_custom_job = args[:best_trial_backing_custom_job] if args.key?(:best_trial_backing_custom_job)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec
        include Google::Apis::Core::Hashable
      
        # The number of failed Trials that need to be seen before failing the
        # HyperparameterTuningJob. If set to 0, Vertex AI decides how many Trials must
        # fail before the whole job fails.
        # Corresponds to the JSON property `maxFailedTrialCount`
        # @return [Fixnum]
        attr_accessor :max_failed_trial_count
      
        # The desired total number of Trials.
        # Corresponds to the JSON property `maxTrialCount`
        # @return [Fixnum]
        attr_accessor :max_trial_count
      
        # The desired number of Trials to run in parallel.
        # Corresponds to the JSON property `parallelTrialCount`
        # @return [Fixnum]
        attr_accessor :parallel_trial_count
      
        # Represents specification of a Study.
        # Corresponds to the JSON property `studySpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StudySpec]
        attr_accessor :study_spec
      
        # Represents the spec of a CustomJob.
        # Corresponds to the JSON property `trialJobSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1CustomJobSpec]
        attr_accessor :trial_job_spec
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @max_failed_trial_count = args[:max_failed_trial_count] if args.key?(:max_failed_trial_count)
          @max_trial_count = args[:max_trial_count] if args.key?(:max_trial_count)
          @parallel_trial_count = args[:parallel_trial_count] if args.key?(:parallel_trial_count)
          @study_spec = args[:study_spec] if args.key?(:study_spec)
          @trial_job_spec = args[:trial_job_spec] if args.key?(:trial_job_spec)
        end
      end
      
      # A TrainingJob that tunes Hypererparameters of a custom code Model.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningTask
        include Google::Apis::Core::Hashable
      
        # The input parameters of this HyperparameterTuningTask.
        # Corresponds to the JSON property `inputs`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec]
        attr_accessor :inputs
      
        # The metadata information.
        # Corresponds to the JSON property `metadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobMetadata]
        attr_accessor :metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @inputs = args[:inputs] if args.key?(:inputs)
          @metadata = args[:metadata] if args.key?(:metadata)
        end
      end
      
      # A TrainingJob that trains and uploads an AutoML Forecasting Model.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecasting
        include Google::Apis::Core::Hashable
      
        # The input parameters of this TrainingJob.
        # Corresponds to the JSON property `inputs`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs]
        attr_accessor :inputs
      
        # Model metadata specific to Seq2Seq Plus Forecasting.
        # Corresponds to the JSON property `metadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingMetadata]
        attr_accessor :metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @inputs = args[:inputs] if args.key?(:inputs)
          @metadata = args[:metadata] if args.key?(:metadata)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputs
        include Google::Apis::Core::Hashable
      
        # Additional experiment flags for the time series forcasting training.
        # Corresponds to the JSON property `additionalExperiments`
        # @return [Array<String>]
        attr_accessor :additional_experiments
      
        # Names of columns that are available and provided when a forecast is requested.
        # These columns contain information for the given entity (identified by the
        # time_series_identifier_column column) that is known at forecast. For example,
        # predicted weather for a specific day.
        # Corresponds to the JSON property `availableAtForecastColumns`
        # @return [Array<String>]
        attr_accessor :available_at_forecast_columns
      
        # The amount of time into the past training and prediction data is used for
        # model training and prediction respectively. Expressed in number of units
        # defined by the `data_granularity` field.
        # Corresponds to the JSON property `contextWindow`
        # @return [Fixnum]
        attr_accessor :context_window
      
        # A duration of time expressed in time granularity units.
        # Corresponds to the JSON property `dataGranularity`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularity]
        attr_accessor :data_granularity
      
        # Configuration for exporting test set predictions to a BigQuery table.
        # Corresponds to the JSON property `exportEvaluatedDataItemsConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig]
        attr_accessor :export_evaluated_data_items_config
      
        # The amount of time into the future for which forecasted values for the target
        # are returned. Expressed in number of units defined by the `data_granularity`
        # field.
        # Corresponds to the JSON property `forecastHorizon`
        # @return [Fixnum]
        attr_accessor :forecast_horizon
      
        # Configuration that defines the hierarchical relationship of time series and
        # parameters for hierarchical forecasting strategies.
        # Corresponds to the JSON property `hierarchyConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig]
        attr_accessor :hierarchy_config
      
        # The geographical region based on which the holiday effect is applied in
        # modeling by adding holiday categorical array feature that include all holidays
        # matching the date. This option only allowed when data_granularity is day. By
        # default, holiday effect modeling is disabled. To turn it on, specify the
        # holiday region using this option.
        # Corresponds to the JSON property `holidayRegions`
        # @return [Array<String>]
        attr_accessor :holiday_regions
      
        # Objective function the model is optimizing towards. The training process
        # creates a model that optimizes the value of the objective function over the
        # validation set. The supported optimization objectives: * "minimize-rmse" (
        # default) - Minimize root-mean-squared error (RMSE). * "minimize-mae" -
        # Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize root-mean-
        # squared log error (RMSLE). * "minimize-rmspe" - Minimize root-mean-squared
        # percentage error (RMSPE). * "minimize-wape-mae" - Minimize the combination of
        # weighted absolute percentage error (WAPE) and mean-absolute-error (MAE). * "
        # minimize-quantile-loss" - Minimize the quantile loss at the quantiles defined
        # in `quantiles`. * "minimize-mape" - Minimize the mean absolute percentage
        # error.
        # Corresponds to the JSON property `optimizationObjective`
        # @return [String]
        attr_accessor :optimization_objective
      
        # Quantiles to use for minimize-quantile-loss `optimization_objective`. Up to 5
        # quantiles are allowed of values between 0 and 1, exclusive. Required if the
        # value of optimization_objective is minimize-quantile-loss. Represents the
        # percent quantiles to use for that objective. Quantiles must be unique.
        # Corresponds to the JSON property `quantiles`
        # @return [Array<Float>]
        attr_accessor :quantiles
      
        # The name of the column that the Model is to predict values for. This column
        # must be unavailable at forecast.
        # Corresponds to the JSON property `targetColumn`
        # @return [String]
        attr_accessor :target_column
      
        # The name of the column that identifies time order in the time series. This
        # column must be available at forecast.
        # Corresponds to the JSON property `timeColumn`
        # @return [String]
        attr_accessor :time_column
      
        # Column names that should be used as attribute columns. The value of these
        # columns does not vary as a function of time. For example, store ID or item
        # color.
        # Corresponds to the JSON property `timeSeriesAttributeColumns`
        # @return [Array<String>]
        attr_accessor :time_series_attribute_columns
      
        # The name of the column that identifies the time series.
        # Corresponds to the JSON property `timeSeriesIdentifierColumn`
        # @return [String]
        attr_accessor :time_series_identifier_column
      
        # Required. The train budget of creating this model, expressed in milli node
        # hours i.e. 1,000 value in this field means 1 node hour. The training cost of
        # the model will not exceed this budget. The final cost will be attempted to be
        # close to the budget, though may end up being (even) noticeably smaller - at
        # the backend's discretion. This especially may happen when further model
        # training ceases to provide any improvements. If the budget is set to a value
        # known to be insufficient to train a model for the given dataset, the training
        # won't be attempted and will error. The train budget must be between 1,000 and
        # 72,000 milli node hours, inclusive.
        # Corresponds to the JSON property `trainBudgetMilliNodeHours`
        # @return [Fixnum]
        attr_accessor :train_budget_milli_node_hours
      
        # Each transformation will apply transform function to given input column. And
        # the result will be used for training. When creating transformation for
        # BigQuery Struct column, the column should be flattened using "." as the
        # delimiter.
        # Corresponds to the JSON property `transformations`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformation>]
        attr_accessor :transformations
      
        # Names of columns that are unavailable when a forecast is requested. This
        # column contains information for the given entity (identified by the
        # time_series_identifier_column) that is unknown before the forecast For example,
        # actual weather on a given day.
        # Corresponds to the JSON property `unavailableAtForecastColumns`
        # @return [Array<String>]
        attr_accessor :unavailable_at_forecast_columns
      
        # Validation options for the data validation component. The available options
        # are: * "fail-pipeline" - default, will validate against the validation and
        # fail the pipeline if it fails. * "ignore-validation" - ignore the results of
        # the validation and continue
        # Corresponds to the JSON property `validationOptions`
        # @return [String]
        attr_accessor :validation_options
      
        # Column name that should be used as the weight column. Higher values in this
        # column give more importance to the row during model training. The column must
        # have numeric values between 0 and 10000 inclusively; 0 means the row is
        # ignored for training. If weight column field is not set, then all rows are
        # assumed to have equal weight of 1. This column must be available at forecast.
        # Corresponds to the JSON property `weightColumn`
        # @return [String]
        attr_accessor :weight_column
      
        # Config that contains the strategy used to generate sliding windows in time
        # series training. A window is a series of rows that comprise the context up to
        # the time of prediction, and the horizon following. The corresponding row for
        # each window marks the start of the forecast horizon. Each window is used as an
        # input example for training/evaluation.
        # Corresponds to the JSON property `windowConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionWindowConfig]
        attr_accessor :window_config
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @additional_experiments = args[:additional_experiments] if args.key?(:additional_experiments)
          @available_at_forecast_columns = args[:available_at_forecast_columns] if args.key?(:available_at_forecast_columns)
          @context_window = args[:context_window] if args.key?(:context_window)
          @data_granularity = args[:data_granularity] if args.key?(:data_granularity)
          @export_evaluated_data_items_config = args[:export_evaluated_data_items_config] if args.key?(:export_evaluated_data_items_config)
          @forecast_horizon = args[:forecast_horizon] if args.key?(:forecast_horizon)
          @hierarchy_config = args[:hierarchy_config] if args.key?(:hierarchy_config)
          @holiday_regions = args[:holiday_regions] if args.key?(:holiday_regions)
          @optimization_objective = args[:optimization_objective] if args.key?(:optimization_objective)
          @quantiles = args[:quantiles] if args.key?(:quantiles)
          @target_column = args[:target_column] if args.key?(:target_column)
          @time_column = args[:time_column] if args.key?(:time_column)
          @time_series_attribute_columns = args[:time_series_attribute_columns] if args.key?(:time_series_attribute_columns)
          @time_series_identifier_column = args[:time_series_identifier_column] if args.key?(:time_series_identifier_column)
          @train_budget_milli_node_hours = args[:train_budget_milli_node_hours] if args.key?(:train_budget_milli_node_hours)
          @transformations = args[:transformations] if args.key?(:transformations)
          @unavailable_at_forecast_columns = args[:unavailable_at_forecast_columns] if args.key?(:unavailable_at_forecast_columns)
          @validation_options = args[:validation_options] if args.key?(:validation_options)
          @weight_column = args[:weight_column] if args.key?(:weight_column)
          @window_config = args[:window_config] if args.key?(:window_config)
        end
      end
      
      # A duration of time expressed in time granularity units.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsGranularity
        include Google::Apis::Core::Hashable
      
        # The number of granularity_units between data points in the training data. If `
        # granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30. For all other
        # values of `granularity_unit`, must be 1.
        # Corresponds to the JSON property `quantity`
        # @return [Fixnum]
        attr_accessor :quantity
      
        # The time granularity unit of this time period. The supported units are: * "
        # minute" * "hour" * "day" * "week" * "month" * "year"
        # Corresponds to the JSON property `unit`
        # @return [String]
        attr_accessor :unit
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @quantity = args[:quantity] if args.key?(:quantity)
          @unit = args[:unit] if args.key?(:unit)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformation
        include Google::Apis::Core::Hashable
      
        # Training pipeline will infer the proper transformation based on the statistic
        # of dataset.
        # Corresponds to the JSON property `auto`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationAutoTransformation]
        attr_accessor :auto
      
        # Training pipeline will perform following transformation functions. * The
        # categorical string as is--no change to case, punctuation, spelling, tense, and
        # so on. * Convert the category name to a dictionary lookup index and generate
        # an embedding for each index. * Categories that appear less than 5 times in the
        # training dataset are treated as the "unknown" category. The "unknown" category
        # gets its own special lookup index and resulting embedding.
        # Corresponds to the JSON property `categorical`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationCategoricalTransformation]
        attr_accessor :categorical
      
        # Training pipeline will perform following transformation functions. * The value
        # converted to float32. * The z_score of the value. * log(value+1) when the
        # value is greater than or equal to 0. Otherwise, this transformation is not
        # applied and the value is considered a missing value. * z_score of log(value+1)
        # when the value is greater than or equal to 0. Otherwise, this transformation
        # is not applied and the value is considered a missing value.
        # Corresponds to the JSON property `numeric`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationNumericTransformation]
        attr_accessor :numeric
      
        # Training pipeline will perform following transformation functions. * The text
        # as is--no change to case, punctuation, spelling, tense, and so on. * Convert
        # the category name to a dictionary lookup index and generate an embedding for
        # each index.
        # Corresponds to the JSON property `text`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTextTransformation]
        attr_accessor :text
      
        # Training pipeline will perform following transformation functions. * Apply the
        # transformation functions for Numerical columns. * Determine the year, month,
        # day,and weekday. Treat each value from the timestamp as a Categorical column. *
        # Invalid numerical values (for example, values that fall outside of a typical
        # timestamp range, or are extreme values) receive no special treatment and are
        # not removed.
        # Corresponds to the JSON property `timestamp`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTimestampTransformation]
        attr_accessor :timestamp
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @auto = args[:auto] if args.key?(:auto)
          @categorical = args[:categorical] if args.key?(:categorical)
          @numeric = args[:numeric] if args.key?(:numeric)
          @text = args[:text] if args.key?(:text)
          @timestamp = args[:timestamp] if args.key?(:timestamp)
        end
      end
      
      # Training pipeline will infer the proper transformation based on the statistic
      # of dataset.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationAutoTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
        end
      end
      
      # Training pipeline will perform following transformation functions. * The
      # categorical string as is--no change to case, punctuation, spelling, tense, and
      # so on. * Convert the category name to a dictionary lookup index and generate
      # an embedding for each index. * Categories that appear less than 5 times in the
      # training dataset are treated as the "unknown" category. The "unknown" category
      # gets its own special lookup index and resulting embedding.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationCategoricalTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
        end
      end
      
      # Training pipeline will perform following transformation functions. * The value
      # converted to float32. * The z_score of the value. * log(value+1) when the
      # value is greater than or equal to 0. Otherwise, this transformation is not
      # applied and the value is considered a missing value. * z_score of log(value+1)
      # when the value is greater than or equal to 0. Otherwise, this transformation
      # is not applied and the value is considered a missing value.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationNumericTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
        end
      end
      
      # Training pipeline will perform following transformation functions. * The text
      # as is--no change to case, punctuation, spelling, tense, and so on. * Convert
      # the category name to a dictionary lookup index and generate an embedding for
      # each index.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTextTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
        end
      end
      
      # Training pipeline will perform following transformation functions. * Apply the
      # transformation functions for Numerical columns. * Determine the year, month,
      # day,and weekday. Treat each value from the timestamp as a Categorical column. *
      # Invalid numerical values (for example, values that fall outside of a typical
      # timestamp range, or are extreme values) receive no special treatment and are
      # not removed.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingInputsTransformationTimestampTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        # The format in which that time field is expressed. The time_format must either
        # be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `
        # unix-nanoseconds` (for respectively number of seconds, milliseconds,
        # microseconds and nanoseconds since start of the Unix epoch); or be written in `
        # strftime` syntax. If time_format is not set, then the default format is RFC
        # 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.
        # 52Z)
        # Corresponds to the JSON property `timeFormat`
        # @return [String]
        attr_accessor :time_format
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
          @time_format = args[:time_format] if args.key?(:time_format)
        end
      end
      
      # Model metadata specific to Seq2Seq Plus Forecasting.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionSeq2SeqPlusForecastingMetadata
        include Google::Apis::Core::Hashable
      
        # BigQuery destination uri for exported evaluated examples.
        # Corresponds to the JSON property `evaluatedDataItemsBigqueryUri`
        # @return [String]
        attr_accessor :evaluated_data_items_bigquery_uri
      
        # Output only. The actual training cost of the model, expressed in milli node
        # hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not
        # exceed the train budget.
        # Corresponds to the JSON property `trainCostMilliNodeHours`
        # @return [Fixnum]
        attr_accessor :train_cost_milli_node_hours
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @evaluated_data_items_bigquery_uri = args[:evaluated_data_items_bigquery_uri] if args.key?(:evaluated_data_items_bigquery_uri)
          @train_cost_milli_node_hours = args[:train_cost_milli_node_hours] if args.key?(:train_cost_milli_node_hours)
        end
      end
      
      # A TrainingJob that trains and uploads an AutoML Forecasting Model.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecasting
        include Google::Apis::Core::Hashable
      
        # The input parameters of this TrainingJob.
        # Corresponds to the JSON property `inputs`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs]
        attr_accessor :inputs
      
        # Model metadata specific to TFT Forecasting.
        # Corresponds to the JSON property `metadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingMetadata]
        attr_accessor :metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @inputs = args[:inputs] if args.key?(:inputs)
          @metadata = args[:metadata] if args.key?(:metadata)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs
        include Google::Apis::Core::Hashable
      
        # Additional experiment flags for the time series forcasting training.
        # Corresponds to the JSON property `additionalExperiments`
        # @return [Array<String>]
        attr_accessor :additional_experiments
      
        # Names of columns that are available and provided when a forecast is requested.
        # These columns contain information for the given entity (identified by the
        # time_series_identifier_column column) that is known at forecast. For example,
        # predicted weather for a specific day.
        # Corresponds to the JSON property `availableAtForecastColumns`
        # @return [Array<String>]
        attr_accessor :available_at_forecast_columns
      
        # The amount of time into the past training and prediction data is used for
        # model training and prediction respectively. Expressed in number of units
        # defined by the `data_granularity` field.
        # Corresponds to the JSON property `contextWindow`
        # @return [Fixnum]
        attr_accessor :context_window
      
        # A duration of time expressed in time granularity units.
        # Corresponds to the JSON property `dataGranularity`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsGranularity]
        attr_accessor :data_granularity
      
        # Configuration for exporting test set predictions to a BigQuery table.
        # Corresponds to the JSON property `exportEvaluatedDataItemsConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig]
        attr_accessor :export_evaluated_data_items_config
      
        # The amount of time into the future for which forecasted values for the target
        # are returned. Expressed in number of units defined by the `data_granularity`
        # field.
        # Corresponds to the JSON property `forecastHorizon`
        # @return [Fixnum]
        attr_accessor :forecast_horizon
      
        # Configuration that defines the hierarchical relationship of time series and
        # parameters for hierarchical forecasting strategies.
        # Corresponds to the JSON property `hierarchyConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig]
        attr_accessor :hierarchy_config
      
        # The geographical region based on which the holiday effect is applied in
        # modeling by adding holiday categorical array feature that include all holidays
        # matching the date. This option only allowed when data_granularity is day. By
        # default, holiday effect modeling is disabled. To turn it on, specify the
        # holiday region using this option.
        # Corresponds to the JSON property `holidayRegions`
        # @return [Array<String>]
        attr_accessor :holiday_regions
      
        # Objective function the model is optimizing towards. The training process
        # creates a model that optimizes the value of the objective function over the
        # validation set. The supported optimization objectives: * "minimize-rmse" (
        # default) - Minimize root-mean-squared error (RMSE). * "minimize-mae" -
        # Minimize mean-absolute error (MAE). * "minimize-rmsle" - Minimize root-mean-
        # squared log error (RMSLE). * "minimize-rmspe" - Minimize root-mean-squared
        # percentage error (RMSPE). * "minimize-wape-mae" - Minimize the combination of
        # weighted absolute percentage error (WAPE) and mean-absolute-error (MAE). * "
        # minimize-quantile-loss" - Minimize the quantile loss at the quantiles defined
        # in `quantiles`. * "minimize-mape" - Minimize the mean absolute percentage
        # error.
        # Corresponds to the JSON property `optimizationObjective`
        # @return [String]
        attr_accessor :optimization_objective
      
        # Quantiles to use for minimize-quantile-loss `optimization_objective`. Up to 5
        # quantiles are allowed of values between 0 and 1, exclusive. Required if the
        # value of optimization_objective is minimize-quantile-loss. Represents the
        # percent quantiles to use for that objective. Quantiles must be unique.
        # Corresponds to the JSON property `quantiles`
        # @return [Array<Float>]
        attr_accessor :quantiles
      
        # The name of the column that the Model is to predict values for. This column
        # must be unavailable at forecast.
        # Corresponds to the JSON property `targetColumn`
        # @return [String]
        attr_accessor :target_column
      
        # The name of the column that identifies time order in the time series. This
        # column must be available at forecast.
        # Corresponds to the JSON property `timeColumn`
        # @return [String]
        attr_accessor :time_column
      
        # Column names that should be used as attribute columns. The value of these
        # columns does not vary as a function of time. For example, store ID or item
        # color.
        # Corresponds to the JSON property `timeSeriesAttributeColumns`
        # @return [Array<String>]
        attr_accessor :time_series_attribute_columns
      
        # The name of the column that identifies the time series.
        # Corresponds to the JSON property `timeSeriesIdentifierColumn`
        # @return [String]
        attr_accessor :time_series_identifier_column
      
        # Required. The train budget of creating this model, expressed in milli node
        # hours i.e. 1,000 value in this field means 1 node hour. The training cost of
        # the model will not exceed this budget. The final cost will be attempted to be
        # close to the budget, though may end up being (even) noticeably smaller - at
        # the backend's discretion. This especially may happen when further model
        # training ceases to provide any improvements. If the budget is set to a value
        # known to be insufficient to train a model for the given dataset, the training
        # won't be attempted and will error. The train budget must be between 1,000 and
        # 72,000 milli node hours, inclusive.
        # Corresponds to the JSON property `trainBudgetMilliNodeHours`
        # @return [Fixnum]
        attr_accessor :train_budget_milli_node_hours
      
        # Each transformation will apply transform function to given input column. And
        # the result will be used for training. When creating transformation for
        # BigQuery Struct column, the column should be flattened using "." as the
        # delimiter.
        # Corresponds to the JSON property `transformations`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformation>]
        attr_accessor :transformations
      
        # Names of columns that are unavailable when a forecast is requested. This
        # column contains information for the given entity (identified by the
        # time_series_identifier_column) that is unknown before the forecast For example,
        # actual weather on a given day.
        # Corresponds to the JSON property `unavailableAtForecastColumns`
        # @return [Array<String>]
        attr_accessor :unavailable_at_forecast_columns
      
        # Validation options for the data validation component. The available options
        # are: * "fail-pipeline" - default, will validate against the validation and
        # fail the pipeline if it fails. * "ignore-validation" - ignore the results of
        # the validation and continue
        # Corresponds to the JSON property `validationOptions`
        # @return [String]
        attr_accessor :validation_options
      
        # Column name that should be used as the weight column. Higher values in this
        # column give more importance to the row during model training. The column must
        # have numeric values between 0 and 10000 inclusively; 0 means the row is
        # ignored for training. If weight column field is not set, then all rows are
        # assumed to have equal weight of 1. This column must be available at forecast.
        # Corresponds to the JSON property `weightColumn`
        # @return [String]
        attr_accessor :weight_column
      
        # Config that contains the strategy used to generate sliding windows in time
        # series training. A window is a series of rows that comprise the context up to
        # the time of prediction, and the horizon following. The corresponding row for
        # each window marks the start of the forecast horizon. Each window is used as an
        # input example for training/evaluation.
        # Corresponds to the JSON property `windowConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionWindowConfig]
        attr_accessor :window_config
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @additional_experiments = args[:additional_experiments] if args.key?(:additional_experiments)
          @available_at_forecast_columns = args[:available_at_forecast_columns] if args.key?(:available_at_forecast_columns)
          @context_window = args[:context_window] if args.key?(:context_window)
          @data_granularity = args[:data_granularity] if args.key?(:data_granularity)
          @export_evaluated_data_items_config = args[:export_evaluated_data_items_config] if args.key?(:export_evaluated_data_items_config)
          @forecast_horizon = args[:forecast_horizon] if args.key?(:forecast_horizon)
          @hierarchy_config = args[:hierarchy_config] if args.key?(:hierarchy_config)
          @holiday_regions = args[:holiday_regions] if args.key?(:holiday_regions)
          @optimization_objective = args[:optimization_objective] if args.key?(:optimization_objective)
          @quantiles = args[:quantiles] if args.key?(:quantiles)
          @target_column = args[:target_column] if args.key?(:target_column)
          @time_column = args[:time_column] if args.key?(:time_column)
          @time_series_attribute_columns = args[:time_series_attribute_columns] if args.key?(:time_series_attribute_columns)
          @time_series_identifier_column = args[:time_series_identifier_column] if args.key?(:time_series_identifier_column)
          @train_budget_milli_node_hours = args[:train_budget_milli_node_hours] if args.key?(:train_budget_milli_node_hours)
          @transformations = args[:transformations] if args.key?(:transformations)
          @unavailable_at_forecast_columns = args[:unavailable_at_forecast_columns] if args.key?(:unavailable_at_forecast_columns)
          @validation_options = args[:validation_options] if args.key?(:validation_options)
          @weight_column = args[:weight_column] if args.key?(:weight_column)
          @window_config = args[:window_config] if args.key?(:window_config)
        end
      end
      
      # A duration of time expressed in time granularity units.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsGranularity
        include Google::Apis::Core::Hashable
      
        # The number of granularity_units between data points in the training data. If `
        # granularity_unit` is `minute`, can be 1, 5, 10, 15, or 30. For all other
        # values of `granularity_unit`, must be 1.
        # Corresponds to the JSON property `quantity`
        # @return [Fixnum]
        attr_accessor :quantity
      
        # The time granularity unit of this time period. The supported units are: * "
        # minute" * "hour" * "day" * "week" * "month" * "year"
        # Corresponds to the JSON property `unit`
        # @return [String]
        attr_accessor :unit
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @quantity = args[:quantity] if args.key?(:quantity)
          @unit = args[:unit] if args.key?(:unit)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformation
        include Google::Apis::Core::Hashable
      
        # Training pipeline will infer the proper transformation based on the statistic
        # of dataset.
        # Corresponds to the JSON property `auto`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationAutoTransformation]
        attr_accessor :auto
      
        # Training pipeline will perform following transformation functions. * The
        # categorical string as is--no change to case, punctuation, spelling, tense, and
        # so on. * Convert the category name to a dictionary lookup index and generate
        # an embedding for each index. * Categories that appear less than 5 times in the
        # training dataset are treated as the "unknown" category. The "unknown" category
        # gets its own special lookup index and resulting embedding.
        # Corresponds to the JSON property `categorical`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationCategoricalTransformation]
        attr_accessor :categorical
      
        # Training pipeline will perform following transformation functions. * The value
        # converted to float32. * The z_score of the value. * log(value+1) when the
        # value is greater than or equal to 0. Otherwise, this transformation is not
        # applied and the value is considered a missing value. * z_score of log(value+1)
        # when the value is greater than or equal to 0. Otherwise, this transformation
        # is not applied and the value is considered a missing value.
        # Corresponds to the JSON property `numeric`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationNumericTransformation]
        attr_accessor :numeric
      
        # Training pipeline will perform following transformation functions. * The text
        # as is--no change to case, punctuation, spelling, tense, and so on. * Convert
        # the category name to a dictionary lookup index and generate an embedding for
        # each index.
        # Corresponds to the JSON property `text`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTextTransformation]
        attr_accessor :text
      
        # Training pipeline will perform following transformation functions. * Apply the
        # transformation functions for Numerical columns. * Determine the year, month,
        # day,and weekday. Treat each value from the timestamp as a Categorical column. *
        # Invalid numerical values (for example, values that fall outside of a typical
        # timestamp range, or are extreme values) receive no special treatment and are
        # not removed.
        # Corresponds to the JSON property `timestamp`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTimestampTransformation]
        attr_accessor :timestamp
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @auto = args[:auto] if args.key?(:auto)
          @categorical = args[:categorical] if args.key?(:categorical)
          @numeric = args[:numeric] if args.key?(:numeric)
          @text = args[:text] if args.key?(:text)
          @timestamp = args[:timestamp] if args.key?(:timestamp)
        end
      end
      
      # Training pipeline will infer the proper transformation based on the statistic
      # of dataset.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationAutoTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
        end
      end
      
      # Training pipeline will perform following transformation functions. * The
      # categorical string as is--no change to case, punctuation, spelling, tense, and
      # so on. * Convert the category name to a dictionary lookup index and generate
      # an embedding for each index. * Categories that appear less than 5 times in the
      # training dataset are treated as the "unknown" category. The "unknown" category
      # gets its own special lookup index and resulting embedding.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationCategoricalTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
        end
      end
      
      # Training pipeline will perform following transformation functions. * The value
      # converted to float32. * The z_score of the value. * log(value+1) when the
      # value is greater than or equal to 0. Otherwise, this transformation is not
      # applied and the value is considered a missing value. * z_score of log(value+1)
      # when the value is greater than or equal to 0. Otherwise, this transformation
      # is not applied and the value is considered a missing value.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationNumericTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
        end
      end
      
      # Training pipeline will perform following transformation functions. * The text
      # as is--no change to case, punctuation, spelling, tense, and so on. * Convert
      # the category name to a dictionary lookup index and generate an embedding for
      # each index.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTextTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
        end
      end
      
      # Training pipeline will perform following transformation functions. * Apply the
      # transformation functions for Numerical columns. * Determine the year, month,
      # day,and weekday. Treat each value from the timestamp as a Categorical column. *
      # Invalid numerical values (for example, values that fall outside of a typical
      # timestamp range, or are extreme values) receive no special treatment and are
      # not removed.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformationTimestampTransformation
        include Google::Apis::Core::Hashable
      
        # 
        # Corresponds to the JSON property `columnName`
        # @return [String]
        attr_accessor :column_name
      
        # The format in which that time field is expressed. The time_format must either
        # be one of: * `unix-seconds` * `unix-milliseconds` * `unix-microseconds` * `
        # unix-nanoseconds` (for respectively number of seconds, milliseconds,
        # microseconds and nanoseconds since start of the Unix epoch); or be written in `
        # strftime` syntax. If time_format is not set, then the default format is RFC
        # 3339 `date-time` format, where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.
        # 52Z)
        # Corresponds to the JSON property `timeFormat`
        # @return [String]
        attr_accessor :time_format
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column_name = args[:column_name] if args.key?(:column_name)
          @time_format = args[:time_format] if args.key?(:time_format)
        end
      end
      
      # Model metadata specific to TFT Forecasting.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingMetadata
        include Google::Apis::Core::Hashable
      
        # BigQuery destination uri for exported evaluated examples.
        # Corresponds to the JSON property `evaluatedDataItemsBigqueryUri`
        # @return [String]
        attr_accessor :evaluated_data_items_bigquery_uri
      
        # Output only. The actual training cost of the model, expressed in milli node
        # hours, i.e. 1,000 value in this field means 1 node hour. Guaranteed to not
        # exceed the train budget.
        # Corresponds to the JSON property `trainCostMilliNodeHours`
        # @return [Fixnum]
        attr_accessor :train_cost_milli_node_hours
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @evaluated_data_items_bigquery_uri = args[:evaluated_data_items_bigquery_uri] if args.key?(:evaluated_data_items_bigquery_uri)
          @train_cost_milli_node_hours = args[:train_cost_milli_node_hours] if args.key?(:train_cost_milli_node_hours)
        end
      end
      
      # Config that contains the strategy used to generate sliding windows in time
      # series training. A window is a series of rows that comprise the context up to
      # the time of prediction, and the horizon following. The corresponding row for
      # each window marks the start of the forecast horizon. Each window is used as an
      # input example for training/evaluation.
      class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionWindowConfig
        include Google::Apis::Core::Hashable
      
        # Name of the column that should be used to generate sliding windows. The column
        # should contain either booleans or string booleans; if the value of the row is
        # True, generate a sliding window with the horizon starting at that row. The
        # column will not be used as a feature in training.
        # Corresponds to the JSON property `column`
        # @return [String]
        attr_accessor :column
      
        # Maximum number of windows that should be generated across all time series.
        # Corresponds to the JSON property `maxCount`
        # @return [Fixnum]
        attr_accessor :max_count
      
        # Stride length used to generate input examples. Within one time series, every `$
        # STRIDE_LENGTH` rows will be used to generate a sliding window.
        # Corresponds to the JSON property `strideLength`
        # @return [Fixnum]
        attr_accessor :stride_length
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @column = args[:column] if args.key?(:column)
          @max_count = args[:max_count] if args.key?(:max_count)
          @stride_length = args[:stride_length] if args.key?(:stride_length)
        end
      end
      
      # A vertex represents a 2D point in the image. NOTE: the normalized vertex
      # coordinates are relative to the original image and range from 0 to 1.
      class GoogleCloudAiplatformV1beta1SchemaVertex
        include Google::Apis::Core::Hashable
      
        # X coordinate.
        # Corresponds to the JSON property `x`
        # @return [Float]
        attr_accessor :x
      
        # Y coordinate.
        # Corresponds to the JSON property `y`
        # @return [Float]
        attr_accessor :y
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @x = args[:x] if args.key?(:x)
          @y = args[:y] if args.key?(:y)
        end
      end
      
      # Annotation details specific to video action recognition.
      class GoogleCloudAiplatformV1beta1SchemaVideoActionRecognitionAnnotation
        include Google::Apis::Core::Hashable
      
        # The resource Id of the AnnotationSpec that this Annotation pertains to.
        # Corresponds to the JSON property `annotationSpecId`
        # @return [String]
        attr_accessor :annotation_spec_id
      
        # The display name of the AnnotationSpec that this Annotation pertains to.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # A time period inside of a DataItem that has a time dimension (e.g. video).
        # Corresponds to the JSON property `timeSegment`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTimeSegment]
        attr_accessor :time_segment
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotation_spec_id = args[:annotation_spec_id] if args.key?(:annotation_spec_id)
          @display_name = args[:display_name] if args.key?(:display_name)
          @time_segment = args[:time_segment] if args.key?(:time_segment)
        end
      end
      
      # Annotation details specific to video classification.
      class GoogleCloudAiplatformV1beta1SchemaVideoClassificationAnnotation
        include Google::Apis::Core::Hashable
      
        # The resource Id of the AnnotationSpec that this Annotation pertains to.
        # Corresponds to the JSON property `annotationSpecId`
        # @return [String]
        attr_accessor :annotation_spec_id
      
        # The display name of the AnnotationSpec that this Annotation pertains to.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # A time period inside of a DataItem that has a time dimension (e.g. video).
        # Corresponds to the JSON property `timeSegment`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SchemaTimeSegment]
        attr_accessor :time_segment
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotation_spec_id = args[:annotation_spec_id] if args.key?(:annotation_spec_id)
          @display_name = args[:display_name] if args.key?(:display_name)
          @time_segment = args[:time_segment] if args.key?(:time_segment)
        end
      end
      
      # Payload of Video DataItem.
      class GoogleCloudAiplatformV1beta1SchemaVideoDataItem
        include Google::Apis::Core::Hashable
      
        # Required. Google Cloud Storage URI points to the original video in user's
        # bucket. The video is up to 50 GB in size and up to 3 hour in duration.
        # Corresponds to the JSON property `gcsUri`
        # @return [String]
        attr_accessor :gcs_uri
      
        # Output only. The mime type of the content of the video. Only the videos in
        # below listed mime types are supported. Supported mime_type: - video/mp4 -
        # video/avi - video/quicktime
        # Corresponds to the JSON property `mimeType`
        # @return [String]
        attr_accessor :mime_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @gcs_uri = args[:gcs_uri] if args.key?(:gcs_uri)
          @mime_type = args[:mime_type] if args.key?(:mime_type)
        end
      end
      
      # The metadata of Datasets that contain Video DataItems.
      class GoogleCloudAiplatformV1beta1SchemaVideoDatasetMetadata
        include Google::Apis::Core::Hashable
      
        # Points to a YAML file stored on Google Cloud Storage describing payload of the
        # Video DataItems that belong to this Dataset.
        # Corresponds to the JSON property `dataItemSchemaUri`
        # @return [String]
        attr_accessor :data_item_schema_uri
      
        # Google Cloud Storage Bucket name that contains the blob data of this Dataset.
        # Corresponds to the JSON property `gcsBucket`
        # @return [String]
        attr_accessor :gcs_bucket
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @data_item_schema_uri = args[:data_item_schema_uri] if args.key?(:data_item_schema_uri)
          @gcs_bucket = args[:gcs_bucket] if args.key?(:gcs_bucket)
        end
      end
      
      # Annotation details specific to video object tracking.
      class GoogleCloudAiplatformV1beta1SchemaVideoObjectTrackingAnnotation
        include Google::Apis::Core::Hashable
      
        # The resource Id of the AnnotationSpec that this Annotation pertains to.
        # Corresponds to the JSON property `annotationSpecId`
        # @return [String]
        attr_accessor :annotation_spec_id
      
        # The display name of the AnnotationSpec that this Annotation pertains to.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # The instance of the object, expressed as a positive integer. Used to track the
        # same object across different frames.
        # Corresponds to the JSON property `instanceId`
        # @return [Fixnum]
        attr_accessor :instance_id
      
        # A time (frame) of a video to which this annotation pertains. Represented as
        # the duration since the video's start.
        # Corresponds to the JSON property `timeOffset`
        # @return [String]
        attr_accessor :time_offset
      
        # The rightmost coordinate of the bounding box.
        # Corresponds to the JSON property `xMax`
        # @return [Float]
        attr_accessor :x_max
      
        # The leftmost coordinate of the bounding box.
        # Corresponds to the JSON property `xMin`
        # @return [Float]
        attr_accessor :x_min
      
        # The bottommost coordinate of the bounding box.
        # Corresponds to the JSON property `yMax`
        # @return [Float]
        attr_accessor :y_max
      
        # The topmost coordinate of the bounding box.
        # Corresponds to the JSON property `yMin`
        # @return [Float]
        attr_accessor :y_min
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @annotation_spec_id = args[:annotation_spec_id] if args.key?(:annotation_spec_id)
          @display_name = args[:display_name] if args.key?(:display_name)
          @instance_id = args[:instance_id] if args.key?(:instance_id)
          @time_offset = args[:time_offset] if args.key?(:time_offset)
          @x_max = args[:x_max] if args.key?(:x_max)
          @x_min = args[:x_min] if args.key?(:x_min)
          @y_max = args[:y_max] if args.key?(:y_max)
          @y_min = args[:y_min] if args.key?(:y_min)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaVisualInspectionClassificationLabelSavedQueryMetadata
        include Google::Apis::Core::Hashable
      
        # Whether or not the classification label is multi_label.
        # Corresponds to the JSON property `multiLabel`
        # @return [Boolean]
        attr_accessor :multi_label
        alias_method :multi_label?, :multi_label
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @multi_label = args[:multi_label] if args.key?(:multi_label)
        end
      end
      
      # 
      class GoogleCloudAiplatformV1beta1SchemaVisualInspectionMaskSavedQueryMetadata
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Response message for DatasetService.SearchDataItems.
      class GoogleCloudAiplatformV1beta1SearchDataItemsResponse
        include Google::Apis::Core::Hashable
      
        # The DataItemViews read.
        # Corresponds to the JSON property `dataItemViews`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DataItemView>]
        attr_accessor :data_item_views
      
        # A token to retrieve next page of results. Pass to SearchDataItemsRequest.
        # page_token to obtain that page.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @data_item_views = args[:data_item_views] if args.key?(:data_item_views)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Response message for FeaturestoreService.SearchFeatures.
      class GoogleCloudAiplatformV1beta1SearchFeaturesResponse
        include Google::Apis::Core::Hashable
      
        # The Features matching the request. Fields returned: * `name` * `description` *
        # `labels` * `create_time` * `update_time`
        # Corresponds to the JSON property `features`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Feature>]
        attr_accessor :features
      
        # A token, which can be sent as SearchFeaturesRequest.page_token to retrieve the
        # next page. If this field is omitted, there are no subsequent pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @features = args[:features] if args.key?(:features)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Request message for MigrationService.SearchMigratableResources.
      class GoogleCloudAiplatformV1beta1SearchMigratableResourcesRequest
        include Google::Apis::Core::Hashable
      
        # A filter for your search. You can use the following types of filters: *
        # Resource type filters. The following strings filter for a specific type of
        # MigratableResource: * `ml_engine_model_version:*` * `automl_model:*` * `
        # automl_dataset:*` * `data_labeling_dataset:*` * "Migrated or not" filters. The
        # following strings filter for resources that either have or have not already
        # been migrated: * `last_migrate_time:*` filters for migrated resources. * `NOT
        # last_migrate_time:*` filters for not yet migrated resources.
        # Corresponds to the JSON property `filter`
        # @return [String]
        attr_accessor :filter
      
        # The standard page size. The default and maximum value is 100.
        # Corresponds to the JSON property `pageSize`
        # @return [Fixnum]
        attr_accessor :page_size
      
        # The standard page token.
        # Corresponds to the JSON property `pageToken`
        # @return [String]
        attr_accessor :page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @filter = args[:filter] if args.key?(:filter)
          @page_size = args[:page_size] if args.key?(:page_size)
          @page_token = args[:page_token] if args.key?(:page_token)
        end
      end
      
      # Response message for MigrationService.SearchMigratableResources.
      class GoogleCloudAiplatformV1beta1SearchMigratableResourcesResponse
        include Google::Apis::Core::Hashable
      
        # All migratable resources that can be migrated to the location specified in the
        # request.
        # Corresponds to the JSON property `migratableResources`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MigratableResource>]
        attr_accessor :migratable_resources
      
        # The standard next-page token. The migratable_resources may not fill page_size
        # in SearchMigratableResourcesRequest even when there are subsequent pages.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @migratable_resources = args[:migratable_resources] if args.key?(:migratable_resources)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # Request message for JobService.SearchModelDeploymentMonitoringStatsAnomalies.
      class GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest
        include Google::Apis::Core::Hashable
      
        # Required. The DeployedModel ID of the [
        # ModelDeploymentMonitoringObjectiveConfig.deployed_model_id].
        # Corresponds to the JSON property `deployedModelId`
        # @return [String]
        attr_accessor :deployed_model_id
      
        # The latest timestamp of stats being generated. If not set, indicates feching
        # stats till the latest possible one.
        # Corresponds to the JSON property `endTime`
        # @return [String]
        attr_accessor :end_time
      
        # The feature display name. If specified, only return the stats belonging to
        # this feature. Format: ModelMonitoringStatsAnomalies.
        # FeatureHistoricStatsAnomalies.feature_display_name, example: "user_destination"
        # .
        # Corresponds to the JSON property `featureDisplayName`
        # @return [String]
        attr_accessor :feature_display_name
      
        # Required. Objectives of the stats to retrieve.
        # Corresponds to the JSON property `objectives`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective>]
        attr_accessor :objectives
      
        # The standard list page size.
        # Corresponds to the JSON property `pageSize`
        # @return [Fixnum]
        attr_accessor :page_size
      
        # A page token received from a previous JobService.
        # SearchModelDeploymentMonitoringStatsAnomalies call.
        # Corresponds to the JSON property `pageToken`
        # @return [String]
        attr_accessor :page_token
      
        # The earliest timestamp of stats being generated. If not set, indicates
        # fetching stats till the earliest possible one.
        # Corresponds to the JSON property `startTime`
        # @return [String]
        attr_accessor :start_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployed_model_id = args[:deployed_model_id] if args.key?(:deployed_model_id)
          @end_time = args[:end_time] if args.key?(:end_time)
          @feature_display_name = args[:feature_display_name] if args.key?(:feature_display_name)
          @objectives = args[:objectives] if args.key?(:objectives)
          @page_size = args[:page_size] if args.key?(:page_size)
          @page_token = args[:page_token] if args.key?(:page_token)
          @start_time = args[:start_time] if args.key?(:start_time)
        end
      end
      
      # Stats requested for specific objective.
      class GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective
        include Google::Apis::Core::Hashable
      
        # If set, all attribution scores between
        # SearchModelDeploymentMonitoringStatsAnomaliesRequest.start_time and
        # SearchModelDeploymentMonitoringStatsAnomaliesRequest.end_time are fetched, and
        # page token doesn't take effect in this case. Only used to retrieve attribution
        # score for the top Features which has the highest attribution score in the
        # latest monitoring run.
        # Corresponds to the JSON property `topFeatureCount`
        # @return [Fixnum]
        attr_accessor :top_feature_count
      
        # 
        # Corresponds to the JSON property `type`
        # @return [String]
        attr_accessor :type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @top_feature_count = args[:top_feature_count] if args.key?(:top_feature_count)
          @type = args[:type] if args.key?(:type)
        end
      end
      
      # Response message for JobService.SearchModelDeploymentMonitoringStatsAnomalies.
      class GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesResponse
        include Google::Apis::Core::Hashable
      
        # Stats retrieved for requested objectives. There are at most 1000
        # ModelMonitoringStatsAnomalies.FeatureHistoricStatsAnomalies.prediction_stats
        # in the response.
        # Corresponds to the JSON property `monitoringStats`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomalies>]
        attr_accessor :monitoring_stats
      
        # The page token that can be used by the next JobService.
        # SearchModelDeploymentMonitoringStatsAnomalies call.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @monitoring_stats = args[:monitoring_stats] if args.key?(:monitoring_stats)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # The request message for FeatureOnlineStoreService.SearchNearestEntities.
      class GoogleCloudAiplatformV1beta1SearchNearestEntitiesRequest
        include Google::Apis::Core::Hashable
      
        # A query to find a number of similar entities.
        # Corresponds to the JSON property `query`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NearestNeighborQuery]
        attr_accessor :query
      
        # Optional. If set to true, the full entities (including all vector values and
        # metadata) of the nearest neighbors are returned; otherwise only entity id of
        # the nearest neighbors will be returned. Note that returning full entities will
        # significantly increase the latency and cost of the query.
        # Corresponds to the JSON property `returnFullEntity`
        # @return [Boolean]
        attr_accessor :return_full_entity
        alias_method :return_full_entity?, :return_full_entity
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @query = args[:query] if args.key?(:query)
          @return_full_entity = args[:return_full_entity] if args.key?(:return_full_entity)
        end
      end
      
      # Response message for FeatureOnlineStoreService.SearchNearestEntities
      class GoogleCloudAiplatformV1beta1SearchNearestEntitiesResponse
        include Google::Apis::Core::Hashable
      
        # Nearest neighbors for one query.
        # Corresponds to the JSON property `nearestNeighbors`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NearestNeighbors]
        attr_accessor :nearest_neighbors
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @nearest_neighbors = args[:nearest_neighbors] if args.key?(:nearest_neighbors)
        end
      end
      
      # Configuration for the use of custom service account to run the workloads.
      class GoogleCloudAiplatformV1beta1ServiceAccountSpec
        include Google::Apis::Core::Hashable
      
        # Required. If true, custom user-managed service account is enforced to run any
        # workloads (for example, Vertex Jobs) on the resource. Otherwise, uses the [
        # Vertex AI Custom Code Service Agent](https://cloud.google.com/vertex-ai/docs/
        # general/access-control#service-agents).
        # Corresponds to the JSON property `enableCustomServiceAccount`
        # @return [Boolean]
        attr_accessor :enable_custom_service_account
        alias_method :enable_custom_service_account?, :enable_custom_service_account
      
        # Optional. Default service account that this PersistentResource's workloads run
        # as. The workloads include: * Any runtime specified via `ResourceRuntimeSpec`
        # on creation time, for example, Ray. * Jobs submitted to PersistentResource, if
        # no other service account specified in the job specs. Only works when custom
        # service account is enabled and users have the `iam.serviceAccounts.actAs`
        # permission on this service account. Required if any containers are specified
        # in `ResourceRuntimeSpec`.
        # Corresponds to the JSON property `serviceAccount`
        # @return [String]
        attr_accessor :service_account
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @enable_custom_service_account = args[:enable_custom_service_account] if args.key?(:enable_custom_service_account)
          @service_account = args[:service_account] if args.key?(:service_account)
        end
      end
      
      # Config for SmoothGrad approximation of gradients. When enabled, the gradients
      # are approximated by averaging the gradients from noisy samples in the vicinity
      # of the inputs. Adding noise can help improve the computed gradients. Refer to
      # this paper for more details: https://arxiv.org/pdf/1706.03825.pdf
      class GoogleCloudAiplatformV1beta1SmoothGradConfig
        include Google::Apis::Core::Hashable
      
        # Noise sigma by features. Noise sigma represents the standard deviation of the
        # gaussian kernel that will be used to add noise to interpolated inputs prior to
        # computing gradients.
        # Corresponds to the JSON property `featureNoiseSigma`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureNoiseSigma]
        attr_accessor :feature_noise_sigma
      
        # This is a single float value and will be used to add noise to all the features.
        # Use this field when all features are normalized to have the same distribution:
        # scale to range [0, 1], [-1, 1] or z-scoring, where features are normalized to
        # have 0-mean and 1-variance. Learn more about [normalization](https://
        # developers.google.com/machine-learning/data-prep/transform/normalization). For
        # best results the recommended value is about 10% - 20% of the standard
        # deviation of the input feature. Refer to section 3.2 of the SmoothGrad paper:
        # https://arxiv.org/pdf/1706.03825.pdf. Defaults to 0.1. If the distribution is
        # different per feature, set feature_noise_sigma instead for each feature.
        # Corresponds to the JSON property `noiseSigma`
        # @return [Float]
        attr_accessor :noise_sigma
      
        # The number of gradient samples to use for approximation. The higher this
        # number, the more accurate the gradient is, but the runtime complexity
        # increases by this factor as well. Valid range of its value is [1, 50].
        # Defaults to 3.
        # Corresponds to the JSON property `noisySampleCount`
        # @return [Fixnum]
        attr_accessor :noisy_sample_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @feature_noise_sigma = args[:feature_noise_sigma] if args.key?(:feature_noise_sigma)
          @noise_sigma = args[:noise_sigma] if args.key?(:noise_sigma)
          @noisy_sample_count = args[:noisy_sample_count] if args.key?(:noisy_sample_count)
        end
      end
      
      # SpecialistPool represents customers' own workforce to work on their data
      # labeling jobs. It includes a group of specialist managers and workers.
      # Managers are responsible for managing the workers in this pool as well as
      # customers' data labeling jobs associated with this pool. Customers create
      # specialist pool as well as start data labeling jobs on Cloud, managers and
      # workers handle the jobs using CrowdCompute console.
      class GoogleCloudAiplatformV1beta1SpecialistPool
        include Google::Apis::Core::Hashable
      
        # Required. The user-defined name of the SpecialistPool. The name can be up to
        # 128 characters long and can consist of any UTF-8 characters. This field should
        # be unique on project-level.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Required. The resource name of the SpecialistPool.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Output only. The resource name of the pending data labeling jobs.
        # Corresponds to the JSON property `pendingDataLabelingJobs`
        # @return [Array<String>]
        attr_accessor :pending_data_labeling_jobs
      
        # The email addresses of the managers in the SpecialistPool.
        # Corresponds to the JSON property `specialistManagerEmails`
        # @return [Array<String>]
        attr_accessor :specialist_manager_emails
      
        # Output only. The number of managers in this SpecialistPool.
        # Corresponds to the JSON property `specialistManagersCount`
        # @return [Fixnum]
        attr_accessor :specialist_managers_count
      
        # The email addresses of workers in the SpecialistPool.
        # Corresponds to the JSON property `specialistWorkerEmails`
        # @return [Array<String>]
        attr_accessor :specialist_worker_emails
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @display_name = args[:display_name] if args.key?(:display_name)
          @name = args[:name] if args.key?(:name)
          @pending_data_labeling_jobs = args[:pending_data_labeling_jobs] if args.key?(:pending_data_labeling_jobs)
          @specialist_manager_emails = args[:specialist_manager_emails] if args.key?(:specialist_manager_emails)
          @specialist_managers_count = args[:specialist_managers_count] if args.key?(:specialist_managers_count)
          @specialist_worker_emails = args[:specialist_worker_emails] if args.key?(:specialist_worker_emails)
        end
      end
      
      # Metadata information for NotebookService.StartNotebookRuntime.
      class GoogleCloudAiplatformV1beta1StartNotebookRuntimeOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        # A human-readable message that shows the intermediate progress details of
        # NotebookRuntime.
        # Corresponds to the JSON property `progressMessage`
        # @return [String]
        attr_accessor :progress_message
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
          @progress_message = args[:progress_message] if args.key?(:progress_message)
        end
      end
      
      # Request message for NotebookService.StartNotebookRuntime.
      class GoogleCloudAiplatformV1beta1StartNotebookRuntimeRequest
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Request message for VizierService.StopTrial.
      class GoogleCloudAiplatformV1beta1StopTrialRequest
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Assigns input data to the training, validation, and test sets so that the
      # distribution of values found in the categorical column (as specified by the `
      # key` field) is mirrored within each split. The fraction values determine the
      # relative sizes of the splits. For example, if the specified column has three
      # values, with 50% of the rows having value "A", 25% value "B", and 25% value "C"
      # , and the split fractions are specified as 80/10/10, then the training set
      # will constitute 80% of the training data, with about 50% of the training set
      # rows having the value "A" for the specified column, about 25% having the value
      # "B", and about 25% having the value "C". Only the top 500 occurring values are
      # used; any values not in the top 500 values are randomly assigned to a split.
      # If less than three rows contain a specific value, those rows are randomly
      # assigned. Supported only for tabular Datasets.
      class GoogleCloudAiplatformV1beta1StratifiedSplit
        include Google::Apis::Core::Hashable
      
        # Required. The key is a name of one of the Dataset's data columns. The key
        # provided must be for a categorical column.
        # Corresponds to the JSON property `key`
        # @return [String]
        attr_accessor :key
      
        # The fraction of the input data that is to be used to evaluate the Model.
        # Corresponds to the JSON property `testFraction`
        # @return [Float]
        attr_accessor :test_fraction
      
        # The fraction of the input data that is to be used to train the Model.
        # Corresponds to the JSON property `trainingFraction`
        # @return [Float]
        attr_accessor :training_fraction
      
        # The fraction of the input data that is to be used to validate the Model.
        # Corresponds to the JSON property `validationFraction`
        # @return [Float]
        attr_accessor :validation_fraction
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @key = args[:key] if args.key?(:key)
          @test_fraction = args[:test_fraction] if args.key?(:test_fraction)
          @training_fraction = args[:training_fraction] if args.key?(:training_fraction)
          @validation_fraction = args[:validation_fraction] if args.key?(:validation_fraction)
        end
      end
      
      # Request message for PredictionService.StreamingPredict. The first message must
      # contain endpoint field and optionally input. The subsequent messages must
      # contain input.
      class GoogleCloudAiplatformV1beta1StreamingPredictRequest
        include Google::Apis::Core::Hashable
      
        # The prediction input.
        # Corresponds to the JSON property `inputs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Tensor>]
        attr_accessor :inputs
      
        # A tensor value type.
        # Corresponds to the JSON property `parameters`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Tensor]
        attr_accessor :parameters
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @inputs = args[:inputs] if args.key?(:inputs)
          @parameters = args[:parameters] if args.key?(:parameters)
        end
      end
      
      # Response message for PredictionService.StreamingPredict.
      class GoogleCloudAiplatformV1beta1StreamingPredictResponse
        include Google::Apis::Core::Hashable
      
        # The prediction output.
        # Corresponds to the JSON property `outputs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Tensor>]
        attr_accessor :outputs
      
        # A tensor value type.
        # Corresponds to the JSON property `parameters`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Tensor]
        attr_accessor :parameters
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @outputs = args[:outputs] if args.key?(:outputs)
          @parameters = args[:parameters] if args.key?(:parameters)
        end
      end
      
      # Request message for FeaturestoreOnlineServingService.
      # StreamingFeatureValuesRead.
      class GoogleCloudAiplatformV1beta1StreamingReadFeatureValuesRequest
        include Google::Apis::Core::Hashable
      
        # Required. IDs of entities to read Feature values of. The maximum number of IDs
        # is 100. For example, for a machine learning model predicting user clicks on a
        # website, an entity ID could be `user_123`.
        # Corresponds to the JSON property `entityIds`
        # @return [Array<String>]
        attr_accessor :entity_ids
      
        # Selector for Features of an EntityType.
        # Corresponds to the JSON property `featureSelector`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureSelector]
        attr_accessor :feature_selector
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @entity_ids = args[:entity_ids] if args.key?(:entity_ids)
          @feature_selector = args[:feature_selector] if args.key?(:feature_selector)
        end
      end
      
      # A list of string values.
      class GoogleCloudAiplatformV1beta1StringArray
        include Google::Apis::Core::Hashable
      
        # A list of string values.
        # Corresponds to the JSON property `values`
        # @return [Array<String>]
        attr_accessor :values
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @values = args[:values] if args.key?(:values)
        end
      end
      
      # A message representing a Study.
      class GoogleCloudAiplatformV1beta1Study
        include Google::Apis::Core::Hashable
      
        # Output only. Time at which the study was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Required. Describes the Study, default value is empty string.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Output only. A human readable reason why the Study is inactive. This should be
        # empty if a study is ACTIVE or COMPLETED.
        # Corresponds to the JSON property `inactiveReason`
        # @return [String]
        attr_accessor :inactive_reason
      
        # Output only. The name of a study. The study's globally unique identifier.
        # Format: `projects/`project`/locations/`location`/studies/`study``
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Output only. The detailed state of a Study.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor :state
      
        # Represents specification of a Study.
        # Corresponds to the JSON property `studySpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StudySpec]
        attr_accessor :study_spec
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @display_name = args[:display_name] if args.key?(:display_name)
          @inactive_reason = args[:inactive_reason] if args.key?(:inactive_reason)
          @name = args[:name] if args.key?(:name)
          @state = args[:state] if args.key?(:state)
          @study_spec = args[:study_spec] if args.key?(:study_spec)
        end
      end
      
      # Represents specification of a Study.
      class GoogleCloudAiplatformV1beta1StudySpec
        include Google::Apis::Core::Hashable
      
        # The search algorithm specified for the Study.
        # Corresponds to the JSON property `algorithm`
        # @return [String]
        attr_accessor :algorithm
      
        # Configuration for ConvexAutomatedStoppingSpec. When there are enough completed
        # trials (configured by min_measurement_count), for pending trials with enough
        # measurements and steps, the policy first computes an overestimate of the
        # objective value at max_num_steps according to the slope of the incomplete
        # objective value curve. No prediction can be made if the curve is completely
        # flat. If the overestimation is worse than the best objective value of the
        # completed trials, this pending trial will be early-stopped, but a last
        # measurement will be added to the pending trial with max_num_steps and
        # predicted objective value from the autoregression model.
        # Corresponds to the JSON property `convexAutomatedStoppingSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StudySpecConvexAutomatedStoppingSpec]
        attr_accessor :convex_automated_stopping_spec
      
        # Configuration for ConvexStopPolicy.
        # Corresponds to the JSON property `convexStopConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig]
        attr_accessor :convex_stop_config
      
        # The decay curve automated stopping rule builds a Gaussian Process Regressor to
        # predict the final objective value of a Trial based on the already completed
        # Trials and the intermediate measurements of the current Trial. Early stopping
        # is requested for the current Trial if there is very low probability to exceed
        # the optimal value found so far.
        # Corresponds to the JSON property `decayCurveStoppingSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StudySpecDecayCurveAutomatedStoppingSpec]
        attr_accessor :decay_curve_stopping_spec
      
        # Describe which measurement selection type will be used
        # Corresponds to the JSON property `measurementSelectionType`
        # @return [String]
        attr_accessor :measurement_selection_type
      
        # The median automated stopping rule stops a pending Trial if the Trial's best
        # objective_value is strictly below the median 'performance' of all completed
        # Trials reported up to the Trial's last measurement. Currently, 'performance'
        # refers to the running average of the objective values reported by the Trial in
        # each measurement.
        # Corresponds to the JSON property `medianAutomatedStoppingSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StudySpecMedianAutomatedStoppingSpec]
        attr_accessor :median_automated_stopping_spec
      
        # Required. Metric specs for the Study.
        # Corresponds to the JSON property `metrics`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StudySpecMetricSpec>]
        attr_accessor :metrics
      
        # The observation noise level of the study. Currently only supported by the
        # Vertex AI Vizier service. Not supported by HyperparameterTuningJob or
        # TrainingPipeline.
        # Corresponds to the JSON property `observationNoise`
        # @return [String]
        attr_accessor :observation_noise
      
        # Required. The set of parameters to tune.
        # Corresponds to the JSON property `parameters`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StudySpecParameterSpec>]
        attr_accessor :parameters
      
        # This contains flag for manually disabling transfer learning for a study. The
        # names of prior studies being used for transfer learning (if any) are also
        # listed here.
        # Corresponds to the JSON property `transferLearningConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StudySpecTransferLearningConfig]
        attr_accessor :transfer_learning_config
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @algorithm = args[:algorithm] if args.key?(:algorithm)
          @convex_automated_stopping_spec = args[:convex_automated_stopping_spec] if args.key?(:convex_automated_stopping_spec)
          @convex_stop_config = args[:convex_stop_config] if args.key?(:convex_stop_config)
          @decay_curve_stopping_spec = args[:decay_curve_stopping_spec] if args.key?(:decay_curve_stopping_spec)
          @measurement_selection_type = args[:measurement_selection_type] if args.key?(:measurement_selection_type)
          @median_automated_stopping_spec = args[:median_automated_stopping_spec] if args.key?(:median_automated_stopping_spec)
          @metrics = args[:metrics] if args.key?(:metrics)
          @observation_noise = args[:observation_noise] if args.key?(:observation_noise)
          @parameters = args[:parameters] if args.key?(:parameters)
          @transfer_learning_config = args[:transfer_learning_config] if args.key?(:transfer_learning_config)
        end
      end
      
      # Configuration for ConvexAutomatedStoppingSpec. When there are enough completed
      # trials (configured by min_measurement_count), for pending trials with enough
      # measurements and steps, the policy first computes an overestimate of the
      # objective value at max_num_steps according to the slope of the incomplete
      # objective value curve. No prediction can be made if the curve is completely
      # flat. If the overestimation is worse than the best objective value of the
      # completed trials, this pending trial will be early-stopped, but a last
      # measurement will be added to the pending trial with max_num_steps and
      # predicted objective value from the autoregression model.
      class GoogleCloudAiplatformV1beta1StudySpecConvexAutomatedStoppingSpec
        include Google::Apis::Core::Hashable
      
        # The hyper-parameter name used in the tuning job that stands for learning rate.
        # Leave it blank if learning rate is not in a parameter in tuning. The
        # learning_rate is used to estimate the objective value of the ongoing trial.
        # Corresponds to the JSON property `learningRateParameterName`
        # @return [String]
        attr_accessor :learning_rate_parameter_name
      
        # Steps used in predicting the final objective for early stopped trials. In
        # general, it's set to be the same as the defined steps in training / tuning. If
        # not defined, it will learn it from the completed trials. When use_steps is
        # false, this field is set to the maximum elapsed seconds.
        # Corresponds to the JSON property `maxStepCount`
        # @return [Fixnum]
        attr_accessor :max_step_count
      
        # The minimal number of measurements in a Trial. Early-stopping checks will not
        # trigger if less than min_measurement_count+1 completed trials or pending
        # trials with less than min_measurement_count measurements. If not defined, the
        # default value is 5.
        # Corresponds to the JSON property `minMeasurementCount`
        # @return [Fixnum]
        attr_accessor :min_measurement_count
      
        # Minimum number of steps for a trial to complete. Trials which do not have a
        # measurement with step_count > min_step_count won't be considered for early
        # stopping. It's ok to set it to 0, and a trial can be early stopped at any
        # stage. By default, min_step_count is set to be one-tenth of the max_step_count.
        # When use_elapsed_duration is true, this field is set to the minimum elapsed
        # seconds.
        # Corresponds to the JSON property `minStepCount`
        # @return [Fixnum]
        attr_accessor :min_step_count
      
        # ConvexAutomatedStoppingSpec by default only updates the trials that needs to
        # be early stopped using a newly trained auto-regressive model. When this flag
        # is set to True, all stopped trials from the beginning are potentially updated
        # in terms of their `final_measurement`. Also, note that the training logic of
        # autoregressive models is different in this case. Enabling this option has
        # shown better results and this may be the default option in the future.
        # Corresponds to the JSON property `updateAllStoppedTrials`
        # @return [Boolean]
        attr_accessor :update_all_stopped_trials
        alias_method :update_all_stopped_trials?, :update_all_stopped_trials
      
        # This bool determines whether or not the rule is applied based on elapsed_secs
        # or steps. If use_elapsed_duration==false, the early stopping decision is made
        # according to the predicted objective values according to the target steps. If
        # use_elapsed_duration==true, elapsed_secs is used instead of steps. Also, in
        # this case, the parameters max_num_steps and min_num_steps are overloaded to
        # contain max_elapsed_seconds and min_elapsed_seconds.
        # Corresponds to the JSON property `useElapsedDuration`
        # @return [Boolean]
        attr_accessor :use_elapsed_duration
        alias_method :use_elapsed_duration?, :use_elapsed_duration
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @learning_rate_parameter_name = args[:learning_rate_parameter_name] if args.key?(:learning_rate_parameter_name)
          @max_step_count = args[:max_step_count] if args.key?(:max_step_count)
          @min_measurement_count = args[:min_measurement_count] if args.key?(:min_measurement_count)
          @min_step_count = args[:min_step_count] if args.key?(:min_step_count)
          @update_all_stopped_trials = args[:update_all_stopped_trials] if args.key?(:update_all_stopped_trials)
          @use_elapsed_duration = args[:use_elapsed_duration] if args.key?(:use_elapsed_duration)
        end
      end
      
      # Configuration for ConvexStopPolicy.
      class GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig
        include Google::Apis::Core::Hashable
      
        # The number of Trial measurements used in autoregressive model for value
        # prediction. A trial won't be considered early stopping if has fewer
        # measurement points.
        # Corresponds to the JSON property `autoregressiveOrder`
        # @return [Fixnum]
        attr_accessor :autoregressive_order
      
        # The hyper-parameter name used in the tuning job that stands for learning rate.
        # Leave it blank if learning rate is not in a parameter in tuning. The
        # learning_rate is used to estimate the objective value of the ongoing trial.
        # Corresponds to the JSON property `learningRateParameterName`
        # @return [String]
        attr_accessor :learning_rate_parameter_name
      
        # Steps used in predicting the final objective for early stopped trials. In
        # general, it's set to be the same as the defined steps in training / tuning.
        # When use_steps is false, this field is set to the maximum elapsed seconds.
        # Corresponds to the JSON property `maxNumSteps`
        # @return [Fixnum]
        attr_accessor :max_num_steps
      
        # Minimum number of steps for a trial to complete. Trials which do not have a
        # measurement with num_steps > min_num_steps won't be considered for early
        # stopping. It's ok to set it to 0, and a trial can be early stopped at any
        # stage. By default, min_num_steps is set to be one-tenth of the max_num_steps.
        # When use_steps is false, this field is set to the minimum elapsed seconds.
        # Corresponds to the JSON property `minNumSteps`
        # @return [Fixnum]
        attr_accessor :min_num_steps
      
        # This bool determines whether or not the rule is applied based on elapsed_secs
        # or steps. If use_seconds==false, the early stopping decision is made according
        # to the predicted objective values according to the target steps. If
        # use_seconds==true, elapsed_secs is used instead of steps. Also, in this case,
        # the parameters max_num_steps and min_num_steps are overloaded to contain
        # max_elapsed_seconds and min_elapsed_seconds.
        # Corresponds to the JSON property `useSeconds`
        # @return [Boolean]
        attr_accessor :use_seconds
        alias_method :use_seconds?, :use_seconds
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @autoregressive_order = args[:autoregressive_order] if args.key?(:autoregressive_order)
          @learning_rate_parameter_name = args[:learning_rate_parameter_name] if args.key?(:learning_rate_parameter_name)
          @max_num_steps = args[:max_num_steps] if args.key?(:max_num_steps)
          @min_num_steps = args[:min_num_steps] if args.key?(:min_num_steps)
          @use_seconds = args[:use_seconds] if args.key?(:use_seconds)
        end
      end
      
      # The decay curve automated stopping rule builds a Gaussian Process Regressor to
      # predict the final objective value of a Trial based on the already completed
      # Trials and the intermediate measurements of the current Trial. Early stopping
      # is requested for the current Trial if there is very low probability to exceed
      # the optimal value found so far.
      class GoogleCloudAiplatformV1beta1StudySpecDecayCurveAutomatedStoppingSpec
        include Google::Apis::Core::Hashable
      
        # True if Measurement.elapsed_duration is used as the x-axis of each Trials
        # Decay Curve. Otherwise, Measurement.step_count will be used as the x-axis.
        # Corresponds to the JSON property `useElapsedDuration`
        # @return [Boolean]
        attr_accessor :use_elapsed_duration
        alias_method :use_elapsed_duration?, :use_elapsed_duration
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @use_elapsed_duration = args[:use_elapsed_duration] if args.key?(:use_elapsed_duration)
        end
      end
      
      # The median automated stopping rule stops a pending Trial if the Trial's best
      # objective_value is strictly below the median 'performance' of all completed
      # Trials reported up to the Trial's last measurement. Currently, 'performance'
      # refers to the running average of the objective values reported by the Trial in
      # each measurement.
      class GoogleCloudAiplatformV1beta1StudySpecMedianAutomatedStoppingSpec
        include Google::Apis::Core::Hashable
      
        # True if median automated stopping rule applies on Measurement.elapsed_duration.
        # It means that elapsed_duration field of latest measurement of current Trial
        # is used to compute median objective value for each completed Trials.
        # Corresponds to the JSON property `useElapsedDuration`
        # @return [Boolean]
        attr_accessor :use_elapsed_duration
        alias_method :use_elapsed_duration?, :use_elapsed_duration
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @use_elapsed_duration = args[:use_elapsed_duration] if args.key?(:use_elapsed_duration)
        end
      end
      
      # Represents a metric to optimize.
      class GoogleCloudAiplatformV1beta1StudySpecMetricSpec
        include Google::Apis::Core::Hashable
      
        # Required. The optimization goal of the metric.
        # Corresponds to the JSON property `goal`
        # @return [String]
        attr_accessor :goal
      
        # Required. The ID of the metric. Must not contain whitespaces and must be
        # unique amongst all MetricSpecs.
        # Corresponds to the JSON property `metricId`
        # @return [String]
        attr_accessor :metric_id
      
        # Used in safe optimization to specify threshold levels and risk tolerance.
        # Corresponds to the JSON property `safetyConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StudySpecMetricSpecSafetyMetricConfig]
        attr_accessor :safety_config
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @goal = args[:goal] if args.key?(:goal)
          @metric_id = args[:metric_id] if args.key?(:metric_id)
          @safety_config = args[:safety_config] if args.key?(:safety_config)
        end
      end
      
      # Used in safe optimization to specify threshold levels and risk tolerance.
      class GoogleCloudAiplatformV1beta1StudySpecMetricSpecSafetyMetricConfig
        include Google::Apis::Core::Hashable
      
        # Desired minimum fraction of safe trials (over total number of trials) that
        # should be targeted by the algorithm at any time during the study (best effort).
        # This should be between 0.0 and 1.0 and a value of 0.0 means that there is no
        # minimum and an algorithm proceeds without targeting any specific fraction. A
        # value of 1.0 means that the algorithm attempts to only Suggest safe Trials.
        # Corresponds to the JSON property `desiredMinSafeTrialsFraction`
        # @return [Float]
        attr_accessor :desired_min_safe_trials_fraction
      
        # Safety threshold (boundary value between safe and unsafe). NOTE that if you
        # leave SafetyMetricConfig unset, a default value of 0 will be used.
        # Corresponds to the JSON property `safetyThreshold`
        # @return [Float]
        attr_accessor :safety_threshold
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @desired_min_safe_trials_fraction = args[:desired_min_safe_trials_fraction] if args.key?(:desired_min_safe_trials_fraction)
          @safety_threshold = args[:safety_threshold] if args.key?(:safety_threshold)
        end
      end
      
      # Represents a single parameter to optimize.
      class GoogleCloudAiplatformV1beta1StudySpecParameterSpec
        include Google::Apis::Core::Hashable
      
        # Value specification for a parameter in `CATEGORICAL` type.
        # Corresponds to the JSON property `categoricalValueSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StudySpecParameterSpecCategoricalValueSpec]
        attr_accessor :categorical_value_spec
      
        # A conditional parameter node is active if the parameter's value matches the
        # conditional node's parent_value_condition. If two items in
        # conditional_parameter_specs have the same name, they must have disjoint
        # parent_value_condition.
        # Corresponds to the JSON property `conditionalParameterSpecs`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpec>]
        attr_accessor :conditional_parameter_specs
      
        # Value specification for a parameter in `DISCRETE` type.
        # Corresponds to the JSON property `discreteValueSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StudySpecParameterSpecDiscreteValueSpec]
        attr_accessor :discrete_value_spec
      
        # Value specification for a parameter in `DOUBLE` type.
        # Corresponds to the JSON property `doubleValueSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StudySpecParameterSpecDoubleValueSpec]
        attr_accessor :double_value_spec
      
        # Value specification for a parameter in `INTEGER` type.
        # Corresponds to the JSON property `integerValueSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StudySpecParameterSpecIntegerValueSpec]
        attr_accessor :integer_value_spec
      
        # Required. The ID of the parameter. Must not contain whitespaces and must be
        # unique amongst all ParameterSpecs.
        # Corresponds to the JSON property `parameterId`
        # @return [String]
        attr_accessor :parameter_id
      
        # How the parameter should be scaled. Leave unset for `CATEGORICAL` parameters.
        # Corresponds to the JSON property `scaleType`
        # @return [String]
        attr_accessor :scale_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @categorical_value_spec = args[:categorical_value_spec] if args.key?(:categorical_value_spec)
          @conditional_parameter_specs = args[:conditional_parameter_specs] if args.key?(:conditional_parameter_specs)
          @discrete_value_spec = args[:discrete_value_spec] if args.key?(:discrete_value_spec)
          @double_value_spec = args[:double_value_spec] if args.key?(:double_value_spec)
          @integer_value_spec = args[:integer_value_spec] if args.key?(:integer_value_spec)
          @parameter_id = args[:parameter_id] if args.key?(:parameter_id)
          @scale_type = args[:scale_type] if args.key?(:scale_type)
        end
      end
      
      # Value specification for a parameter in `CATEGORICAL` type.
      class GoogleCloudAiplatformV1beta1StudySpecParameterSpecCategoricalValueSpec
        include Google::Apis::Core::Hashable
      
        # A default value for a `CATEGORICAL` parameter that is assumed to be a
        # relatively good starting point. Unset value signals that there is no offered
        # starting point. Currently only supported by the Vertex AI Vizier service. Not
        # supported by HyperparameterTuningJob or TrainingPipeline.
        # Corresponds to the JSON property `defaultValue`
        # @return [String]
        attr_accessor :default_value
      
        # Required. The list of possible categories.
        # Corresponds to the JSON property `values`
        # @return [Array<String>]
        attr_accessor :values
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @default_value = args[:default_value] if args.key?(:default_value)
          @values = args[:values] if args.key?(:values)
        end
      end
      
      # Represents a parameter spec with condition from its parent parameter.
      class GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpec
        include Google::Apis::Core::Hashable
      
        # Represents a single parameter to optimize.
        # Corresponds to the JSON property `parameterSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StudySpecParameterSpec]
        attr_accessor :parameter_spec
      
        # Represents the spec to match categorical values from parent parameter.
        # Corresponds to the JSON property `parentCategoricalValues`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition]
        attr_accessor :parent_categorical_values
      
        # Represents the spec to match discrete values from parent parameter.
        # Corresponds to the JSON property `parentDiscreteValues`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition]
        attr_accessor :parent_discrete_values
      
        # Represents the spec to match integer values from parent parameter.
        # Corresponds to the JSON property `parentIntValues`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecIntValueCondition]
        attr_accessor :parent_int_values
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @parameter_spec = args[:parameter_spec] if args.key?(:parameter_spec)
          @parent_categorical_values = args[:parent_categorical_values] if args.key?(:parent_categorical_values)
          @parent_discrete_values = args[:parent_discrete_values] if args.key?(:parent_discrete_values)
          @parent_int_values = args[:parent_int_values] if args.key?(:parent_int_values)
        end
      end
      
      # Represents the spec to match categorical values from parent parameter.
      class GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecCategoricalValueCondition
        include Google::Apis::Core::Hashable
      
        # Required. Matches values of the parent parameter of 'CATEGORICAL' type. All
        # values must exist in `categorical_value_spec` of parent parameter.
        # Corresponds to the JSON property `values`
        # @return [Array<String>]
        attr_accessor :values
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @values = args[:values] if args.key?(:values)
        end
      end
      
      # Represents the spec to match discrete values from parent parameter.
      class GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecDiscreteValueCondition
        include Google::Apis::Core::Hashable
      
        # Required. Matches values of the parent parameter of 'DISCRETE' type. All
        # values must exist in `discrete_value_spec` of parent parameter. The Epsilon of
        # the value matching is 1e-10.
        # Corresponds to the JSON property `values`
        # @return [Array<Float>]
        attr_accessor :values
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @values = args[:values] if args.key?(:values)
        end
      end
      
      # Represents the spec to match integer values from parent parameter.
      class GoogleCloudAiplatformV1beta1StudySpecParameterSpecConditionalParameterSpecIntValueCondition
        include Google::Apis::Core::Hashable
      
        # Required. Matches values of the parent parameter of 'INTEGER' type. All values
        # must lie in `integer_value_spec` of parent parameter.
        # Corresponds to the JSON property `values`
        # @return [Array<Fixnum>]
        attr_accessor :values
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @values = args[:values] if args.key?(:values)
        end
      end
      
      # Value specification for a parameter in `DISCRETE` type.
      class GoogleCloudAiplatformV1beta1StudySpecParameterSpecDiscreteValueSpec
        include Google::Apis::Core::Hashable
      
        # A default value for a `DISCRETE` parameter that is assumed to be a relatively
        # good starting point. Unset value signals that there is no offered starting
        # point. It automatically rounds to the nearest feasible discrete point.
        # Currently only supported by the Vertex AI Vizier service. Not supported by
        # HyperparameterTuningJob or TrainingPipeline.
        # Corresponds to the JSON property `defaultValue`
        # @return [Float]
        attr_accessor :default_value
      
        # Required. A list of possible values. The list should be in increasing order
        # and at least 1e-10 apart. For instance, this parameter might have possible
        # settings of 1.5, 2.5, and 4.0. This list should not contain more than 1,000
        # values.
        # Corresponds to the JSON property `values`
        # @return [Array<Float>]
        attr_accessor :values
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @default_value = args[:default_value] if args.key?(:default_value)
          @values = args[:values] if args.key?(:values)
        end
      end
      
      # Value specification for a parameter in `DOUBLE` type.
      class GoogleCloudAiplatformV1beta1StudySpecParameterSpecDoubleValueSpec
        include Google::Apis::Core::Hashable
      
        # A default value for a `DOUBLE` parameter that is assumed to be a relatively
        # good starting point. Unset value signals that there is no offered starting
        # point. Currently only supported by the Vertex AI Vizier service. Not supported
        # by HyperparameterTuningJob or TrainingPipeline.
        # Corresponds to the JSON property `defaultValue`
        # @return [Float]
        attr_accessor :default_value
      
        # Required. Inclusive maximum value of the parameter.
        # Corresponds to the JSON property `maxValue`
        # @return [Float]
        attr_accessor :max_value
      
        # Required. Inclusive minimum value of the parameter.
        # Corresponds to the JSON property `minValue`
        # @return [Float]
        attr_accessor :min_value
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @default_value = args[:default_value] if args.key?(:default_value)
          @max_value = args[:max_value] if args.key?(:max_value)
          @min_value = args[:min_value] if args.key?(:min_value)
        end
      end
      
      # Value specification for a parameter in `INTEGER` type.
      class GoogleCloudAiplatformV1beta1StudySpecParameterSpecIntegerValueSpec
        include Google::Apis::Core::Hashable
      
        # A default value for an `INTEGER` parameter that is assumed to be a relatively
        # good starting point. Unset value signals that there is no offered starting
        # point. Currently only supported by the Vertex AI Vizier service. Not supported
        # by HyperparameterTuningJob or TrainingPipeline.
        # Corresponds to the JSON property `defaultValue`
        # @return [Fixnum]
        attr_accessor :default_value
      
        # Required. Inclusive maximum value of the parameter.
        # Corresponds to the JSON property `maxValue`
        # @return [Fixnum]
        attr_accessor :max_value
      
        # Required. Inclusive minimum value of the parameter.
        # Corresponds to the JSON property `minValue`
        # @return [Fixnum]
        attr_accessor :min_value
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @default_value = args[:default_value] if args.key?(:default_value)
          @max_value = args[:max_value] if args.key?(:max_value)
          @min_value = args[:min_value] if args.key?(:min_value)
        end
      end
      
      # This contains flag for manually disabling transfer learning for a study. The
      # names of prior studies being used for transfer learning (if any) are also
      # listed here.
      class GoogleCloudAiplatformV1beta1StudySpecTransferLearningConfig
        include Google::Apis::Core::Hashable
      
        # Flag to to manually prevent vizier from using transfer learning on a new study.
        # Otherwise, vizier will automatically determine whether or not to use transfer
        # learning.
        # Corresponds to the JSON property `disableTransferLearning`
        # @return [Boolean]
        attr_accessor :disable_transfer_learning
        alias_method :disable_transfer_learning?, :disable_transfer_learning
      
        # Output only. Names of previously completed studies
        # Corresponds to the JSON property `priorStudyNames`
        # @return [Array<String>]
        attr_accessor :prior_study_names
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @disable_transfer_learning = args[:disable_transfer_learning] if args.key?(:disable_transfer_learning)
          @prior_study_names = args[:prior_study_names] if args.key?(:prior_study_names)
        end
      end
      
      # Details of operations that perform Trials suggestion.
      class GoogleCloudAiplatformV1beta1SuggestTrialsMetadata
        include Google::Apis::Core::Hashable
      
        # The identifier of the client that is requesting the suggestion. If multiple
        # SuggestTrialsRequests have the same `client_id`, the service will return the
        # identical suggested Trial if the Trial is pending, and provide a new Trial if
        # the last suggested Trial was completed.
        # Corresponds to the JSON property `clientId`
        # @return [String]
        attr_accessor :client_id
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @client_id = args[:client_id] if args.key?(:client_id)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for VizierService.SuggestTrials.
      class GoogleCloudAiplatformV1beta1SuggestTrialsRequest
        include Google::Apis::Core::Hashable
      
        # Required. The identifier of the client that is requesting the suggestion. If
        # multiple SuggestTrialsRequests have the same `client_id`, the service will
        # return the identical suggested Trial if the Trial is pending, and provide a
        # new Trial if the last suggested Trial was completed.
        # Corresponds to the JSON property `clientId`
        # @return [String]
        attr_accessor :client_id
      
        # Optional. This allows you to specify the "context" for a Trial; a context is a
        # slice (a subspace) of the search space. Typical uses for contexts: 1) You are
        # using Vizier to tune a server for best performance, but there's a strong
        # weekly cycle. The context specifies the day-of-week. This allows Tuesday to
        # generalize from Wednesday without assuming that everything is identical. 2)
        # Imagine you're optimizing some medical treatment for people. As they walk in
        # the door, you know certain facts about them (e.g. sex, weight, height, blood-
        # pressure). Put that information in the context, and Vizier will adapt its
        # suggestions to the patient. 3) You want to do a fair A/B test efficiently.
        # Specify the "A" and "B" conditions as contexts, and Vizier will generalize
        # between "A" and "B" conditions. If they are similar, this will allow Vizier to
        # converge to the optimum faster than if "A" and "B" were separate Studies. NOTE:
        # You can also enter contexts as REQUESTED Trials, e.g. via the CreateTrial()
        # RPC; that's the asynchronous option where you don't need a close association
        # between contexts and suggestions. NOTE: All the Parameters you set in a
        # context MUST be defined in the Study. NOTE: You must supply 0 or $
        # suggestion_count contexts. If you don't supply any contexts, Vizier will make
        # suggestions from the full search space specified in the StudySpec; if you
        # supply a full set of context, each suggestion will match the corresponding
        # context. NOTE: A Context with no features set matches anything, and allows
        # suggestions from the full search space. NOTE: Contexts MUST lie within the
        # search space specified in the StudySpec. It's an error if they don't. NOTE:
        # Contexts preferentially match ACTIVE then REQUESTED trials before new
        # suggestions are generated. NOTE: Generation of suggestions involves a match
        # between a Context and (optionally) a REQUESTED trial; if that match is not
        # fully specified, a suggestion will be geneated in the merged subspace.
        # Corresponds to the JSON property `contexts`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TrialContext>]
        attr_accessor :contexts
      
        # Required. The number of suggestions requested. It must be positive.
        # Corresponds to the JSON property `suggestionCount`
        # @return [Fixnum]
        attr_accessor :suggestion_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @client_id = args[:client_id] if args.key?(:client_id)
          @contexts = args[:contexts] if args.key?(:contexts)
          @suggestion_count = args[:suggestion_count] if args.key?(:suggestion_count)
        end
      end
      
      # Response message for VizierService.SuggestTrials.
      class GoogleCloudAiplatformV1beta1SuggestTrialsResponse
        include Google::Apis::Core::Hashable
      
        # The time at which operation processing completed.
        # Corresponds to the JSON property `endTime`
        # @return [String]
        attr_accessor :end_time
      
        # The time at which the operation was started.
        # Corresponds to the JSON property `startTime`
        # @return [String]
        attr_accessor :start_time
      
        # The state of the Study.
        # Corresponds to the JSON property `studyState`
        # @return [String]
        attr_accessor :study_state
      
        # A list of Trials.
        # Corresponds to the JSON property `trials`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Trial>]
        attr_accessor :trials
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @end_time = args[:end_time] if args.key?(:end_time)
          @start_time = args[:start_time] if args.key?(:start_time)
          @study_state = args[:study_state] if args.key?(:study_state)
          @trials = args[:trials] if args.key?(:trials)
        end
      end
      
      # Request message for FeatureOnlineStoreAdminService.SyncFeatureView.
      class GoogleCloudAiplatformV1beta1SyncFeatureViewRequest
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Respose message for FeatureOnlineStoreAdminService.SyncFeatureView.
      class GoogleCloudAiplatformV1beta1SyncFeatureViewResponse
        include Google::Apis::Core::Hashable
      
        # Format: `projects/`project`/locations/`location`/featureOnlineStores/`
        # feature_online_store`/featureViews/`feature_view`/featureViewSyncs/`
        # feature_view_sync``
        # Corresponds to the JSON property `featureViewSync`
        # @return [String]
        attr_accessor :feature_view_sync
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @feature_view_sync = args[:feature_view_sync] if args.key?(:feature_view_sync)
        end
      end
      
      # The storage details for TFRecord output content.
      class GoogleCloudAiplatformV1beta1TfRecordDestination
        include Google::Apis::Core::Hashable
      
        # The Google Cloud Storage location where the output is to be written to.
        # Corresponds to the JSON property `gcsDestination`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GcsDestination]
        attr_accessor :gcs_destination
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @gcs_destination = args[:gcs_destination] if args.key?(:gcs_destination)
        end
      end
      
      # A tensor value type.
      class GoogleCloudAiplatformV1beta1Tensor
        include Google::Apis::Core::Hashable
      
        # Type specific representations that make it easy to create tensor protos in all
        # languages. Only the representation corresponding to "dtype" can be set. The
        # values hold the flattened representation of the tensor in row major order.
        # BOOL
        # Corresponds to the JSON property `boolVal`
        # @return [Array<Boolean>]
        attr_accessor :bool_val
      
        # STRING
        # Corresponds to the JSON property `bytesVal`
        # @return [Array<String>]
        attr_accessor :bytes_val
      
        # DOUBLE
        # Corresponds to the JSON property `doubleVal`
        # @return [Array<Float>]
        attr_accessor :double_val
      
        # The data type of tensor.
        # Corresponds to the JSON property `dtype`
        # @return [String]
        attr_accessor :dtype
      
        # FLOAT
        # Corresponds to the JSON property `floatVal`
        # @return [Array<Float>]
        attr_accessor :float_val
      
        # INT64
        # Corresponds to the JSON property `int64Val`
        # @return [Array<Fixnum>]
        attr_accessor :int64_val
      
        # INT_8 INT_16 INT_32
        # Corresponds to the JSON property `intVal`
        # @return [Array<Fixnum>]
        attr_accessor :int_val
      
        # A list of tensor values.
        # Corresponds to the JSON property `listVal`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Tensor>]
        attr_accessor :list_val
      
        # Shape of the tensor.
        # Corresponds to the JSON property `shape`
        # @return [Array<Fixnum>]
        attr_accessor :shape
      
        # STRING
        # Corresponds to the JSON property `stringVal`
        # @return [Array<String>]
        attr_accessor :string_val
      
        # A map of string to tensor.
        # Corresponds to the JSON property `structVal`
        # @return [Hash<String,Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Tensor>]
        attr_accessor :struct_val
      
        # Serialized raw tensor content.
        # Corresponds to the JSON property `tensorVal`
        # NOTE: Values are automatically base64 encoded/decoded in the client library.
        # @return [String]
        attr_accessor :tensor_val
      
        # UINT64
        # Corresponds to the JSON property `uint64Val`
        # @return [Array<Fixnum>]
        attr_accessor :uint64_val
      
        # UINT8 UINT16 UINT32
        # Corresponds to the JSON property `uintVal`
        # @return [Array<Fixnum>]
        attr_accessor :uint_val
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bool_val = args[:bool_val] if args.key?(:bool_val)
          @bytes_val = args[:bytes_val] if args.key?(:bytes_val)
          @double_val = args[:double_val] if args.key?(:double_val)
          @dtype = args[:dtype] if args.key?(:dtype)
          @float_val = args[:float_val] if args.key?(:float_val)
          @int64_val = args[:int64_val] if args.key?(:int64_val)
          @int_val = args[:int_val] if args.key?(:int_val)
          @list_val = args[:list_val] if args.key?(:list_val)
          @shape = args[:shape] if args.key?(:shape)
          @string_val = args[:string_val] if args.key?(:string_val)
          @struct_val = args[:struct_val] if args.key?(:struct_val)
          @tensor_val = args[:tensor_val] if args.key?(:tensor_val)
          @uint64_val = args[:uint64_val] if args.key?(:uint64_val)
          @uint_val = args[:uint_val] if args.key?(:uint_val)
        end
      end
      
      # Tensorboard is a physical database that stores users' training metrics. A
      # default Tensorboard is provided in each region of a Google Cloud project. If
      # needed users can also create extra Tensorboards in their projects.
      class GoogleCloudAiplatformV1beta1Tensorboard
        include Google::Apis::Core::Hashable
      
        # Output only. Consumer project Cloud Storage path prefix used to store blob
        # data, which can either be a bucket or directory. Does not end with a '/'.
        # Corresponds to the JSON property `blobStoragePathPrefix`
        # @return [String]
        attr_accessor :blob_storage_path_prefix
      
        # Output only. Timestamp when this Tensorboard was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Description of this Tensorboard.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor :description
      
        # Required. User provided name of this Tensorboard.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Represents a customer-managed encryption key spec that can be applied to a top-
        # level resource.
        # Corresponds to the JSON property `encryptionSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EncryptionSpec]
        attr_accessor :encryption_spec
      
        # Used to perform a consistent read-modify-write updates. If not set, a blind "
        # overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # Used to indicate if the TensorBoard instance is the default one. Each project &
        # region can have at most one default TensorBoard instance. Creation of a
        # default TensorBoard instance and updating an existing TensorBoard instance to
        # be default will mark all other TensorBoard instances (if any) as non default.
        # Corresponds to the JSON property `isDefault`
        # @return [Boolean]
        attr_accessor :is_default
        alias_method :is_default?, :is_default
      
        # The labels with user-defined metadata to organize your Tensorboards. Label
        # keys and values can be no longer than 64 characters (Unicode codepoints), can
        # only contain lowercase letters, numeric characters, underscores and dashes.
        # International characters are allowed. No more than 64 user labels can be
        # associated with one Tensorboard (System labels are excluded). See https://goo.
        # gl/xmQnxf for more information and examples of labels. System reserved label
        # keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Output only. Name of the Tensorboard. Format: `projects/`project`/locations/`
        # location`/tensorboards/`tensorboard``
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Output only. The number of Runs stored in this Tensorboard.
        # Corresponds to the JSON property `runCount`
        # @return [Fixnum]
        attr_accessor :run_count
      
        # Output only. Timestamp when this Tensorboard was last updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @blob_storage_path_prefix = args[:blob_storage_path_prefix] if args.key?(:blob_storage_path_prefix)
          @create_time = args[:create_time] if args.key?(:create_time)
          @description = args[:description] if args.key?(:description)
          @display_name = args[:display_name] if args.key?(:display_name)
          @encryption_spec = args[:encryption_spec] if args.key?(:encryption_spec)
          @etag = args[:etag] if args.key?(:etag)
          @is_default = args[:is_default] if args.key?(:is_default)
          @labels = args[:labels] if args.key?(:labels)
          @name = args[:name] if args.key?(:name)
          @run_count = args[:run_count] if args.key?(:run_count)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # One blob (e.g, image, graph) viewable on a blob metric plot.
      class GoogleCloudAiplatformV1beta1TensorboardBlob
        include Google::Apis::Core::Hashable
      
        # Optional. The bytes of the blob is not present unless it's returned by the
        # ReadTensorboardBlobData endpoint.
        # Corresponds to the JSON property `data`
        # NOTE: Values are automatically base64 encoded/decoded in the client library.
        # @return [String]
        attr_accessor :data
      
        # Output only. A URI safe key uniquely identifying a blob. Can be used to locate
        # the blob stored in the Cloud Storage bucket of the consumer project.
        # Corresponds to the JSON property `id`
        # @return [String]
        attr_accessor :id
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @data = args[:data] if args.key?(:data)
          @id = args[:id] if args.key?(:id)
        end
      end
      
      # One point viewable on a blob metric plot, but mostly just a wrapper message to
      # work around repeated fields can't be used directly within `oneof` fields.
      class GoogleCloudAiplatformV1beta1TensorboardBlobSequence
        include Google::Apis::Core::Hashable
      
        # List of blobs contained within the sequence.
        # Corresponds to the JSON property `values`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TensorboardBlob>]
        attr_accessor :values
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @values = args[:values] if args.key?(:values)
        end
      end
      
      # A TensorboardExperiment is a group of TensorboardRuns, that are typically the
      # results of a training job run, in a Tensorboard.
      class GoogleCloudAiplatformV1beta1TensorboardExperiment
        include Google::Apis::Core::Hashable
      
        # Output only. Timestamp when this TensorboardExperiment was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Description of this TensorboardExperiment.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor :description
      
        # User provided name of this TensorboardExperiment.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Used to perform consistent read-modify-write updates. If not set, a blind "
        # overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # The labels with user-defined metadata to organize your TensorboardExperiment.
        # Label keys and values cannot be longer than 64 characters (Unicode codepoints),
        # can only contain lowercase letters, numeric characters, underscores and
        # dashes. International characters are allowed. No more than 64 user labels can
        # be associated with one Dataset (System labels are excluded). See https://goo.
        # gl/xmQnxf for more information and examples of labels. System reserved label
        # keys are prefixed with `aiplatform.googleapis.com/` and are immutable. The
        # following system labels exist for each Dataset: * `aiplatform.googleapis.com/
        # dataset_metadata_schema`: output only. Its value is the metadata_schema's
        # title.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Output only. Name of the TensorboardExperiment. Format: `projects/`project`/
        # locations/`location`/tensorboards/`tensorboard`/experiments/`experiment``
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Immutable. Source of the TensorboardExperiment. Example: a custom training job.
        # Corresponds to the JSON property `source`
        # @return [String]
        attr_accessor :source
      
        # Output only. Timestamp when this TensorboardExperiment was last updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @description = args[:description] if args.key?(:description)
          @display_name = args[:display_name] if args.key?(:display_name)
          @etag = args[:etag] if args.key?(:etag)
          @labels = args[:labels] if args.key?(:labels)
          @name = args[:name] if args.key?(:name)
          @source = args[:source] if args.key?(:source)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # TensorboardRun maps to a specific execution of a training job with a given set
      # of hyperparameter values, model definition, dataset, etc
      class GoogleCloudAiplatformV1beta1TensorboardRun
        include Google::Apis::Core::Hashable
      
        # Output only. Timestamp when this TensorboardRun was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Description of this TensorboardRun.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor :description
      
        # Required. User provided name of this TensorboardRun. This value must be unique
        # among all TensorboardRuns belonging to the same parent TensorboardExperiment.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Used to perform a consistent read-modify-write updates. If not set, a blind "
        # overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # The labels with user-defined metadata to organize your TensorboardRuns. This
        # field will be used to filter and visualize Runs in the Tensorboard UI. For
        # example, a Vertex AI training job can set a label aiplatform.googleapis.com/
        # training_job_id=xxxxx to all the runs created within that job. An end user can
        # set a label experiment_id=xxxxx for all the runs produced in a Jupyter
        # notebook. These runs can be grouped by a label value and visualized together
        # in the Tensorboard UI. Label keys and values can be no longer than 64
        # characters (Unicode codepoints), can only contain lowercase letters, numeric
        # characters, underscores and dashes. International characters are allowed. No
        # more than 64 user labels can be associated with one TensorboardRun (System
        # labels are excluded). See https://goo.gl/xmQnxf for more information and
        # examples of labels. System reserved label keys are prefixed with "aiplatform.
        # googleapis.com/" and are immutable.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Output only. Name of the TensorboardRun. Format: `projects/`project`/locations/
        # `location`/tensorboards/`tensorboard`/experiments/`experiment`/runs/`run``
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Output only. Timestamp when this TensorboardRun was last updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @description = args[:description] if args.key?(:description)
          @display_name = args[:display_name] if args.key?(:display_name)
          @etag = args[:etag] if args.key?(:etag)
          @labels = args[:labels] if args.key?(:labels)
          @name = args[:name] if args.key?(:name)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # One point viewable on a tensor metric plot.
      class GoogleCloudAiplatformV1beta1TensorboardTensor
        include Google::Apis::Core::Hashable
      
        # Required. Serialized form of https://github.com/tensorflow/tensorflow/blob/
        # master/tensorflow/core/framework/tensor.proto
        # Corresponds to the JSON property `value`
        # NOTE: Values are automatically base64 encoded/decoded in the client library.
        # @return [String]
        attr_accessor :value
      
        # Optional. Version number of TensorProto used to serialize value.
        # Corresponds to the JSON property `versionNumber`
        # @return [Fixnum]
        attr_accessor :version_number
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @value = args[:value] if args.key?(:value)
          @version_number = args[:version_number] if args.key?(:version_number)
        end
      end
      
      # TensorboardTimeSeries maps to times series produced in training runs
      class GoogleCloudAiplatformV1beta1TensorboardTimeSeries
        include Google::Apis::Core::Hashable
      
        # Output only. Timestamp when this TensorboardTimeSeries was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Description of this TensorboardTimeSeries.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor :description
      
        # Required. User provided name of this TensorboardTimeSeries. This value should
        # be unique among all TensorboardTimeSeries resources belonging to the same
        # TensorboardRun resource (parent resource).
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Used to perform a consistent read-modify-write updates. If not set, a blind "
        # overwrite" update happens.
        # Corresponds to the JSON property `etag`
        # @return [String]
        attr_accessor :etag
      
        # Describes metadata for a TensorboardTimeSeries.
        # Corresponds to the JSON property `metadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata]
        attr_accessor :metadata
      
        # Output only. Name of the TensorboardTimeSeries.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Data of the current plugin, with the size limited to 65KB.
        # Corresponds to the JSON property `pluginData`
        # NOTE: Values are automatically base64 encoded/decoded in the client library.
        # @return [String]
        attr_accessor :plugin_data
      
        # Immutable. Name of the plugin this time series pertain to. Such as Scalar,
        # Tensor, Blob
        # Corresponds to the JSON property `pluginName`
        # @return [String]
        attr_accessor :plugin_name
      
        # Output only. Timestamp when this TensorboardTimeSeries was last updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        # Required. Immutable. Type of TensorboardTimeSeries value.
        # Corresponds to the JSON property `valueType`
        # @return [String]
        attr_accessor :value_type
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @description = args[:description] if args.key?(:description)
          @display_name = args[:display_name] if args.key?(:display_name)
          @etag = args[:etag] if args.key?(:etag)
          @metadata = args[:metadata] if args.key?(:metadata)
          @name = args[:name] if args.key?(:name)
          @plugin_data = args[:plugin_data] if args.key?(:plugin_data)
          @plugin_name = args[:plugin_name] if args.key?(:plugin_name)
          @update_time = args[:update_time] if args.key?(:update_time)
          @value_type = args[:value_type] if args.key?(:value_type)
        end
      end
      
      # Describes metadata for a TensorboardTimeSeries.
      class GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata
        include Google::Apis::Core::Hashable
      
        # Output only. The largest blob sequence length (number of blobs) of all data
        # points in this time series, if its ValueType is BLOB_SEQUENCE.
        # Corresponds to the JSON property `maxBlobSequenceLength`
        # @return [Fixnum]
        attr_accessor :max_blob_sequence_length
      
        # Output only. Max step index of all data points within a TensorboardTimeSeries.
        # Corresponds to the JSON property `maxStep`
        # @return [Fixnum]
        attr_accessor :max_step
      
        # Output only. Max wall clock timestamp of all data points within a
        # TensorboardTimeSeries.
        # Corresponds to the JSON property `maxWallTime`
        # @return [String]
        attr_accessor :max_wall_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @max_blob_sequence_length = args[:max_blob_sequence_length] if args.key?(:max_blob_sequence_length)
          @max_step = args[:max_step] if args.key?(:max_step)
          @max_wall_time = args[:max_wall_time] if args.key?(:max_wall_time)
        end
      end
      
      # The config for feature monitoring threshold.
      class GoogleCloudAiplatformV1beta1ThresholdConfig
        include Google::Apis::Core::Hashable
      
        # Specify a threshold value that can trigger the alert. If this threshold config
        # is for feature distribution distance: 1. For categorical feature, the
        # distribution distance is calculated by L-inifinity norm. 2. For numerical
        # feature, the distribution distance is calculated by Jensen–Shannon divergence.
        # Each feature must have a non-zero threshold if they need to be monitored.
        # Otherwise no alert will be triggered for that feature.
        # Corresponds to the JSON property `value`
        # @return [Float]
        attr_accessor :value
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @value = args[:value] if args.key?(:value)
        end
      end
      
      # All the data stored in a TensorboardTimeSeries.
      class GoogleCloudAiplatformV1beta1TimeSeriesData
        include Google::Apis::Core::Hashable
      
        # Required. The ID of the TensorboardTimeSeries, which will become the final
        # component of the TensorboardTimeSeries' resource name
        # Corresponds to the JSON property `tensorboardTimeSeriesId`
        # @return [String]
        attr_accessor :tensorboard_time_series_id
      
        # Required. Immutable. The value type of this time series. All the values in
        # this time series data must match this value type.
        # Corresponds to the JSON property `valueType`
        # @return [String]
        attr_accessor :value_type
      
        # Required. Data points in this time series.
        # Corresponds to the JSON property `values`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TimeSeriesDataPoint>]
        attr_accessor :values
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @tensorboard_time_series_id = args[:tensorboard_time_series_id] if args.key?(:tensorboard_time_series_id)
          @value_type = args[:value_type] if args.key?(:value_type)
          @values = args[:values] if args.key?(:values)
        end
      end
      
      # A TensorboardTimeSeries data point.
      class GoogleCloudAiplatformV1beta1TimeSeriesDataPoint
        include Google::Apis::Core::Hashable
      
        # One point viewable on a blob metric plot, but mostly just a wrapper message to
        # work around repeated fields can't be used directly within `oneof` fields.
        # Corresponds to the JSON property `blobs`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TensorboardBlobSequence]
        attr_accessor :blobs
      
        # One point viewable on a scalar metric plot.
        # Corresponds to the JSON property `scalar`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Scalar]
        attr_accessor :scalar
      
        # Step index of this data point within the run.
        # Corresponds to the JSON property `step`
        # @return [Fixnum]
        attr_accessor :step
      
        # One point viewable on a tensor metric plot.
        # Corresponds to the JSON property `tensor`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TensorboardTensor]
        attr_accessor :tensor
      
        # Wall clock timestamp when this data point is generated by the end user.
        # Corresponds to the JSON property `wallTime`
        # @return [String]
        attr_accessor :wall_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @blobs = args[:blobs] if args.key?(:blobs)
          @scalar = args[:scalar] if args.key?(:scalar)
          @step = args[:step] if args.key?(:step)
          @tensor = args[:tensor] if args.key?(:tensor)
          @wall_time = args[:wall_time] if args.key?(:wall_time)
        end
      end
      
      # Assigns input data to training, validation, and test sets based on a provided
      # timestamps. The youngest data pieces are assigned to training set, next to
      # validation set, and the oldest to the test set. Supported only for tabular
      # Datasets.
      class GoogleCloudAiplatformV1beta1TimestampSplit
        include Google::Apis::Core::Hashable
      
        # Required. The key is a name of one of the Dataset's data columns. The values
        # of the key (the values in the column) must be in RFC 3339 `date-time` format,
        # where `time-offset` = `"Z"` (e.g. 1985-04-12T23:20:50.52Z). If for a piece of
        # data the key is not present or has an invalid value, that piece is ignored by
        # the pipeline.
        # Corresponds to the JSON property `key`
        # @return [String]
        attr_accessor :key
      
        # The fraction of the input data that is to be used to evaluate the Model.
        # Corresponds to the JSON property `testFraction`
        # @return [Float]
        attr_accessor :test_fraction
      
        # The fraction of the input data that is to be used to train the Model.
        # Corresponds to the JSON property `trainingFraction`
        # @return [Float]
        attr_accessor :training_fraction
      
        # The fraction of the input data that is to be used to validate the Model.
        # Corresponds to the JSON property `validationFraction`
        # @return [Float]
        attr_accessor :validation_fraction
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @key = args[:key] if args.key?(:key)
          @test_fraction = args[:test_fraction] if args.key?(:test_fraction)
          @training_fraction = args[:training_fraction] if args.key?(:training_fraction)
          @validation_fraction = args[:validation_fraction] if args.key?(:validation_fraction)
        end
      end
      
      # CMLE training config. For every active learning labeling iteration, system
      # will train a machine learning model on CMLE. The trained model will be used by
      # data sampling algorithm to select DataItems.
      class GoogleCloudAiplatformV1beta1TrainingConfig
        include Google::Apis::Core::Hashable
      
        # The timeout hours for the CMLE training job, expressed in milli hours i.e. 1,
        # 000 value in this field means 1 hour.
        # Corresponds to the JSON property `timeoutTrainingMilliHours`
        # @return [Fixnum]
        attr_accessor :timeout_training_milli_hours
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @timeout_training_milli_hours = args[:timeout_training_milli_hours] if args.key?(:timeout_training_milli_hours)
        end
      end
      
      # The TrainingPipeline orchestrates tasks associated with training a Model. It
      # always executes the training task, and optionally may also export data from
      # Vertex AI's Dataset which becomes the training input, upload the Model to
      # Vertex AI, and evaluate the Model.
      class GoogleCloudAiplatformV1beta1TrainingPipeline
        include Google::Apis::Core::Hashable
      
        # Output only. Time when the TrainingPipeline was created.
        # Corresponds to the JSON property `createTime`
        # @return [String]
        attr_accessor :create_time
      
        # Required. The user-defined name of this TrainingPipeline.
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Represents a customer-managed encryption key spec that can be applied to a top-
        # level resource.
        # Corresponds to the JSON property `encryptionSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1EncryptionSpec]
        attr_accessor :encryption_spec
      
        # Output only. Time when the TrainingPipeline entered any of the following
        # states: `PIPELINE_STATE_SUCCEEDED`, `PIPELINE_STATE_FAILED`, `
        # PIPELINE_STATE_CANCELLED`.
        # Corresponds to the JSON property `endTime`
        # @return [String]
        attr_accessor :end_time
      
        # The `Status` type defines a logical error model that is suitable for different
        # programming environments, including REST APIs and RPC APIs. It is used by [
        # gRPC](https://github.com/grpc). Each `Status` message contains three pieces of
        # data: error code, error message, and error details. You can find out more
        # about this error model and how to work with it in the [API Design Guide](https:
        # //cloud.google.com/apis/design/errors).
        # Corresponds to the JSON property `error`
        # @return [Google::Apis::AiplatformV1beta1::GoogleRpcStatus]
        attr_accessor :error
      
        # Specifies Vertex AI owned input data to be used for training, and possibly
        # evaluating, the Model.
        # Corresponds to the JSON property `inputDataConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1InputDataConfig]
        attr_accessor :input_data_config
      
        # The labels with user-defined metadata to organize TrainingPipelines. Label
        # keys and values can be no longer than 64 characters (Unicode codepoints), can
        # only contain lowercase letters, numeric characters, underscores and dashes.
        # International characters are allowed. See https://goo.gl/xmQnxf for more
        # information and examples of labels.
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # Optional. The ID to use for the uploaded Model, which will become the final
        # component of the model resource name. This value may be up to 63 characters,
        # and valid characters are `[a-z0-9_-]`. The first character cannot be a number
        # or hyphen.
        # Corresponds to the JSON property `modelId`
        # @return [String]
        attr_accessor :model_id
      
        # A trained machine learning Model.
        # Corresponds to the JSON property `modelToUpload`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Model]
        attr_accessor :model_to_upload
      
        # Output only. Resource name of the TrainingPipeline.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Optional. When specify this field, the `model_to_upload` will not be uploaded
        # as a new model, instead, it will become a new version of this `parent_model`.
        # Corresponds to the JSON property `parentModel`
        # @return [String]
        attr_accessor :parent_model
      
        # Output only. Time when the TrainingPipeline for the first time entered the `
        # PIPELINE_STATE_RUNNING` state.
        # Corresponds to the JSON property `startTime`
        # @return [String]
        attr_accessor :start_time
      
        # Output only. The detailed state of the pipeline.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor :state
      
        # Required. A Google Cloud Storage path to the YAML file that defines the
        # training task which is responsible for producing the model artifact, and may
        # also include additional auxiliary work. The definition files that can be used
        # here are found in gs://google-cloud-aiplatform/schema/trainingjob/definition/.
        # Note: The URI given on output will be immutable and probably different,
        # including the URI scheme, than the one given on input. The output URI will
        # point to a location where the user only has a read access.
        # Corresponds to the JSON property `trainingTaskDefinition`
        # @return [String]
        attr_accessor :training_task_definition
      
        # Required. The training task's parameter(s), as specified in the
        # training_task_definition's `inputs`.
        # Corresponds to the JSON property `trainingTaskInputs`
        # @return [Object]
        attr_accessor :training_task_inputs
      
        # Output only. The metadata information as specified in the
        # training_task_definition's `metadata`. This metadata is an auxiliary runtime
        # and final information about the training task. While the pipeline is running
        # this information is populated only at a best effort basis. Only present if the
        # pipeline's training_task_definition contains `metadata` object.
        # Corresponds to the JSON property `trainingTaskMetadata`
        # @return [Object]
        attr_accessor :training_task_metadata
      
        # Output only. Time when the TrainingPipeline was most recently updated.
        # Corresponds to the JSON property `updateTime`
        # @return [String]
        attr_accessor :update_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @create_time = args[:create_time] if args.key?(:create_time)
          @display_name = args[:display_name] if args.key?(:display_name)
          @encryption_spec = args[:encryption_spec] if args.key?(:encryption_spec)
          @end_time = args[:end_time] if args.key?(:end_time)
          @error = args[:error] if args.key?(:error)
          @input_data_config = args[:input_data_config] if args.key?(:input_data_config)
          @labels = args[:labels] if args.key?(:labels)
          @model_id = args[:model_id] if args.key?(:model_id)
          @model_to_upload = args[:model_to_upload] if args.key?(:model_to_upload)
          @name = args[:name] if args.key?(:name)
          @parent_model = args[:parent_model] if args.key?(:parent_model)
          @start_time = args[:start_time] if args.key?(:start_time)
          @state = args[:state] if args.key?(:state)
          @training_task_definition = args[:training_task_definition] if args.key?(:training_task_definition)
          @training_task_inputs = args[:training_task_inputs] if args.key?(:training_task_inputs)
          @training_task_metadata = args[:training_task_metadata] if args.key?(:training_task_metadata)
          @update_time = args[:update_time] if args.key?(:update_time)
        end
      end
      
      # A message representing a Trial. A Trial contains a unique set of Parameters
      # that has been or will be evaluated, along with the objective metrics got by
      # running the Trial.
      class GoogleCloudAiplatformV1beta1Trial
        include Google::Apis::Core::Hashable
      
        # Output only. The identifier of the client that originally requested this Trial.
        # Each client is identified by a unique client_id. When a client asks for a
        # suggestion, Vertex AI Vizier will assign it a Trial. The client should
        # evaluate the Trial, complete it, and report back to Vertex AI Vizier. If
        # suggestion is asked again by same client_id before the Trial is completed, the
        # same Trial will be returned. Multiple clients with different client_ids can
        # ask for suggestions simultaneously, each of them will get their own Trial.
        # Corresponds to the JSON property `clientId`
        # @return [String]
        attr_accessor :client_id
      
        # Output only. The CustomJob name linked to the Trial. It's set for a
        # HyperparameterTuningJob's Trial.
        # Corresponds to the JSON property `customJob`
        # @return [String]
        attr_accessor :custom_job
      
        # Output only. Time when the Trial's status changed to `SUCCEEDED` or `
        # INFEASIBLE`.
        # Corresponds to the JSON property `endTime`
        # @return [String]
        attr_accessor :end_time
      
        # A message representing a Measurement of a Trial. A Measurement contains the
        # Metrics got by executing a Trial using suggested hyperparameter values.
        # Corresponds to the JSON property `finalMeasurement`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Measurement]
        attr_accessor :final_measurement
      
        # Output only. The identifier of the Trial assigned by the service.
        # Corresponds to the JSON property `id`
        # @return [String]
        attr_accessor :id
      
        # Output only. A human readable string describing why the Trial is infeasible.
        # This is set only if Trial state is `INFEASIBLE`.
        # Corresponds to the JSON property `infeasibleReason`
        # @return [String]
        attr_accessor :infeasible_reason
      
        # Output only. A list of measurements that are strictly lexicographically
        # ordered by their induced tuples (steps, elapsed_duration). These are used for
        # early stopping computations.
        # Corresponds to the JSON property `measurements`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Measurement>]
        attr_accessor :measurements
      
        # Output only. Resource name of the Trial assigned by the service.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # Output only. The parameters of the Trial.
        # Corresponds to the JSON property `parameters`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TrialParameter>]
        attr_accessor :parameters
      
        # Output only. Time when the Trial was started.
        # Corresponds to the JSON property `startTime`
        # @return [String]
        attr_accessor :start_time
      
        # Output only. The detailed state of the Trial.
        # Corresponds to the JSON property `state`
        # @return [String]
        attr_accessor :state
      
        # Output only. URIs for accessing [interactive shells](https://cloud.google.com/
        # vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each
        # training node). Only available if this trial is part of a
        # HyperparameterTuningJob and the job's trial_job_spec.enable_web_access field
        # is `true`. The keys are names of each node used for the trial; for example, `
        # workerpool0-0` for the primary node, `workerpool1-0` for the first node in the
        # second worker pool, and `workerpool1-1` for the second node in the second
        # worker pool. The values are the URIs for each node's interactive shell.
        # Corresponds to the JSON property `webAccessUris`
        # @return [Hash<String,String>]
        attr_accessor :web_access_uris
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @client_id = args[:client_id] if args.key?(:client_id)
          @custom_job = args[:custom_job] if args.key?(:custom_job)
          @end_time = args[:end_time] if args.key?(:end_time)
          @final_measurement = args[:final_measurement] if args.key?(:final_measurement)
          @id = args[:id] if args.key?(:id)
          @infeasible_reason = args[:infeasible_reason] if args.key?(:infeasible_reason)
          @measurements = args[:measurements] if args.key?(:measurements)
          @name = args[:name] if args.key?(:name)
          @parameters = args[:parameters] if args.key?(:parameters)
          @start_time = args[:start_time] if args.key?(:start_time)
          @state = args[:state] if args.key?(:state)
          @web_access_uris = args[:web_access_uris] if args.key?(:web_access_uris)
        end
      end
      
      # Next ID: 3
      class GoogleCloudAiplatformV1beta1TrialContext
        include Google::Apis::Core::Hashable
      
        # A human-readable field which can store a description of this context. This
        # will become part of the resulting Trial's description field.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor :description
      
        # If/when a Trial is generated or selected from this Context, its Parameters
        # will match any parameters specified here. (I.e. if this context specifies
        # parameter name:'a' int_value:3, then a resulting Trial will have int_value:3
        # for its parameter named 'a'.) Note that we first attempt to match existing
        # REQUESTED Trials with contexts, and if there are no matches, we generate
        # suggestions in the subspace defined by the parameters specified here. NOTE: a
        # Context without any Parameters matches the entire feasible search space.
        # Corresponds to the JSON property `parameters`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TrialParameter>]
        attr_accessor :parameters
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @description = args[:description] if args.key?(:description)
          @parameters = args[:parameters] if args.key?(:parameters)
        end
      end
      
      # A message representing a parameter to be tuned.
      class GoogleCloudAiplatformV1beta1TrialParameter
        include Google::Apis::Core::Hashable
      
        # Output only. The ID of the parameter. The parameter should be defined in
        # StudySpec's Parameters.
        # Corresponds to the JSON property `parameterId`
        # @return [String]
        attr_accessor :parameter_id
      
        # Output only. The value of the parameter. `number_value` will be set if a
        # parameter defined in StudySpec is in type 'INTEGER', 'DOUBLE' or 'DISCRETE'. `
        # string_value` will be set if a parameter defined in StudySpec is in type '
        # CATEGORICAL'.
        # Corresponds to the JSON property `value`
        # @return [Object]
        attr_accessor :value
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @parameter_id = args[:parameter_id] if args.key?(:parameter_id)
          @value = args[:value] if args.key?(:value)
        end
      end
      
      # Runtime operation information for IndexEndpointService.UndeployIndex.
      class GoogleCloudAiplatformV1beta1UndeployIndexOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for IndexEndpointService.UndeployIndex.
      class GoogleCloudAiplatformV1beta1UndeployIndexRequest
        include Google::Apis::Core::Hashable
      
        # Required. The ID of the DeployedIndex to be undeployed from the IndexEndpoint.
        # Corresponds to the JSON property `deployedIndexId`
        # @return [String]
        attr_accessor :deployed_index_id
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployed_index_id = args[:deployed_index_id] if args.key?(:deployed_index_id)
        end
      end
      
      # Response message for IndexEndpointService.UndeployIndex.
      class GoogleCloudAiplatformV1beta1UndeployIndexResponse
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Runtime operation information for EndpointService.UndeployModel.
      class GoogleCloudAiplatformV1beta1UndeployModelOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for EndpointService.UndeployModel.
      class GoogleCloudAiplatformV1beta1UndeployModelRequest
        include Google::Apis::Core::Hashable
      
        # Required. The ID of the DeployedModel to be undeployed from the Endpoint.
        # Corresponds to the JSON property `deployedModelId`
        # @return [String]
        attr_accessor :deployed_model_id
      
        # If this field is provided, then the Endpoint's traffic_split will be
        # overwritten with it. If last DeployedModel is being undeployed from the
        # Endpoint, the [Endpoint.traffic_split] will always end up empty when this call
        # returns. A DeployedModel will be successfully undeployed only if it doesn't
        # have any traffic assigned to it when this method executes, or if this field
        # unassigns any traffic to it.
        # Corresponds to the JSON property `trafficSplit`
        # @return [Hash<String,Fixnum>]
        attr_accessor :traffic_split
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @deployed_model_id = args[:deployed_model_id] if args.key?(:deployed_model_id)
          @traffic_split = args[:traffic_split] if args.key?(:traffic_split)
        end
      end
      
      # Response message for EndpointService.UndeployModel.
      class GoogleCloudAiplatformV1beta1UndeployModelResponse
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Runtime operation information for SolverService.UndeploySolver.
      class GoogleCloudAiplatformV1beta1UndeploySolverOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Contains model information necessary to perform batch prediction without
      # requiring a full model import.
      class GoogleCloudAiplatformV1beta1UnmanagedContainerModel
        include Google::Apis::Core::Hashable
      
        # The path to the directory containing the Model artifact and any of its
        # supporting files.
        # Corresponds to the JSON property `artifactUri`
        # @return [String]
        attr_accessor :artifact_uri
      
        # Specification of a container for serving predictions. Some fields in this
        # message correspond to fields in the [Kubernetes Container v1 core
        # specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/
        # v1.23/#container-v1-core).
        # Corresponds to the JSON property `containerSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ModelContainerSpec]
        attr_accessor :container_spec
      
        # Contains the schemata used in Model's predictions and explanations via
        # PredictionService.Predict, PredictionService.Explain and BatchPredictionJob.
        # Corresponds to the JSON property `predictSchemata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PredictSchemata]
        attr_accessor :predict_schemata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @artifact_uri = args[:artifact_uri] if args.key?(:artifact_uri)
          @container_spec = args[:container_spec] if args.key?(:container_spec)
          @predict_schemata = args[:predict_schemata] if args.key?(:predict_schemata)
        end
      end
      
      # Runtime operation information for UpdateDeploymentResourcePool method.
      class GoogleCloudAiplatformV1beta1UpdateDeploymentResourcePoolOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Runtime operation information for ModelService.UpdateExplanationDataset.
      class GoogleCloudAiplatformV1beta1UpdateExplanationDatasetOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for ModelService.UpdateExplanationDataset.
      class GoogleCloudAiplatformV1beta1UpdateExplanationDatasetRequest
        include Google::Apis::Core::Hashable
      
        # Example-based explainability that returns the nearest neighbors from the
        # provided dataset.
        # Corresponds to the JSON property `examples`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Examples]
        attr_accessor :examples
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @examples = args[:examples] if args.key?(:examples)
        end
      end
      
      # Response message of ModelService.UpdateExplanationDataset operation.
      class GoogleCloudAiplatformV1beta1UpdateExplanationDatasetResponse
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Details of operations that perform update FeatureGroup.
      class GoogleCloudAiplatformV1beta1UpdateFeatureGroupOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Details of operations that perform update FeatureOnlineStore.
      class GoogleCloudAiplatformV1beta1UpdateFeatureOnlineStoreOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Details of operations that perform update Feature.
      class GoogleCloudAiplatformV1beta1UpdateFeatureOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Details of operations that perform update FeatureView.
      class GoogleCloudAiplatformV1beta1UpdateFeatureViewOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Details of operations that perform update Featurestore.
      class GoogleCloudAiplatformV1beta1UpdateFeaturestoreOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Runtime operation information for IndexService.UpdateIndex.
      class GoogleCloudAiplatformV1beta1UpdateIndexOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        # Runtime operation metadata with regard to Matching Engine Index.
        # Corresponds to the JSON property `nearestNeighborSearchOperationMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadata]
        attr_accessor :nearest_neighbor_search_operation_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
          @nearest_neighbor_search_operation_metadata = args[:nearest_neighbor_search_operation_metadata] if args.key?(:nearest_neighbor_search_operation_metadata)
        end
      end
      
      # Runtime operation information for JobService.
      # UpdateModelDeploymentMonitoringJob.
      class GoogleCloudAiplatformV1beta1UpdateModelDeploymentMonitoringJobOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Details of operations that perform update PersistentResource.
      class GoogleCloudAiplatformV1beta1UpdatePersistentResourceOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Runtime operation metadata for SpecialistPoolService.UpdateSpecialistPool.
      class GoogleCloudAiplatformV1beta1UpdateSpecialistPoolOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        # Output only. The name of the SpecialistPool to which the specialists are being
        # added. Format: `projects/`project_id`/locations/`location_id`/specialistPools/`
        # specialist_pool``
        # Corresponds to the JSON property `specialistPool`
        # @return [String]
        attr_accessor :specialist_pool
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
          @specialist_pool = args[:specialist_pool] if args.key?(:specialist_pool)
        end
      end
      
      # Details of operations that perform update Tensorboard.
      class GoogleCloudAiplatformV1beta1UpdateTensorboardOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Details of ModelService.UploadModel operation.
      class GoogleCloudAiplatformV1beta1UploadModelOperationMetadata
        include Google::Apis::Core::Hashable
      
        # Generic Metadata shared by all operations.
        # Corresponds to the JSON property `genericMetadata`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1GenericOperationMetadata]
        attr_accessor :generic_metadata
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @generic_metadata = args[:generic_metadata] if args.key?(:generic_metadata)
        end
      end
      
      # Request message for ModelService.UploadModel.
      class GoogleCloudAiplatformV1beta1UploadModelRequest
        include Google::Apis::Core::Hashable
      
        # A trained machine learning Model.
        # Corresponds to the JSON property `model`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1Model]
        attr_accessor :model
      
        # Optional. The ID to use for the uploaded Model, which will become the final
        # component of the model resource name. This value may be up to 63 characters,
        # and valid characters are `[a-z0-9_-]`. The first character cannot be a number
        # or hyphen.
        # Corresponds to the JSON property `modelId`
        # @return [String]
        attr_accessor :model_id
      
        # Optional. The resource name of the model into which to upload the version.
        # Only specify this field when uploading a new version.
        # Corresponds to the JSON property `parentModel`
        # @return [String]
        attr_accessor :parent_model
      
        # Optional. The user-provided custom service account to use to do the model
        # upload. If empty, [Vertex AI Service Agent](https://cloud.google.com/vertex-ai/
        # docs/general/access-control#service-agents) will be used. Users uploading the
        # Model must have the `iam.serviceAccounts.actAs` permission on this service
        # account. Also, this account must belong to the project specified in the `
        # parent` field and have all necessary read permissions.
        # Corresponds to the JSON property `serviceAccount`
        # @return [String]
        attr_accessor :service_account
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @model = args[:model] if args.key?(:model)
          @model_id = args[:model_id] if args.key?(:model_id)
          @parent_model = args[:parent_model] if args.key?(:parent_model)
          @service_account = args[:service_account] if args.key?(:service_account)
        end
      end
      
      # Response message of ModelService.UploadModel operation.
      class GoogleCloudAiplatformV1beta1UploadModelResponse
        include Google::Apis::Core::Hashable
      
        # The name of the uploaded Model resource. Format: `projects/`project`/locations/
        # `location`/models/`model``
        # Corresponds to the JSON property `model`
        # @return [String]
        attr_accessor :model
      
        # Output only. The version ID of the model that is uploaded.
        # Corresponds to the JSON property `modelVersionId`
        # @return [String]
        attr_accessor :model_version_id
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @model = args[:model] if args.key?(:model)
          @model_version_id = args[:model_version_id] if args.key?(:model_version_id)
        end
      end
      
      # Request message for IndexService.UpsertDatapoints
      class GoogleCloudAiplatformV1beta1UpsertDatapointsRequest
        include Google::Apis::Core::Hashable
      
        # A list of datapoints to be created/updated.
        # Corresponds to the JSON property `datapoints`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1IndexDatapoint>]
        attr_accessor :datapoints
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @datapoints = args[:datapoints] if args.key?(:datapoints)
        end
      end
      
      # Response message for IndexService.UpsertDatapoints
      class GoogleCloudAiplatformV1beta1UpsertDatapointsResponse
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # References an API call. It contains more information about long running
      # operation and Jobs that are triggered by the API call.
      class GoogleCloudAiplatformV1beta1UserActionReference
        include Google::Apis::Core::Hashable
      
        # For API calls that start a LabelingJob. Resource name of the LabelingJob.
        # Format: `projects/`project`/locations/`location`/dataLabelingJobs/`
        # data_labeling_job``
        # Corresponds to the JSON property `dataLabelingJob`
        # @return [String]
        attr_accessor :data_labeling_job
      
        # The method name of the API RPC call. For example, "/google.cloud.aiplatform.`
        # apiVersion`.DatasetService.CreateDataset"
        # Corresponds to the JSON property `method`
        # @return [String]
        attr_accessor :method_prop
      
        # For API calls that return a long running operation. Resource name of the long
        # running operation. Format: `projects/`project`/locations/`location`/operations/
        # `operation``
        # Corresponds to the JSON property `operation`
        # @return [String]
        attr_accessor :operation
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @data_labeling_job = args[:data_labeling_job] if args.key?(:data_labeling_job)
          @method_prop = args[:method_prop] if args.key?(:method_prop)
          @operation = args[:operation] if args.key?(:operation)
        end
      end
      
      # Value is the value of the field.
      class GoogleCloudAiplatformV1beta1Value
        include Google::Apis::Core::Hashable
      
        # A double value.
        # Corresponds to the JSON property `doubleValue`
        # @return [Float]
        attr_accessor :double_value
      
        # An integer value.
        # Corresponds to the JSON property `intValue`
        # @return [Fixnum]
        attr_accessor :int_value
      
        # A string value.
        # Corresponds to the JSON property `stringValue`
        # @return [String]
        attr_accessor :string_value
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @double_value = args[:double_value] if args.key?(:double_value)
          @int_value = args[:int_value] if args.key?(:int_value)
          @string_value = args[:string_value] if args.key?(:string_value)
        end
      end
      
      # Represents the spec of a worker pool in a job.
      class GoogleCloudAiplatformV1beta1WorkerPoolSpec
        include Google::Apis::Core::Hashable
      
        # The spec of a Container.
        # Corresponds to the JSON property `containerSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1ContainerSpec]
        attr_accessor :container_spec
      
        # Represents the spec of disk options.
        # Corresponds to the JSON property `diskSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1DiskSpec]
        attr_accessor :disk_spec
      
        # Specification of a single machine.
        # Corresponds to the JSON property `machineSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1MachineSpec]
        attr_accessor :machine_spec
      
        # Optional. List of NFS mount spec.
        # Corresponds to the JSON property `nfsMounts`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1NfsMount>]
        attr_accessor :nfs_mounts
      
        # The spec of a Python packaged code.
        # Corresponds to the JSON property `pythonPackageSpec`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1PythonPackageSpec]
        attr_accessor :python_package_spec
      
        # Optional. The number of worker replicas to use for this worker pool.
        # Corresponds to the JSON property `replicaCount`
        # @return [Fixnum]
        attr_accessor :replica_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @container_spec = args[:container_spec] if args.key?(:container_spec)
          @disk_spec = args[:disk_spec] if args.key?(:disk_spec)
          @machine_spec = args[:machine_spec] if args.key?(:machine_spec)
          @nfs_mounts = args[:nfs_mounts] if args.key?(:nfs_mounts)
          @python_package_spec = args[:python_package_spec] if args.key?(:python_package_spec)
          @replica_count = args[:replica_count] if args.key?(:replica_count)
        end
      end
      
      # Contains Feature values to be written for a specific entity.
      class GoogleCloudAiplatformV1beta1WriteFeatureValuesPayload
        include Google::Apis::Core::Hashable
      
        # Required. The ID of the entity.
        # Corresponds to the JSON property `entityId`
        # @return [String]
        attr_accessor :entity_id
      
        # Required. Feature values to be written, mapping from Feature ID to value. Up
        # to 100,000 `feature_values` entries may be written across all payloads. The
        # feature generation time, aligned by days, must be no older than five years (
        # 1825 days) and no later than one year (366 days) in the future.
        # Corresponds to the JSON property `featureValues`
        # @return [Hash<String,Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1FeatureValue>]
        attr_accessor :feature_values
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @entity_id = args[:entity_id] if args.key?(:entity_id)
          @feature_values = args[:feature_values] if args.key?(:feature_values)
        end
      end
      
      # Request message for FeaturestoreOnlineServingService.WriteFeatureValues.
      class GoogleCloudAiplatformV1beta1WriteFeatureValuesRequest
        include Google::Apis::Core::Hashable
      
        # Required. The entities to be written. Up to 100,000 feature values can be
        # written across all `payloads`.
        # Corresponds to the JSON property `payloads`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1WriteFeatureValuesPayload>]
        attr_accessor :payloads
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @payloads = args[:payloads] if args.key?(:payloads)
        end
      end
      
      # Response message for FeaturestoreOnlineServingService.WriteFeatureValues.
      class GoogleCloudAiplatformV1beta1WriteFeatureValuesResponse
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Request message for TensorboardService.WriteTensorboardExperimentData.
      class GoogleCloudAiplatformV1beta1WriteTensorboardExperimentDataRequest
        include Google::Apis::Core::Hashable
      
        # Required. Requests containing per-run TensorboardTimeSeries data to write.
        # Corresponds to the JSON property `writeRunDataRequests`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest>]
        attr_accessor :write_run_data_requests
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @write_run_data_requests = args[:write_run_data_requests] if args.key?(:write_run_data_requests)
        end
      end
      
      # Response message for TensorboardService.WriteTensorboardExperimentData.
      class GoogleCloudAiplatformV1beta1WriteTensorboardExperimentDataResponse
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # Request message for TensorboardService.WriteTensorboardRunData.
      class GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest
        include Google::Apis::Core::Hashable
      
        # Required. The resource name of the TensorboardRun to write data to. Format: `
        # projects/`project`/locations/`location`/tensorboards/`tensorboard`/experiments/
        # `experiment`/runs/`run``
        # Corresponds to the JSON property `tensorboardRun`
        # @return [String]
        attr_accessor :tensorboard_run
      
        # Required. The TensorboardTimeSeries data to write. Values with in a time
        # series are indexed by their step value. Repeated writes to the same step will
        # overwrite the existing value for that step. The upper limit of data points per
        # write request is 5000.
        # Corresponds to the JSON property `timeSeriesData`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1TimeSeriesData>]
        attr_accessor :time_series_data
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @tensorboard_run = args[:tensorboard_run] if args.key?(:tensorboard_run)
          @time_series_data = args[:time_series_data] if args.key?(:time_series_data)
        end
      end
      
      # Response message for TensorboardService.WriteTensorboardRunData.
      class GoogleCloudAiplatformV1beta1WriteTensorboardRunDataResponse
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # An explanation method that redistributes Integrated Gradients attributions to
      # segmented regions, taking advantage of the model's fully differentiable
      # structure. Refer to this paper for more details: https://arxiv.org/abs/1906.
      # 02825 Supported only by image Models.
      class GoogleCloudAiplatformV1beta1XraiAttribution
        include Google::Apis::Core::Hashable
      
        # Config for blur baseline. When enabled, a linear path from the maximally
        # blurred image to the input image is created. Using a blurred baseline instead
        # of zero (black image) is motivated by the BlurIG approach explained here:
        # https://arxiv.org/abs/2004.03383
        # Corresponds to the JSON property `blurBaselineConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1BlurBaselineConfig]
        attr_accessor :blur_baseline_config
      
        # Config for SmoothGrad approximation of gradients. When enabled, the gradients
        # are approximated by averaging the gradients from noisy samples in the vicinity
        # of the inputs. Adding noise can help improve the computed gradients. Refer to
        # this paper for more details: https://arxiv.org/pdf/1706.03825.pdf
        # Corresponds to the JSON property `smoothGradConfig`
        # @return [Google::Apis::AiplatformV1beta1::GoogleCloudAiplatformV1beta1SmoothGradConfig]
        attr_accessor :smooth_grad_config
      
        # Required. The number of steps for approximating the path integral. A good
        # value to start is 50 and gradually increase until the sum to diff property is
        # met within the desired error range. Valid range of its value is [1, 100],
        # inclusively.
        # Corresponds to the JSON property `stepCount`
        # @return [Fixnum]
        attr_accessor :step_count
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @blur_baseline_config = args[:blur_baseline_config] if args.key?(:blur_baseline_config)
          @smooth_grad_config = args[:smooth_grad_config] if args.key?(:smooth_grad_config)
          @step_count = args[:step_count] if args.key?(:step_count)
        end
      end
      
      # The response message for Locations.ListLocations.
      class GoogleCloudLocationListLocationsResponse
        include Google::Apis::Core::Hashable
      
        # A list of locations that matches the specified filter in the request.
        # Corresponds to the JSON property `locations`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleCloudLocationLocation>]
        attr_accessor :locations
      
        # The standard List next-page token.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @locations = args[:locations] if args.key?(:locations)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
        end
      end
      
      # A resource that represents a Google Cloud location.
      class GoogleCloudLocationLocation
        include Google::Apis::Core::Hashable
      
        # The friendly name for this location, typically a nearby city name. For example,
        # "Tokyo".
        # Corresponds to the JSON property `displayName`
        # @return [String]
        attr_accessor :display_name
      
        # Cross-service attributes for the location. For example `"cloud.googleapis.com/
        # region": "us-east1"`
        # Corresponds to the JSON property `labels`
        # @return [Hash<String,String>]
        attr_accessor :labels
      
        # The canonical id for this location. For example: `"us-east1"`.
        # Corresponds to the JSON property `locationId`
        # @return [String]
        attr_accessor :location_id
      
        # Service-specific metadata. For example the available capacity at the given
        # location.
        # Corresponds to the JSON property `metadata`
        # @return [Hash<String,Object>]
        attr_accessor :metadata
      
        # Resource name for the location, which may vary between implementations. For
        # example: `"projects/example-project/locations/us-east1"`
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @display_name = args[:display_name] if args.key?(:display_name)
          @labels = args[:labels] if args.key?(:labels)
          @location_id = args[:location_id] if args.key?(:location_id)
          @metadata = args[:metadata] if args.key?(:metadata)
          @name = args[:name] if args.key?(:name)
        end
      end
      
      # Associates `members`, or principals, with a `role`.
      class GoogleIamV1Binding
        include Google::Apis::Core::Hashable
      
        # Represents a textual expression in the Common Expression Language (CEL) syntax.
        # CEL is a C-like expression language. The syntax and semantics of CEL are
        # documented at https://github.com/google/cel-spec. Example (Comparison): title:
        # "Summary size limit" description: "Determines if a summary is less than 100
        # chars" expression: "document.summary.size() < 100" Example (Equality): title: "
        # Requestor is owner" description: "Determines if requestor is the document
        # owner" expression: "document.owner == request.auth.claims.email" Example (
        # Logic): title: "Public documents" description: "Determine whether the document
        # should be publicly visible" expression: "document.type != 'private' &&
        # document.type != 'internal'" Example (Data Manipulation): title: "Notification
        # string" description: "Create a notification string with a timestamp."
        # expression: "'New message received at ' + string(document.create_time)" The
        # exact variables and functions that may be referenced within an expression are
        # determined by the service that evaluates it. See the service documentation for
        # additional information.
        # Corresponds to the JSON property `condition`
        # @return [Google::Apis::AiplatformV1beta1::GoogleTypeExpr]
        attr_accessor :condition
      
        # Specifies the principals requesting access for a Google Cloud resource. `
        # members` can have the following values: * `allUsers`: A special identifier
        # that represents anyone who is on the internet; with or without a Google
        # account. * `allAuthenticatedUsers`: A special identifier that represents
        # anyone who is authenticated with a Google account or a service account. Does
        # not include identities that come from external identity providers (IdPs)
        # through identity federation. * `user:`emailid``: An email address that
        # represents a specific Google account. For example, `alice@example.com` . * `
        # serviceAccount:`emailid``: An email address that represents a Google service
        # account. For example, `my-other-app@appspot.gserviceaccount.com`. * `
        # serviceAccount:`projectid`.svc.id.goog[`namespace`/`kubernetes-sa`]`: An
        # identifier for a [Kubernetes service account](https://cloud.google.com/
        # kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-
        # project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:`emailid``: An
        # email address that represents a Google group. For example, `admins@example.com`
        # . * `domain:`domain``: The G Suite domain (primary) that represents all the
        # users of that domain. For example, `google.com` or `example.com`. * `deleted:
        # user:`emailid`?uid=`uniqueid``: An email address (plus unique identifier)
        # representing a user that has been recently deleted. For example, `alice@
        # example.com?uid=123456789012345678901`. If the user is recovered, this value
        # reverts to `user:`emailid`` and the recovered user retains the role in the
        # binding. * `deleted:serviceAccount:`emailid`?uid=`uniqueid``: An email address
        # (plus unique identifier) representing a service account that has been recently
        # deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=
        # 123456789012345678901`. If the service account is undeleted, this value
        # reverts to `serviceAccount:`emailid`` and the undeleted service account
        # retains the role in the binding. * `deleted:group:`emailid`?uid=`uniqueid``:
        # An email address (plus unique identifier) representing a Google group that has
        # been recently deleted. For example, `admins@example.com?uid=
        # 123456789012345678901`. If the group is recovered, this value reverts to `
        # group:`emailid`` and the recovered group retains the role in the binding.
        # Corresponds to the JSON property `members`
        # @return [Array<String>]
        attr_accessor :members
      
        # Role that is assigned to the list of `members`, or principals. For example, `
        # roles/viewer`, `roles/editor`, or `roles/owner`.
        # Corresponds to the JSON property `role`
        # @return [String]
        attr_accessor :role
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @condition = args[:condition] if args.key?(:condition)
          @members = args[:members] if args.key?(:members)
          @role = args[:role] if args.key?(:role)
        end
      end
      
      # Request message for `GetIamPolicy` method.
      class GoogleIamV1GetIamPolicyRequest
        include Google::Apis::Core::Hashable
      
        # Encapsulates settings provided to GetIamPolicy.
        # Corresponds to the JSON property `options`
        # @return [Google::Apis::AiplatformV1beta1::GoogleIamV1GetPolicyOptions]
        attr_accessor :options
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @options = args[:options] if args.key?(:options)
        end
      end
      
      # Encapsulates settings provided to GetIamPolicy.
      class GoogleIamV1GetPolicyOptions
        include Google::Apis::Core::Hashable
      
        # Optional. The maximum policy version that will be used to format the policy.
        # Valid values are 0, 1, and 3. Requests specifying an invalid value will be
        # rejected. Requests for policies with any conditional role bindings must
        # specify version 3. Policies with no conditional role bindings may specify any
        # valid value or leave the field unset. The policy in the response might use the
        # policy version that you specified, or it might use a lower policy version. For
        # example, if you specify version 3, but the policy has no conditional role
        # bindings, the response uses version 1. To learn which resources support
        # conditions in their IAM policies, see the [IAM documentation](https://cloud.
        # google.com/iam/help/conditions/resource-policies).
        # Corresponds to the JSON property `requestedPolicyVersion`
        # @return [Fixnum]
        attr_accessor :requested_policy_version
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @requested_policy_version = args[:requested_policy_version] if args.key?(:requested_policy_version)
        end
      end
      
      # An Identity and Access Management (IAM) policy, which specifies access
      # controls for Google Cloud resources. A `Policy` is a collection of `bindings`.
      # A `binding` binds one or more `members`, or principals, to a single `role`.
      # Principals can be user accounts, service accounts, Google groups, and domains (
      # such as G Suite). A `role` is a named list of permissions; each `role` can be
      # an IAM predefined role or a user-created custom role. For some types of Google
      # Cloud resources, a `binding` can also specify a `condition`, which is a
      # logical expression that allows access to a resource only if the expression
      # evaluates to `true`. A condition can add constraints based on attributes of
      # the request, the resource, or both. To learn which resources support
      # conditions in their IAM policies, see the [IAM documentation](https://cloud.
      # google.com/iam/help/conditions/resource-policies). **JSON example:** ``` ` "
      # bindings": [ ` "role": "roles/resourcemanager.organizationAdmin", "members": [
      # "user:mike@example.com", "group:admins@example.com", "domain:google.com", "
      # serviceAccount:my-project-id@appspot.gserviceaccount.com" ] `, ` "role": "
      # roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com"
      # ], "condition": ` "title": "expirable access", "description": "Does not grant
      # access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:
      # 00:00.000Z')", ` ` ], "etag": "BwWWja0YfJA=", "version": 3 ` ``` **YAML
      # example:** ``` bindings: - members: - user:mike@example.com - group:admins@
      # example.com - domain:google.com - serviceAccount:my-project-id@appspot.
      # gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: -
      # user:eve@example.com role: roles/resourcemanager.organizationViewer condition:
      # title: expirable access description: Does not grant access after Sep 2020
      # expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag:
      # BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the
      # [IAM documentation](https://cloud.google.com/iam/docs/).
      class GoogleIamV1Policy
        include Google::Apis::Core::Hashable
      
        # Associates a list of `members`, or principals, with a `role`. Optionally, may
        # specify a `condition` that determines how and when the `bindings` are applied.
        # Each of the `bindings` must contain at least one principal. The `bindings` in
        # a `Policy` can refer to up to 1,500 principals; up to 250 of these principals
        # can be Google groups. Each occurrence of a principal counts towards these
        # limits. For example, if the `bindings` grant 50 different roles to `user:alice@
        # example.com`, and not to any other principal, then you can add another 1,450
        # principals to the `bindings` in the `Policy`.
        # Corresponds to the JSON property `bindings`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleIamV1Binding>]
        attr_accessor :bindings
      
        # `etag` is used for optimistic concurrency control as a way to help prevent
        # simultaneous updates of a policy from overwriting each other. It is strongly
        # suggested that systems make use of the `etag` in the read-modify-write cycle
        # to perform policy updates in order to avoid race conditions: An `etag` is
        # returned in the response to `getIamPolicy`, and systems are expected to put
        # that etag in the request to `setIamPolicy` to ensure that their change will be
        # applied to the same version of the policy. **Important:** If you use IAM
        # Conditions, you must include the `etag` field whenever you call `setIamPolicy`.
        # If you omit this field, then IAM allows you to overwrite a version `3` policy
        # with a version `1` policy, and all of the conditions in the version `3` policy
        # are lost.
        # Corresponds to the JSON property `etag`
        # NOTE: Values are automatically base64 encoded/decoded in the client library.
        # @return [String]
        attr_accessor :etag
      
        # Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
        # Requests that specify an invalid value are rejected. Any operation that
        # affects conditional role bindings must specify version `3`. This requirement
        # applies to the following operations: * Getting a policy that includes a
        # conditional role binding * Adding a conditional role binding to a policy *
        # Changing a conditional role binding in a policy * Removing any role binding,
        # with or without a condition, from a policy that includes conditions **
        # Important:** If you use IAM Conditions, you must include the `etag` field
        # whenever you call `setIamPolicy`. If you omit this field, then IAM allows you
        # to overwrite a version `3` policy with a version `1` policy, and all of the
        # conditions in the version `3` policy are lost. If a policy does not include
        # any conditions, operations on that policy may specify any valid version or
        # leave the field unset. To learn which resources support conditions in their
        # IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/
        # conditions/resource-policies).
        # Corresponds to the JSON property `version`
        # @return [Fixnum]
        attr_accessor :version
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @bindings = args[:bindings] if args.key?(:bindings)
          @etag = args[:etag] if args.key?(:etag)
          @version = args[:version] if args.key?(:version)
        end
      end
      
      # Request message for `SetIamPolicy` method.
      class GoogleIamV1SetIamPolicyRequest
        include Google::Apis::Core::Hashable
      
        # An Identity and Access Management (IAM) policy, which specifies access
        # controls for Google Cloud resources. A `Policy` is a collection of `bindings`.
        # A `binding` binds one or more `members`, or principals, to a single `role`.
        # Principals can be user accounts, service accounts, Google groups, and domains (
        # such as G Suite). A `role` is a named list of permissions; each `role` can be
        # an IAM predefined role or a user-created custom role. For some types of Google
        # Cloud resources, a `binding` can also specify a `condition`, which is a
        # logical expression that allows access to a resource only if the expression
        # evaluates to `true`. A condition can add constraints based on attributes of
        # the request, the resource, or both. To learn which resources support
        # conditions in their IAM policies, see the [IAM documentation](https://cloud.
        # google.com/iam/help/conditions/resource-policies). **JSON example:** ``` ` "
        # bindings": [ ` "role": "roles/resourcemanager.organizationAdmin", "members": [
        # "user:mike@example.com", "group:admins@example.com", "domain:google.com", "
        # serviceAccount:my-project-id@appspot.gserviceaccount.com" ] `, ` "role": "
        # roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com"
        # ], "condition": ` "title": "expirable access", "description": "Does not grant
        # access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:
        # 00:00.000Z')", ` ` ], "etag": "BwWWja0YfJA=", "version": 3 ` ``` **YAML
        # example:** ``` bindings: - members: - user:mike@example.com - group:admins@
        # example.com - domain:google.com - serviceAccount:my-project-id@appspot.
        # gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: -
        # user:eve@example.com role: roles/resourcemanager.organizationViewer condition:
        # title: expirable access description: Does not grant access after Sep 2020
        # expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag:
        # BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the
        # [IAM documentation](https://cloud.google.com/iam/docs/).
        # Corresponds to the JSON property `policy`
        # @return [Google::Apis::AiplatformV1beta1::GoogleIamV1Policy]
        attr_accessor :policy
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @policy = args[:policy] if args.key?(:policy)
        end
      end
      
      # Request message for `TestIamPermissions` method.
      class GoogleIamV1TestIamPermissionsRequest
        include Google::Apis::Core::Hashable
      
        # The set of permissions to check for the `resource`. Permissions with wildcards
        # (such as `*` or `storage.*`) are not allowed. For more information see [IAM
        # Overview](https://cloud.google.com/iam/docs/overview#permissions).
        # Corresponds to the JSON property `permissions`
        # @return [Array<String>]
        attr_accessor :permissions
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @permissions = args[:permissions] if args.key?(:permissions)
        end
      end
      
      # Response message for `TestIamPermissions` method.
      class GoogleIamV1TestIamPermissionsResponse
        include Google::Apis::Core::Hashable
      
        # A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
        # Corresponds to the JSON property `permissions`
        # @return [Array<String>]
        attr_accessor :permissions
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @permissions = args[:permissions] if args.key?(:permissions)
        end
      end
      
      # The response message for Operations.ListOperations.
      class GoogleLongrunningListOperationsResponse
        include Google::Apis::Core::Hashable
      
        # The standard List next-page token.
        # Corresponds to the JSON property `nextPageToken`
        # @return [String]
        attr_accessor :next_page_token
      
        # A list of operations that matches the specified filter in the request.
        # Corresponds to the JSON property `operations`
        # @return [Array<Google::Apis::AiplatformV1beta1::GoogleLongrunningOperation>]
        attr_accessor :operations
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @next_page_token = args[:next_page_token] if args.key?(:next_page_token)
          @operations = args[:operations] if args.key?(:operations)
        end
      end
      
      # This resource represents a long-running operation that is the result of a
      # network API call.
      class GoogleLongrunningOperation
        include Google::Apis::Core::Hashable
      
        # If the value is `false`, it means the operation is still in progress. If `true`
        # , the operation is completed, and either `error` or `response` is available.
        # Corresponds to the JSON property `done`
        # @return [Boolean]
        attr_accessor :done
        alias_method :done?, :done
      
        # The `Status` type defines a logical error model that is suitable for different
        # programming environments, including REST APIs and RPC APIs. It is used by [
        # gRPC](https://github.com/grpc). Each `Status` message contains three pieces of
        # data: error code, error message, and error details. You can find out more
        # about this error model and how to work with it in the [API Design Guide](https:
        # //cloud.google.com/apis/design/errors).
        # Corresponds to the JSON property `error`
        # @return [Google::Apis::AiplatformV1beta1::GoogleRpcStatus]
        attr_accessor :error
      
        # Service-specific metadata associated with the operation. It typically contains
        # progress information and common metadata such as create time. Some services
        # might not provide such metadata. Any method that returns a long-running
        # operation should document the metadata type, if any.
        # Corresponds to the JSON property `metadata`
        # @return [Hash<String,Object>]
        attr_accessor :metadata
      
        # The server-assigned name, which is only unique within the same service that
        # originally returns it. If you use the default HTTP mapping, the `name` should
        # be a resource name ending with `operations/`unique_id``.
        # Corresponds to the JSON property `name`
        # @return [String]
        attr_accessor :name
      
        # The normal, successful response of the operation. If the original method
        # returns no data on success, such as `Delete`, the response is `google.protobuf.
        # Empty`. If the original method is standard `Get`/`Create`/`Update`, the
        # response should be the resource. For other methods, the response should have
        # the type `XxxResponse`, where `Xxx` is the original method name. For example,
        # if the original method name is `TakeSnapshot()`, the inferred response type is
        # `TakeSnapshotResponse`.
        # Corresponds to the JSON property `response`
        # @return [Hash<String,Object>]
        attr_accessor :response
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @done = args[:done] if args.key?(:done)
          @error = args[:error] if args.key?(:error)
          @metadata = args[:metadata] if args.key?(:metadata)
          @name = args[:name] if args.key?(:name)
          @response = args[:response] if args.key?(:response)
        end
      end
      
      # A generic empty message that you can re-use to avoid defining duplicated empty
      # messages in your APIs. A typical example is to use it as the request or the
      # response type of an API method. For instance: service Foo ` rpc Bar(google.
      # protobuf.Empty) returns (google.protobuf.Empty); `
      class GoogleProtobufEmpty
        include Google::Apis::Core::Hashable
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
        end
      end
      
      # The `Status` type defines a logical error model that is suitable for different
      # programming environments, including REST APIs and RPC APIs. It is used by [
      # gRPC](https://github.com/grpc). Each `Status` message contains three pieces of
      # data: error code, error message, and error details. You can find out more
      # about this error model and how to work with it in the [API Design Guide](https:
      # //cloud.google.com/apis/design/errors).
      class GoogleRpcStatus
        include Google::Apis::Core::Hashable
      
        # The status code, which should be an enum value of google.rpc.Code.
        # Corresponds to the JSON property `code`
        # @return [Fixnum]
        attr_accessor :code
      
        # A list of messages that carry the error details. There is a common set of
        # message types for APIs to use.
        # Corresponds to the JSON property `details`
        # @return [Array<Hash<String,Object>>]
        attr_accessor :details
      
        # A developer-facing error message, which should be in English. Any user-facing
        # error message should be localized and sent in the google.rpc.Status.details
        # field, or localized by the client.
        # Corresponds to the JSON property `message`
        # @return [String]
        attr_accessor :message
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @code = args[:code] if args.key?(:code)
          @details = args[:details] if args.key?(:details)
          @message = args[:message] if args.key?(:message)
        end
      end
      
      # Represents a color in the RGBA color space. This representation is designed
      # for simplicity of conversion to and from color representations in various
      # languages over compactness. For example, the fields of this representation can
      # be trivially provided to the constructor of `java.awt.Color` in Java; it can
      # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
      # method in iOS; and, with just a little work, it can be easily formatted into a
      # CSS `rgba()` string in JavaScript. This reference page doesn't have
      # information about the absolute color space that should be used to interpret
      # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
      # applications should assume the sRGB color space. When color equality needs to
      # be decided, implementations, unless documented otherwise, treat two colors as
      # equal if all their red, green, blue, and alpha values each differ by at most `
      # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
      # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
      # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
      # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
      # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
      # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
      # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
      # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
      # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
      # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
      # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
      # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
      # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
      # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
      # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
      # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
      # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
      # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
      # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
      # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
      # autorelease]; return result; ` // ... Example (JavaScript): // ... var
      # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
      # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
      # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
      # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
      # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
      # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
      # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
      # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
      # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
      # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
      # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
      # / ...
      class GoogleTypeColor
        include Google::Apis::Core::Hashable
      
        # The fraction of this color that should be applied to the pixel. That is, the
        # final pixel color is defined by the equation: `pixel color = alpha * (this
        # color) + (1.0 - alpha) * (background color)` This means that a value of 1.0
        # corresponds to a solid color, whereas a value of 0.0 corresponds to a
        # completely transparent color. This uses a wrapper message rather than a simple
        # float scalar so that it is possible to distinguish between a default value and
        # the value being unset. If omitted, this color object is rendered as a solid
        # color (as if the alpha value had been explicitly given a value of 1.0).
        # Corresponds to the JSON property `alpha`
        # @return [Float]
        attr_accessor :alpha
      
        # The amount of blue in the color as a value in the interval [0, 1].
        # Corresponds to the JSON property `blue`
        # @return [Float]
        attr_accessor :blue
      
        # The amount of green in the color as a value in the interval [0, 1].
        # Corresponds to the JSON property `green`
        # @return [Float]
        attr_accessor :green
      
        # The amount of red in the color as a value in the interval [0, 1].
        # Corresponds to the JSON property `red`
        # @return [Float]
        attr_accessor :red
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @alpha = args[:alpha] if args.key?(:alpha)
          @blue = args[:blue] if args.key?(:blue)
          @green = args[:green] if args.key?(:green)
          @red = args[:red] if args.key?(:red)
        end
      end
      
      # Represents a textual expression in the Common Expression Language (CEL) syntax.
      # CEL is a C-like expression language. The syntax and semantics of CEL are
      # documented at https://github.com/google/cel-spec. Example (Comparison): title:
      # "Summary size limit" description: "Determines if a summary is less than 100
      # chars" expression: "document.summary.size() < 100" Example (Equality): title: "
      # Requestor is owner" description: "Determines if requestor is the document
      # owner" expression: "document.owner == request.auth.claims.email" Example (
      # Logic): title: "Public documents" description: "Determine whether the document
      # should be publicly visible" expression: "document.type != 'private' &&
      # document.type != 'internal'" Example (Data Manipulation): title: "Notification
      # string" description: "Create a notification string with a timestamp."
      # expression: "'New message received at ' + string(document.create_time)" The
      # exact variables and functions that may be referenced within an expression are
      # determined by the service that evaluates it. See the service documentation for
      # additional information.
      class GoogleTypeExpr
        include Google::Apis::Core::Hashable
      
        # Optional. Description of the expression. This is a longer text which describes
        # the expression, e.g. when hovered over it in a UI.
        # Corresponds to the JSON property `description`
        # @return [String]
        attr_accessor :description
      
        # Textual representation of an expression in Common Expression Language syntax.
        # Corresponds to the JSON property `expression`
        # @return [String]
        attr_accessor :expression
      
        # Optional. String indicating the location of the expression for error reporting,
        # e.g. a file name and a position in the file.
        # Corresponds to the JSON property `location`
        # @return [String]
        attr_accessor :location
      
        # Optional. Title for the expression, i.e. a short string describing its purpose.
        # This can be used e.g. in UIs which allow to enter the expression.
        # Corresponds to the JSON property `title`
        # @return [String]
        attr_accessor :title
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @description = args[:description] if args.key?(:description)
          @expression = args[:expression] if args.key?(:expression)
          @location = args[:location] if args.key?(:location)
          @title = args[:title] if args.key?(:title)
        end
      end
      
      # Represents a time interval, encoded as a Timestamp start (inclusive) and a
      # Timestamp end (exclusive). The start must be less than or equal to the end.
      # When the start equals the end, the interval is empty (matches no time). When
      # both start and end are unspecified, the interval matches any time.
      class GoogleTypeInterval
        include Google::Apis::Core::Hashable
      
        # Optional. Exclusive end of the interval. If specified, a Timestamp matching
        # this interval will have to be before the end.
        # Corresponds to the JSON property `endTime`
        # @return [String]
        attr_accessor :end_time
      
        # Optional. Inclusive start of the interval. If specified, a Timestamp matching
        # this interval will have to be the same or after the start.
        # Corresponds to the JSON property `startTime`
        # @return [String]
        attr_accessor :start_time
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @end_time = args[:end_time] if args.key?(:end_time)
          @start_time = args[:start_time] if args.key?(:start_time)
        end
      end
      
      # Represents an amount of money with its currency type.
      class GoogleTypeMoney
        include Google::Apis::Core::Hashable
      
        # The three-letter currency code defined in ISO 4217.
        # Corresponds to the JSON property `currencyCode`
        # @return [String]
        attr_accessor :currency_code
      
        # Number of nano (10^-9) units of the amount. The value must be between -999,999,
        # 999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be
        # positive or zero. If `units` is zero, `nanos` can be positive, zero, or
        # negative. If `units` is negative, `nanos` must be negative or zero. For
        # example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
        # Corresponds to the JSON property `nanos`
        # @return [Fixnum]
        attr_accessor :nanos
      
        # The whole units of the amount. For example if `currencyCode` is `"USD"`, then
        # 1 unit is one US dollar.
        # Corresponds to the JSON property `units`
        # @return [Fixnum]
        attr_accessor :units
      
        def initialize(**args)
           update!(**args)
        end
      
        # Update properties of this object
        def update!(**args)
          @currency_code = args[:currency_code] if args.key?(:currency_code)
          @nanos = args[:nanos] if args.key?(:nanos)
          @units = args[:units] if args.key?(:units)
        end
      end
    end
  end
end
